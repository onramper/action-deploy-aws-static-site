"use strict";var _a,_b,_c;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnSubnetGroup=exports.CfnParameterGroup=exports.CfnCluster=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dax_CfnClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCluster),error}cdk.requireProperty(props,"iamRoleArn",this),cdk.requireProperty(props,"nodeType",this),cdk.requireProperty(props,"replicationFactor",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrClusterDiscoveryEndpoint=cdk.Token.asString(this.getAtt("ClusterDiscoveryEndpoint",cdk.ResolutionTypeHint.STRING)),this.attrClusterDiscoveryEndpointUrl=cdk.Token.asString(this.getAtt("ClusterDiscoveryEndpointURL",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.availabilityZones=props.availabilityZones,this.clusterEndpointEncryptionType=props.clusterEndpointEncryptionType,this.clusterName=props.clusterName,this.description=props.description,this.iamRoleArn=props.iamRoleArn,this.nodeType=props.nodeType,this.notificationTopicArn=props.notificationTopicArn,this.parameterGroupName=props.parameterGroupName,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.replicationFactor=props.replicationFactor,this.securityGroupIds=props.securityGroupIds,this.sseSpecification=props.sseSpecification,this.subnetGroupName=props.subnetGroupName,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::DAX::Cluster",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{availabilityZones:this.availabilityZones,clusterEndpointEncryptionType:this.clusterEndpointEncryptionType,clusterName:this.clusterName,description:this.description,iamRoleArn:this.iamRoleArn,nodeType:this.nodeType,notificationTopicArn:this.notificationTopicArn,parameterGroupName:this.parameterGroupName,preferredMaintenanceWindow:this.preferredMaintenanceWindow,replicationFactor:this.replicationFactor,securityGroupIds:this.securityGroupIds,sseSpecification:this.sseSpecification,subnetGroupName:this.subnetGroupName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterPropsToCloudFormation(props)}}exports.CfnCluster=CfnCluster,_a=JSII_RTTI_SYMBOL_1,CfnCluster[_a]={fqn:"aws-cdk-lib.aws_dax.CfnCluster",version:"2.94.0"},CfnCluster.CFN_RESOURCE_TYPE_NAME="AWS::DAX::Cluster";function CfnClusterSSESpecificationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("sseEnabled",cdk.validateBoolean)(properties.sseEnabled)),errors.wrap('supplied properties not correct for "SSESpecificationProperty"')}function convertCfnClusterSSESpecificationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterSSESpecificationPropertyValidator(properties).assertSuccess(),{SSEEnabled:cdk.booleanToCloudFormation(properties.sseEnabled)}):properties}function CfnClusterSSESpecificationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("sseEnabled","SSEEnabled",properties.SSEEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SSEEnabled):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZones",cdk.listValidator(cdk.validateString))(properties.availabilityZones)),errors.collect(cdk.propertyValidator("clusterEndpointEncryptionType",cdk.validateString)(properties.clusterEndpointEncryptionType)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("iamRoleArn",cdk.requiredValidator)(properties.iamRoleArn)),errors.collect(cdk.propertyValidator("iamRoleArn",cdk.validateString)(properties.iamRoleArn)),errors.collect(cdk.propertyValidator("nodeType",cdk.requiredValidator)(properties.nodeType)),errors.collect(cdk.propertyValidator("nodeType",cdk.validateString)(properties.nodeType)),errors.collect(cdk.propertyValidator("notificationTopicArn",cdk.validateString)(properties.notificationTopicArn)),errors.collect(cdk.propertyValidator("parameterGroupName",cdk.validateString)(properties.parameterGroupName)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("replicationFactor",cdk.requiredValidator)(properties.replicationFactor)),errors.collect(cdk.propertyValidator("replicationFactor",cdk.validateNumber)(properties.replicationFactor)),errors.collect(cdk.propertyValidator("sseSpecification",CfnClusterSSESpecificationPropertyValidator)(properties.sseSpecification)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetGroupName",cdk.validateString)(properties.subnetGroupName)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.wrap('supplied properties not correct for "CfnClusterProps"')}function convertCfnClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterPropsValidator(properties).assertSuccess(),{AvailabilityZones:cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),ClusterEndpointEncryptionType:cdk.stringToCloudFormation(properties.clusterEndpointEncryptionType),ClusterName:cdk.stringToCloudFormation(properties.clusterName),Description:cdk.stringToCloudFormation(properties.description),IAMRoleARN:cdk.stringToCloudFormation(properties.iamRoleArn),NodeType:cdk.stringToCloudFormation(properties.nodeType),NotificationTopicARN:cdk.stringToCloudFormation(properties.notificationTopicArn),ParameterGroupName:cdk.stringToCloudFormation(properties.parameterGroupName),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),ReplicationFactor:cdk.numberToCloudFormation(properties.replicationFactor),SSESpecification:convertCfnClusterSSESpecificationPropertyToCloudFormation(properties.sseSpecification),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetGroupName:cdk.stringToCloudFormation(properties.subnetGroupName),Tags:cdk.objectToCloudFormation(properties.tags)}):properties}function CfnClusterPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZones","AvailabilityZones",properties.AvailabilityZones!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones):void 0),ret.addPropertyResult("clusterEndpointEncryptionType","ClusterEndpointEncryptionType",properties.ClusterEndpointEncryptionType!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterEndpointEncryptionType):void 0),ret.addPropertyResult("clusterName","ClusterName",properties.ClusterName!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterName):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("iamRoleArn","IAMRoleARN",properties.IAMRoleARN!=null?cfn_parse.FromCloudFormation.getString(properties.IAMRoleARN):void 0),ret.addPropertyResult("nodeType","NodeType",properties.NodeType!=null?cfn_parse.FromCloudFormation.getString(properties.NodeType):void 0),ret.addPropertyResult("notificationTopicArn","NotificationTopicARN",properties.NotificationTopicARN!=null?cfn_parse.FromCloudFormation.getString(properties.NotificationTopicARN):void 0),ret.addPropertyResult("parameterGroupName","ParameterGroupName",properties.ParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterGroupName):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("replicationFactor","ReplicationFactor",properties.ReplicationFactor!=null?cfn_parse.FromCloudFormation.getNumber(properties.ReplicationFactor):void 0),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("sseSpecification","SSESpecification",properties.SSESpecification!=null?CfnClusterSSESpecificationPropertyFromCloudFormation(properties.SSESpecification):void 0),ret.addPropertyResult("subnetGroupName","SubnetGroupName",properties.SubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetGroupName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getAny(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnParameterGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnParameterGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnParameterGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnParameterGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dax_CfnParameterGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnParameterGroup),error}this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.parameterGroupName=props.parameterGroupName,this.parameterNameValues=props.parameterNameValues}get cfnProperties(){return{description:this.description,parameterGroupName:this.parameterGroupName,parameterNameValues:this.parameterNameValues}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnParameterGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnParameterGroupPropsToCloudFormation(props)}}exports.CfnParameterGroup=CfnParameterGroup,_b=JSII_RTTI_SYMBOL_1,CfnParameterGroup[_b]={fqn:"aws-cdk-lib.aws_dax.CfnParameterGroup",version:"2.94.0"},CfnParameterGroup.CFN_RESOURCE_TYPE_NAME="AWS::DAX::ParameterGroup";function CfnParameterGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("parameterGroupName",cdk.validateString)(properties.parameterGroupName)),errors.collect(cdk.propertyValidator("parameterNameValues",cdk.validateObject)(properties.parameterNameValues)),errors.wrap('supplied properties not correct for "CfnParameterGroupProps"')}function convertCfnParameterGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnParameterGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),ParameterGroupName:cdk.stringToCloudFormation(properties.parameterGroupName),ParameterNameValues:cdk.objectToCloudFormation(properties.parameterNameValues)}):properties}function CfnParameterGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("parameterGroupName","ParameterGroupName",properties.ParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterGroupName):void 0),ret.addPropertyResult("parameterNameValues","ParameterNameValues",properties.ParameterNameValues!=null?cfn_parse.FromCloudFormation.getAny(properties.ParameterNameValues):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSubnetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSubnetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSubnetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dax_CfnSubnetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSubnetGroup),error}cdk.requireProperty(props,"subnetIds",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.subnetGroupName=props.subnetGroupName,this.subnetIds=props.subnetIds}get cfnProperties(){return{description:this.description,subnetGroupName:this.subnetGroupName,subnetIds:this.subnetIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSubnetGroupPropsToCloudFormation(props)}}exports.CfnSubnetGroup=CfnSubnetGroup,_c=JSII_RTTI_SYMBOL_1,CfnSubnetGroup[_c]={fqn:"aws-cdk-lib.aws_dax.CfnSubnetGroup",version:"2.94.0"},CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME="AWS::DAX::SubnetGroup";function CfnSubnetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("subnetGroupName",cdk.validateString)(properties.subnetGroupName)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.wrap('supplied properties not correct for "CfnSubnetGroupProps"')}function convertCfnSubnetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSubnetGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),SubnetGroupName:cdk.stringToCloudFormation(properties.subnetGroupName),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds)}):properties}function CfnSubnetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("subnetGroupName","SubnetGroupName",properties.SubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetGroupName):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
