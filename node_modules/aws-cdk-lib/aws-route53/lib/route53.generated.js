"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnRecordSetGroup=exports.CfnRecordSet=exports.CfnKeySigningKey=exports.CfnHostedZone=exports.CfnHealthCheck=exports.CfnDNSSEC=exports.CfnCidrCollection=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCidrCollection extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCidrCollectionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCidrCollection(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCidrCollection.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnCidrCollectionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCidrCollection),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.locations=props.locations,this.name=props.name}get cfnProperties(){return{locations:this.locations,name:this.name}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCidrCollection.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCidrCollectionPropsToCloudFormation(props)}}exports.CfnCidrCollection=CfnCidrCollection,_a=JSII_RTTI_SYMBOL_1,CfnCidrCollection[_a]={fqn:"aws-cdk-lib.aws_route53.CfnCidrCollection",version:"2.94.0"},CfnCidrCollection.CFN_RESOURCE_TYPE_NAME="AWS::Route53::CidrCollection";function CfnCidrCollectionLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrList",cdk.requiredValidator)(properties.cidrList)),errors.collect(cdk.propertyValidator("cidrList",cdk.listValidator(cdk.validateString))(properties.cidrList)),errors.collect(cdk.propertyValidator("locationName",cdk.requiredValidator)(properties.locationName)),errors.collect(cdk.propertyValidator("locationName",cdk.validateString)(properties.locationName)),errors.wrap('supplied properties not correct for "LocationProperty"')}function convertCfnCidrCollectionLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCidrCollectionLocationPropertyValidator(properties).assertSuccess(),{CidrList:cdk.listMapper(cdk.stringToCloudFormation)(properties.cidrList),LocationName:cdk.stringToCloudFormation(properties.locationName)}):properties}function CfnCidrCollectionLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrList","CidrList",properties.CidrList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CidrList):void 0),ret.addPropertyResult("locationName","LocationName",properties.LocationName!=null?cfn_parse.FromCloudFormation.getString(properties.LocationName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCidrCollectionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("locations",cdk.listValidator(CfnCidrCollectionLocationPropertyValidator))(properties.locations)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "CfnCidrCollectionProps"')}function convertCfnCidrCollectionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCidrCollectionPropsValidator(properties).assertSuccess(),{Locations:cdk.listMapper(convertCfnCidrCollectionLocationPropertyToCloudFormation)(properties.locations),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnCidrCollectionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("locations","Locations",properties.Locations!=null?cfn_parse.FromCloudFormation.getArray(CfnCidrCollectionLocationPropertyFromCloudFormation)(properties.Locations):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDNSSEC extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDNSSECPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDNSSEC(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDNSSEC.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnDNSSECProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDNSSEC),error}cdk.requireProperty(props,"hostedZoneId",this),this.hostedZoneId=props.hostedZoneId}get cfnProperties(){return{hostedZoneId:this.hostedZoneId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDNSSEC.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDNSSECPropsToCloudFormation(props)}}exports.CfnDNSSEC=CfnDNSSEC,_b=JSII_RTTI_SYMBOL_1,CfnDNSSEC[_b]={fqn:"aws-cdk-lib.aws_route53.CfnDNSSEC",version:"2.94.0"},CfnDNSSEC.CFN_RESOURCE_TYPE_NAME="AWS::Route53::DNSSEC";function CfnDNSSECPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.requiredValidator)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.wrap('supplied properties not correct for "CfnDNSSECProps"')}function convertCfnDNSSECPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDNSSECPropsValidator(properties).assertSuccess(),{HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId)}):properties}function CfnDNSSECPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnHealthCheck extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnHealthCheckPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnHealthCheck(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnHealthCheck.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnHealthCheckProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnHealthCheck),error}cdk.requireProperty(props,"healthCheckConfig",this),this.attrHealthCheckId=cdk.Token.asString(this.getAtt("HealthCheckId",cdk.ResolutionTypeHint.STRING)),this.healthCheckConfig=props.healthCheckConfig,this.healthCheckTags=props.healthCheckTags}get cfnProperties(){return{healthCheckConfig:this.healthCheckConfig,healthCheckTags:this.healthCheckTags}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnHealthCheck.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnHealthCheckPropsToCloudFormation(props)}}exports.CfnHealthCheck=CfnHealthCheck,_c=JSII_RTTI_SYMBOL_1,CfnHealthCheck[_c]={fqn:"aws-cdk-lib.aws_route53.CfnHealthCheck",version:"2.94.0"},CfnHealthCheck.CFN_RESOURCE_TYPE_NAME="AWS::Route53::HealthCheck";function CfnHealthCheckAlarmIdentifierPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("region",cdk.requiredValidator)(properties.region)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.wrap('supplied properties not correct for "AlarmIdentifierProperty"')}function convertCfnHealthCheckAlarmIdentifierPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHealthCheckAlarmIdentifierPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Region:cdk.stringToCloudFormation(properties.region)}):properties}function CfnHealthCheckAlarmIdentifierPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHealthCheckHealthCheckConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("alarmIdentifier",CfnHealthCheckAlarmIdentifierPropertyValidator)(properties.alarmIdentifier)),errors.collect(cdk.propertyValidator("childHealthChecks",cdk.listValidator(cdk.validateString))(properties.childHealthChecks)),errors.collect(cdk.propertyValidator("enableSni",cdk.validateBoolean)(properties.enableSni)),errors.collect(cdk.propertyValidator("failureThreshold",cdk.validateNumber)(properties.failureThreshold)),errors.collect(cdk.propertyValidator("fullyQualifiedDomainName",cdk.validateString)(properties.fullyQualifiedDomainName)),errors.collect(cdk.propertyValidator("healthThreshold",cdk.validateNumber)(properties.healthThreshold)),errors.collect(cdk.propertyValidator("ipAddress",cdk.validateString)(properties.ipAddress)),errors.collect(cdk.propertyValidator("insufficientDataHealthStatus",cdk.validateString)(properties.insufficientDataHealthStatus)),errors.collect(cdk.propertyValidator("inverted",cdk.validateBoolean)(properties.inverted)),errors.collect(cdk.propertyValidator("measureLatency",cdk.validateBoolean)(properties.measureLatency)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("regions",cdk.listValidator(cdk.validateString))(properties.regions)),errors.collect(cdk.propertyValidator("requestInterval",cdk.validateNumber)(properties.requestInterval)),errors.collect(cdk.propertyValidator("resourcePath",cdk.validateString)(properties.resourcePath)),errors.collect(cdk.propertyValidator("routingControlArn",cdk.validateString)(properties.routingControlArn)),errors.collect(cdk.propertyValidator("searchString",cdk.validateString)(properties.searchString)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "HealthCheckConfigProperty"')}function convertCfnHealthCheckHealthCheckConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHealthCheckHealthCheckConfigPropertyValidator(properties).assertSuccess(),{AlarmIdentifier:convertCfnHealthCheckAlarmIdentifierPropertyToCloudFormation(properties.alarmIdentifier),ChildHealthChecks:cdk.listMapper(cdk.stringToCloudFormation)(properties.childHealthChecks),EnableSNI:cdk.booleanToCloudFormation(properties.enableSni),FailureThreshold:cdk.numberToCloudFormation(properties.failureThreshold),FullyQualifiedDomainName:cdk.stringToCloudFormation(properties.fullyQualifiedDomainName),HealthThreshold:cdk.numberToCloudFormation(properties.healthThreshold),IPAddress:cdk.stringToCloudFormation(properties.ipAddress),InsufficientDataHealthStatus:cdk.stringToCloudFormation(properties.insufficientDataHealthStatus),Inverted:cdk.booleanToCloudFormation(properties.inverted),MeasureLatency:cdk.booleanToCloudFormation(properties.measureLatency),Port:cdk.numberToCloudFormation(properties.port),Regions:cdk.listMapper(cdk.stringToCloudFormation)(properties.regions),RequestInterval:cdk.numberToCloudFormation(properties.requestInterval),ResourcePath:cdk.stringToCloudFormation(properties.resourcePath),RoutingControlArn:cdk.stringToCloudFormation(properties.routingControlArn),SearchString:cdk.stringToCloudFormation(properties.searchString),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnHealthCheckHealthCheckConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("alarmIdentifier","AlarmIdentifier",properties.AlarmIdentifier!=null?CfnHealthCheckAlarmIdentifierPropertyFromCloudFormation(properties.AlarmIdentifier):void 0),ret.addPropertyResult("childHealthChecks","ChildHealthChecks",properties.ChildHealthChecks!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ChildHealthChecks):void 0),ret.addPropertyResult("enableSni","EnableSNI",properties.EnableSNI!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableSNI):void 0),ret.addPropertyResult("failureThreshold","FailureThreshold",properties.FailureThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.FailureThreshold):void 0),ret.addPropertyResult("fullyQualifiedDomainName","FullyQualifiedDomainName",properties.FullyQualifiedDomainName!=null?cfn_parse.FromCloudFormation.getString(properties.FullyQualifiedDomainName):void 0),ret.addPropertyResult("healthThreshold","HealthThreshold",properties.HealthThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.HealthThreshold):void 0),ret.addPropertyResult("insufficientDataHealthStatus","InsufficientDataHealthStatus",properties.InsufficientDataHealthStatus!=null?cfn_parse.FromCloudFormation.getString(properties.InsufficientDataHealthStatus):void 0),ret.addPropertyResult("inverted","Inverted",properties.Inverted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Inverted):void 0),ret.addPropertyResult("ipAddress","IPAddress",properties.IPAddress!=null?cfn_parse.FromCloudFormation.getString(properties.IPAddress):void 0),ret.addPropertyResult("measureLatency","MeasureLatency",properties.MeasureLatency!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MeasureLatency):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("regions","Regions",properties.Regions!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Regions):void 0),ret.addPropertyResult("requestInterval","RequestInterval",properties.RequestInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.RequestInterval):void 0),ret.addPropertyResult("resourcePath","ResourcePath",properties.ResourcePath!=null?cfn_parse.FromCloudFormation.getString(properties.ResourcePath):void 0),ret.addPropertyResult("routingControlArn","RoutingControlArn",properties.RoutingControlArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoutingControlArn):void 0),ret.addPropertyResult("searchString","SearchString",properties.SearchString!=null?cfn_parse.FromCloudFormation.getString(properties.SearchString):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHealthCheckHealthCheckTagPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "HealthCheckTagProperty"')}function convertCfnHealthCheckHealthCheckTagPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHealthCheckHealthCheckTagPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnHealthCheckHealthCheckTagPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHealthCheckPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthCheckConfig",cdk.requiredValidator)(properties.healthCheckConfig)),errors.collect(cdk.propertyValidator("healthCheckConfig",CfnHealthCheckHealthCheckConfigPropertyValidator)(properties.healthCheckConfig)),errors.collect(cdk.propertyValidator("healthCheckTags",cdk.listValidator(CfnHealthCheckHealthCheckTagPropertyValidator))(properties.healthCheckTags)),errors.wrap('supplied properties not correct for "CfnHealthCheckProps"')}function convertCfnHealthCheckPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHealthCheckPropsValidator(properties).assertSuccess(),{HealthCheckConfig:convertCfnHealthCheckHealthCheckConfigPropertyToCloudFormation(properties.healthCheckConfig),HealthCheckTags:cdk.listMapper(convertCfnHealthCheckHealthCheckTagPropertyToCloudFormation)(properties.healthCheckTags)}):properties}function CfnHealthCheckPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthCheckConfig","HealthCheckConfig",properties.HealthCheckConfig!=null?CfnHealthCheckHealthCheckConfigPropertyFromCloudFormation(properties.HealthCheckConfig):void 0),ret.addPropertyResult("healthCheckTags","HealthCheckTags",properties.HealthCheckTags!=null?cfn_parse.FromCloudFormation.getArray(CfnHealthCheckHealthCheckTagPropertyFromCloudFormation)(properties.HealthCheckTags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnHostedZone extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnHostedZonePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnHostedZone(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnHostedZone.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnHostedZoneProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnHostedZone),error}this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrNameServers=cdk.Token.asList(this.getAtt("NameServers",cdk.ResolutionTypeHint.STRING_LIST)),this.hostedZoneConfig=props.hostedZoneConfig,this.hostedZoneTagsRaw=props.hostedZoneTags,this.name=props.name,this.queryLoggingConfig=props.queryLoggingConfig,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Route53::HostedZone",props.hostedZoneTags,{tagPropertyName:"hostedZoneTags"}),this.vpcs=props.vpcs}get cfnProperties(){return{hostedZoneConfig:this.hostedZoneConfig,name:this.name,queryLoggingConfig:this.queryLoggingConfig,hostedZoneTags:this.tags.renderTags(),vpcs:this.vpcs}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnHostedZone.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnHostedZonePropsToCloudFormation(props)}}exports.CfnHostedZone=CfnHostedZone,_d=JSII_RTTI_SYMBOL_1,CfnHostedZone[_d]={fqn:"aws-cdk-lib.aws_route53.CfnHostedZone",version:"2.94.0"},CfnHostedZone.CFN_RESOURCE_TYPE_NAME="AWS::Route53::HostedZone";function CfnHostedZoneHostedZoneConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("comment",cdk.validateString)(properties.comment)),errors.wrap('supplied properties not correct for "HostedZoneConfigProperty"')}function convertCfnHostedZoneHostedZoneConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHostedZoneHostedZoneConfigPropertyValidator(properties).assertSuccess(),{Comment:cdk.stringToCloudFormation(properties.comment)}):properties}function CfnHostedZoneHostedZoneConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("comment","Comment",properties.Comment!=null?cfn_parse.FromCloudFormation.getString(properties.Comment):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHostedZoneHostedZoneTagPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "HostedZoneTagProperty"')}function convertCfnHostedZoneHostedZoneTagPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHostedZoneHostedZoneTagPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnHostedZoneHostedZoneTagPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHostedZoneQueryLoggingConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogsLogGroupArn",cdk.requiredValidator)(properties.cloudWatchLogsLogGroupArn)),errors.collect(cdk.propertyValidator("cloudWatchLogsLogGroupArn",cdk.validateString)(properties.cloudWatchLogsLogGroupArn)),errors.wrap('supplied properties not correct for "QueryLoggingConfigProperty"')}function convertCfnHostedZoneQueryLoggingConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHostedZoneQueryLoggingConfigPropertyValidator(properties).assertSuccess(),{CloudWatchLogsLogGroupArn:cdk.stringToCloudFormation(properties.cloudWatchLogsLogGroupArn)}):properties}function CfnHostedZoneQueryLoggingConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cloudWatchLogsLogGroupArn","CloudWatchLogsLogGroupArn",properties.CloudWatchLogsLogGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogsLogGroupArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHostedZoneVPCPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcRegion",cdk.requiredValidator)(properties.vpcRegion)),errors.collect(cdk.propertyValidator("vpcRegion",cdk.validateString)(properties.vpcRegion)),errors.wrap('supplied properties not correct for "VPCProperty"')}function convertCfnHostedZoneVPCPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHostedZoneVPCPropertyValidator(properties).assertSuccess(),{VPCId:cdk.stringToCloudFormation(properties.vpcId),VPCRegion:cdk.stringToCloudFormation(properties.vpcRegion)}):properties}function CfnHostedZoneVPCPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcId","VPCId",properties.VPCId!=null?cfn_parse.FromCloudFormation.getString(properties.VPCId):void 0),ret.addPropertyResult("vpcRegion","VPCRegion",properties.VPCRegion!=null?cfn_parse.FromCloudFormation.getString(properties.VPCRegion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnHostedZonePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hostedZoneConfig",CfnHostedZoneHostedZoneConfigPropertyValidator)(properties.hostedZoneConfig)),errors.collect(cdk.propertyValidator("hostedZoneTags",cdk.listValidator(CfnHostedZoneHostedZoneTagPropertyValidator))(properties.hostedZoneTags)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("queryLoggingConfig",CfnHostedZoneQueryLoggingConfigPropertyValidator)(properties.queryLoggingConfig)),errors.collect(cdk.propertyValidator("vpcs",cdk.listValidator(CfnHostedZoneVPCPropertyValidator))(properties.vpcs)),errors.wrap('supplied properties not correct for "CfnHostedZoneProps"')}function convertCfnHostedZonePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnHostedZonePropsValidator(properties).assertSuccess(),{HostedZoneConfig:convertCfnHostedZoneHostedZoneConfigPropertyToCloudFormation(properties.hostedZoneConfig),HostedZoneTags:cdk.listMapper(convertCfnHostedZoneHostedZoneTagPropertyToCloudFormation)(properties.hostedZoneTags),Name:cdk.stringToCloudFormation(properties.name),QueryLoggingConfig:convertCfnHostedZoneQueryLoggingConfigPropertyToCloudFormation(properties.queryLoggingConfig),VPCs:cdk.listMapper(convertCfnHostedZoneVPCPropertyToCloudFormation)(properties.vpcs)}):properties}function CfnHostedZonePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hostedZoneConfig","HostedZoneConfig",properties.HostedZoneConfig!=null?CfnHostedZoneHostedZoneConfigPropertyFromCloudFormation(properties.HostedZoneConfig):void 0),ret.addPropertyResult("hostedZoneTags","HostedZoneTags",properties.HostedZoneTags!=null?cfn_parse.FromCloudFormation.getArray(CfnHostedZoneHostedZoneTagPropertyFromCloudFormation)(properties.HostedZoneTags):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("queryLoggingConfig","QueryLoggingConfig",properties.QueryLoggingConfig!=null?CfnHostedZoneQueryLoggingConfigPropertyFromCloudFormation(properties.QueryLoggingConfig):void 0),ret.addPropertyResult("vpcs","VPCs",properties.VPCs!=null?cfn_parse.FromCloudFormation.getArray(CfnHostedZoneVPCPropertyFromCloudFormation)(properties.VPCs):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnKeySigningKey extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnKeySigningKeyPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnKeySigningKey(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnKeySigningKey.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnKeySigningKeyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnKeySigningKey),error}cdk.requireProperty(props,"hostedZoneId",this),cdk.requireProperty(props,"keyManagementServiceArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"status",this),this.hostedZoneId=props.hostedZoneId,this.keyManagementServiceArn=props.keyManagementServiceArn,this.name=props.name,this.status=props.status}get cfnProperties(){return{hostedZoneId:this.hostedZoneId,keyManagementServiceArn:this.keyManagementServiceArn,name:this.name,status:this.status}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnKeySigningKey.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnKeySigningKeyPropsToCloudFormation(props)}}exports.CfnKeySigningKey=CfnKeySigningKey,_e=JSII_RTTI_SYMBOL_1,CfnKeySigningKey[_e]={fqn:"aws-cdk-lib.aws_route53.CfnKeySigningKey",version:"2.94.0"},CfnKeySigningKey.CFN_RESOURCE_TYPE_NAME="AWS::Route53::KeySigningKey";function CfnKeySigningKeyPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.requiredValidator)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("keyManagementServiceArn",cdk.requiredValidator)(properties.keyManagementServiceArn)),errors.collect(cdk.propertyValidator("keyManagementServiceArn",cdk.validateString)(properties.keyManagementServiceArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("status",cdk.requiredValidator)(properties.status)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.wrap('supplied properties not correct for "CfnKeySigningKeyProps"')}function convertCfnKeySigningKeyPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnKeySigningKeyPropsValidator(properties).assertSuccess(),{HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId),KeyManagementServiceArn:cdk.stringToCloudFormation(properties.keyManagementServiceArn),Name:cdk.stringToCloudFormation(properties.name),Status:cdk.stringToCloudFormation(properties.status)}):properties}function CfnKeySigningKeyPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addPropertyResult("keyManagementServiceArn","KeyManagementServiceArn",properties.KeyManagementServiceArn!=null?cfn_parse.FromCloudFormation.getString(properties.KeyManagementServiceArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRecordSet extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRecordSetPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRecordSet(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRecordSet.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnRecordSetProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRecordSet),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"type",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.aliasTarget=props.aliasTarget,this.cidrRoutingConfig=props.cidrRoutingConfig,this.comment=props.comment,this.failover=props.failover,this.geoLocation=props.geoLocation,this.healthCheckId=props.healthCheckId,this.hostedZoneId=props.hostedZoneId,this.hostedZoneName=props.hostedZoneName,this.multiValueAnswer=props.multiValueAnswer,this.name=props.name,this.region=props.region,this.resourceRecords=props.resourceRecords,this.setIdentifier=props.setIdentifier,this.ttl=props.ttl,this.type=props.type,this.weight=props.weight}get cfnProperties(){return{aliasTarget:this.aliasTarget,cidrRoutingConfig:this.cidrRoutingConfig,comment:this.comment,failover:this.failover,geoLocation:this.geoLocation,healthCheckId:this.healthCheckId,hostedZoneId:this.hostedZoneId,hostedZoneName:this.hostedZoneName,multiValueAnswer:this.multiValueAnswer,name:this.name,region:this.region,resourceRecords:this.resourceRecords,setIdentifier:this.setIdentifier,ttl:this.ttl,type:this.type,weight:this.weight}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRecordSet.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRecordSetPropsToCloudFormation(props)}}exports.CfnRecordSet=CfnRecordSet,_f=JSII_RTTI_SYMBOL_1,CfnRecordSet[_f]={fqn:"aws-cdk-lib.aws_route53.CfnRecordSet",version:"2.94.0"},CfnRecordSet.CFN_RESOURCE_TYPE_NAME="AWS::Route53::RecordSet";function CfnRecordSetAliasTargetPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dnsName",cdk.requiredValidator)(properties.dnsName)),errors.collect(cdk.propertyValidator("dnsName",cdk.validateString)(properties.dnsName)),errors.collect(cdk.propertyValidator("evaluateTargetHealth",cdk.validateBoolean)(properties.evaluateTargetHealth)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.requiredValidator)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.wrap('supplied properties not correct for "AliasTargetProperty"')}function convertCfnRecordSetAliasTargetPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetAliasTargetPropertyValidator(properties).assertSuccess(),{DNSName:cdk.stringToCloudFormation(properties.dnsName),EvaluateTargetHealth:cdk.booleanToCloudFormation(properties.evaluateTargetHealth),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId)}):properties}function CfnRecordSetAliasTargetPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dnsName","DNSName",properties.DNSName!=null?cfn_parse.FromCloudFormation.getString(properties.DNSName):void 0),ret.addPropertyResult("evaluateTargetHealth","EvaluateTargetHealth",properties.EvaluateTargetHealth!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EvaluateTargetHealth):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetCidrRoutingConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("collectionId",cdk.requiredValidator)(properties.collectionId)),errors.collect(cdk.propertyValidator("collectionId",cdk.validateString)(properties.collectionId)),errors.collect(cdk.propertyValidator("locationName",cdk.requiredValidator)(properties.locationName)),errors.collect(cdk.propertyValidator("locationName",cdk.validateString)(properties.locationName)),errors.wrap('supplied properties not correct for "CidrRoutingConfigProperty"')}function convertCfnRecordSetCidrRoutingConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetCidrRoutingConfigPropertyValidator(properties).assertSuccess(),{CollectionId:cdk.stringToCloudFormation(properties.collectionId),LocationName:cdk.stringToCloudFormation(properties.locationName)}):properties}function CfnRecordSetCidrRoutingConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("collectionId","CollectionId",properties.CollectionId!=null?cfn_parse.FromCloudFormation.getString(properties.CollectionId):void 0),ret.addPropertyResult("locationName","LocationName",properties.LocationName!=null?cfn_parse.FromCloudFormation.getString(properties.LocationName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetGeoLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("continentCode",cdk.validateString)(properties.continentCode)),errors.collect(cdk.propertyValidator("countryCode",cdk.validateString)(properties.countryCode)),errors.collect(cdk.propertyValidator("subdivisionCode",cdk.validateString)(properties.subdivisionCode)),errors.wrap('supplied properties not correct for "GeoLocationProperty"')}function convertCfnRecordSetGeoLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGeoLocationPropertyValidator(properties).assertSuccess(),{ContinentCode:cdk.stringToCloudFormation(properties.continentCode),CountryCode:cdk.stringToCloudFormation(properties.countryCode),SubdivisionCode:cdk.stringToCloudFormation(properties.subdivisionCode)}):properties}function CfnRecordSetGeoLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("continentCode","ContinentCode",properties.ContinentCode!=null?cfn_parse.FromCloudFormation.getString(properties.ContinentCode):void 0),ret.addPropertyResult("countryCode","CountryCode",properties.CountryCode!=null?cfn_parse.FromCloudFormation.getString(properties.CountryCode):void 0),ret.addPropertyResult("subdivisionCode","SubdivisionCode",properties.SubdivisionCode!=null?cfn_parse.FromCloudFormation.getString(properties.SubdivisionCode):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("aliasTarget",CfnRecordSetAliasTargetPropertyValidator)(properties.aliasTarget)),errors.collect(cdk.propertyValidator("cidrRoutingConfig",CfnRecordSetCidrRoutingConfigPropertyValidator)(properties.cidrRoutingConfig)),errors.collect(cdk.propertyValidator("comment",cdk.validateString)(properties.comment)),errors.collect(cdk.propertyValidator("failover",cdk.validateString)(properties.failover)),errors.collect(cdk.propertyValidator("geoLocation",CfnRecordSetGeoLocationPropertyValidator)(properties.geoLocation)),errors.collect(cdk.propertyValidator("healthCheckId",cdk.validateString)(properties.healthCheckId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneName",cdk.validateString)(properties.hostedZoneName)),errors.collect(cdk.propertyValidator("multiValueAnswer",cdk.validateBoolean)(properties.multiValueAnswer)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("resourceRecords",cdk.listValidator(cdk.validateString))(properties.resourceRecords)),errors.collect(cdk.propertyValidator("setIdentifier",cdk.validateString)(properties.setIdentifier)),errors.collect(cdk.propertyValidator("ttl",cdk.validateString)(properties.ttl)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("weight",cdk.validateNumber)(properties.weight)),errors.wrap('supplied properties not correct for "CfnRecordSetProps"')}function convertCfnRecordSetPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetPropsValidator(properties).assertSuccess(),{AliasTarget:convertCfnRecordSetAliasTargetPropertyToCloudFormation(properties.aliasTarget),CidrRoutingConfig:convertCfnRecordSetCidrRoutingConfigPropertyToCloudFormation(properties.cidrRoutingConfig),Comment:cdk.stringToCloudFormation(properties.comment),Failover:cdk.stringToCloudFormation(properties.failover),GeoLocation:convertCfnRecordSetGeoLocationPropertyToCloudFormation(properties.geoLocation),HealthCheckId:cdk.stringToCloudFormation(properties.healthCheckId),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId),HostedZoneName:cdk.stringToCloudFormation(properties.hostedZoneName),MultiValueAnswer:cdk.booleanToCloudFormation(properties.multiValueAnswer),Name:cdk.stringToCloudFormation(properties.name),Region:cdk.stringToCloudFormation(properties.region),ResourceRecords:cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceRecords),SetIdentifier:cdk.stringToCloudFormation(properties.setIdentifier),TTL:cdk.stringToCloudFormation(properties.ttl),Type:cdk.stringToCloudFormation(properties.type),Weight:cdk.numberToCloudFormation(properties.weight)}):properties}function CfnRecordSetPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("aliasTarget","AliasTarget",properties.AliasTarget!=null?CfnRecordSetAliasTargetPropertyFromCloudFormation(properties.AliasTarget):void 0),ret.addPropertyResult("cidrRoutingConfig","CidrRoutingConfig",properties.CidrRoutingConfig!=null?CfnRecordSetCidrRoutingConfigPropertyFromCloudFormation(properties.CidrRoutingConfig):void 0),ret.addPropertyResult("comment","Comment",properties.Comment!=null?cfn_parse.FromCloudFormation.getString(properties.Comment):void 0),ret.addPropertyResult("failover","Failover",properties.Failover!=null?cfn_parse.FromCloudFormation.getString(properties.Failover):void 0),ret.addPropertyResult("geoLocation","GeoLocation",properties.GeoLocation!=null?CfnRecordSetGeoLocationPropertyFromCloudFormation(properties.GeoLocation):void 0),ret.addPropertyResult("healthCheckId","HealthCheckId",properties.HealthCheckId!=null?cfn_parse.FromCloudFormation.getString(properties.HealthCheckId):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addPropertyResult("hostedZoneName","HostedZoneName",properties.HostedZoneName!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneName):void 0),ret.addPropertyResult("multiValueAnswer","MultiValueAnswer",properties.MultiValueAnswer!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiValueAnswer):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("resourceRecords","ResourceRecords",properties.ResourceRecords!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ResourceRecords):void 0),ret.addPropertyResult("setIdentifier","SetIdentifier",properties.SetIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SetIdentifier):void 0),ret.addPropertyResult("ttl","TTL",properties.TTL!=null?cfn_parse.FromCloudFormation.getString(properties.TTL):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("weight","Weight",properties.Weight!=null?cfn_parse.FromCloudFormation.getNumber(properties.Weight):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRecordSetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRecordSetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRecordSetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnRecordSetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_route53_CfnRecordSetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRecordSetGroup),error}this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.comment=props.comment,this.hostedZoneId=props.hostedZoneId,this.hostedZoneName=props.hostedZoneName,this.recordSets=props.recordSets}get cfnProperties(){return{comment:this.comment,hostedZoneId:this.hostedZoneId,hostedZoneName:this.hostedZoneName,recordSets:this.recordSets}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRecordSetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRecordSetGroupPropsToCloudFormation(props)}}exports.CfnRecordSetGroup=CfnRecordSetGroup,_g=JSII_RTTI_SYMBOL_1,CfnRecordSetGroup[_g]={fqn:"aws-cdk-lib.aws_route53.CfnRecordSetGroup",version:"2.94.0"},CfnRecordSetGroup.CFN_RESOURCE_TYPE_NAME="AWS::Route53::RecordSetGroup";function CfnRecordSetGroupAliasTargetPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dnsName",cdk.requiredValidator)(properties.dnsName)),errors.collect(cdk.propertyValidator("dnsName",cdk.validateString)(properties.dnsName)),errors.collect(cdk.propertyValidator("evaluateTargetHealth",cdk.validateBoolean)(properties.evaluateTargetHealth)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.requiredValidator)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.wrap('supplied properties not correct for "AliasTargetProperty"')}function convertCfnRecordSetGroupAliasTargetPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGroupAliasTargetPropertyValidator(properties).assertSuccess(),{DNSName:cdk.stringToCloudFormation(properties.dnsName),EvaluateTargetHealth:cdk.booleanToCloudFormation(properties.evaluateTargetHealth),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId)}):properties}function CfnRecordSetGroupAliasTargetPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dnsName","DNSName",properties.DNSName!=null?cfn_parse.FromCloudFormation.getString(properties.DNSName):void 0),ret.addPropertyResult("evaluateTargetHealth","EvaluateTargetHealth",properties.EvaluateTargetHealth!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EvaluateTargetHealth):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetGroupCidrRoutingConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("collectionId",cdk.requiredValidator)(properties.collectionId)),errors.collect(cdk.propertyValidator("collectionId",cdk.validateString)(properties.collectionId)),errors.collect(cdk.propertyValidator("locationName",cdk.requiredValidator)(properties.locationName)),errors.collect(cdk.propertyValidator("locationName",cdk.validateString)(properties.locationName)),errors.wrap('supplied properties not correct for "CidrRoutingConfigProperty"')}function convertCfnRecordSetGroupCidrRoutingConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGroupCidrRoutingConfigPropertyValidator(properties).assertSuccess(),{CollectionId:cdk.stringToCloudFormation(properties.collectionId),LocationName:cdk.stringToCloudFormation(properties.locationName)}):properties}function CfnRecordSetGroupCidrRoutingConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("collectionId","CollectionId",properties.CollectionId!=null?cfn_parse.FromCloudFormation.getString(properties.CollectionId):void 0),ret.addPropertyResult("locationName","LocationName",properties.LocationName!=null?cfn_parse.FromCloudFormation.getString(properties.LocationName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetGroupGeoLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("continentCode",cdk.validateString)(properties.continentCode)),errors.collect(cdk.propertyValidator("countryCode",cdk.validateString)(properties.countryCode)),errors.collect(cdk.propertyValidator("subdivisionCode",cdk.validateString)(properties.subdivisionCode)),errors.wrap('supplied properties not correct for "GeoLocationProperty"')}function convertCfnRecordSetGroupGeoLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGroupGeoLocationPropertyValidator(properties).assertSuccess(),{ContinentCode:cdk.stringToCloudFormation(properties.continentCode),CountryCode:cdk.stringToCloudFormation(properties.countryCode),SubdivisionCode:cdk.stringToCloudFormation(properties.subdivisionCode)}):properties}function CfnRecordSetGroupGeoLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("continentCode","ContinentCode",properties.ContinentCode!=null?cfn_parse.FromCloudFormation.getString(properties.ContinentCode):void 0),ret.addPropertyResult("countryCode","CountryCode",properties.CountryCode!=null?cfn_parse.FromCloudFormation.getString(properties.CountryCode):void 0),ret.addPropertyResult("subdivisionCode","SubdivisionCode",properties.SubdivisionCode!=null?cfn_parse.FromCloudFormation.getString(properties.SubdivisionCode):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetGroupRecordSetPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("aliasTarget",CfnRecordSetGroupAliasTargetPropertyValidator)(properties.aliasTarget)),errors.collect(cdk.propertyValidator("cidrRoutingConfig",CfnRecordSetGroupCidrRoutingConfigPropertyValidator)(properties.cidrRoutingConfig)),errors.collect(cdk.propertyValidator("failover",cdk.validateString)(properties.failover)),errors.collect(cdk.propertyValidator("geoLocation",CfnRecordSetGroupGeoLocationPropertyValidator)(properties.geoLocation)),errors.collect(cdk.propertyValidator("healthCheckId",cdk.validateString)(properties.healthCheckId)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneName",cdk.validateString)(properties.hostedZoneName)),errors.collect(cdk.propertyValidator("multiValueAnswer",cdk.validateBoolean)(properties.multiValueAnswer)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("resourceRecords",cdk.listValidator(cdk.validateString))(properties.resourceRecords)),errors.collect(cdk.propertyValidator("setIdentifier",cdk.validateString)(properties.setIdentifier)),errors.collect(cdk.propertyValidator("ttl",cdk.validateString)(properties.ttl)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("weight",cdk.validateNumber)(properties.weight)),errors.wrap('supplied properties not correct for "RecordSetProperty"')}function convertCfnRecordSetGroupRecordSetPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGroupRecordSetPropertyValidator(properties).assertSuccess(),{AliasTarget:convertCfnRecordSetGroupAliasTargetPropertyToCloudFormation(properties.aliasTarget),CidrRoutingConfig:convertCfnRecordSetGroupCidrRoutingConfigPropertyToCloudFormation(properties.cidrRoutingConfig),Failover:cdk.stringToCloudFormation(properties.failover),GeoLocation:convertCfnRecordSetGroupGeoLocationPropertyToCloudFormation(properties.geoLocation),HealthCheckId:cdk.stringToCloudFormation(properties.healthCheckId),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId),HostedZoneName:cdk.stringToCloudFormation(properties.hostedZoneName),MultiValueAnswer:cdk.booleanToCloudFormation(properties.multiValueAnswer),Name:cdk.stringToCloudFormation(properties.name),Region:cdk.stringToCloudFormation(properties.region),ResourceRecords:cdk.listMapper(cdk.stringToCloudFormation)(properties.resourceRecords),SetIdentifier:cdk.stringToCloudFormation(properties.setIdentifier),TTL:cdk.stringToCloudFormation(properties.ttl),Type:cdk.stringToCloudFormation(properties.type),Weight:cdk.numberToCloudFormation(properties.weight)}):properties}function CfnRecordSetGroupRecordSetPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("aliasTarget","AliasTarget",properties.AliasTarget!=null?CfnRecordSetGroupAliasTargetPropertyFromCloudFormation(properties.AliasTarget):void 0),ret.addPropertyResult("cidrRoutingConfig","CidrRoutingConfig",properties.CidrRoutingConfig!=null?CfnRecordSetGroupCidrRoutingConfigPropertyFromCloudFormation(properties.CidrRoutingConfig):void 0),ret.addPropertyResult("failover","Failover",properties.Failover!=null?cfn_parse.FromCloudFormation.getString(properties.Failover):void 0),ret.addPropertyResult("geoLocation","GeoLocation",properties.GeoLocation!=null?CfnRecordSetGroupGeoLocationPropertyFromCloudFormation(properties.GeoLocation):void 0),ret.addPropertyResult("healthCheckId","HealthCheckId",properties.HealthCheckId!=null?cfn_parse.FromCloudFormation.getString(properties.HealthCheckId):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addPropertyResult("hostedZoneName","HostedZoneName",properties.HostedZoneName!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneName):void 0),ret.addPropertyResult("multiValueAnswer","MultiValueAnswer",properties.MultiValueAnswer!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiValueAnswer):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("resourceRecords","ResourceRecords",properties.ResourceRecords!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ResourceRecords):void 0),ret.addPropertyResult("setIdentifier","SetIdentifier",properties.SetIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SetIdentifier):void 0),ret.addPropertyResult("ttl","TTL",properties.TTL!=null?cfn_parse.FromCloudFormation.getString(properties.TTL):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("weight","Weight",properties.Weight!=null?cfn_parse.FromCloudFormation.getNumber(properties.Weight):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRecordSetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("comment",cdk.validateString)(properties.comment)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("hostedZoneName",cdk.validateString)(properties.hostedZoneName)),errors.collect(cdk.propertyValidator("recordSets",cdk.listValidator(CfnRecordSetGroupRecordSetPropertyValidator))(properties.recordSets)),errors.wrap('supplied properties not correct for "CfnRecordSetGroupProps"')}function convertCfnRecordSetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRecordSetGroupPropsValidator(properties).assertSuccess(),{Comment:cdk.stringToCloudFormation(properties.comment),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId),HostedZoneName:cdk.stringToCloudFormation(properties.hostedZoneName),RecordSets:cdk.listMapper(convertCfnRecordSetGroupRecordSetPropertyToCloudFormation)(properties.recordSets)}):properties}function CfnRecordSetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("comment","Comment",properties.Comment!=null?cfn_parse.FromCloudFormation.getString(properties.Comment):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addPropertyResult("hostedZoneName","HostedZoneName",properties.HostedZoneName!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneName):void 0),ret.addPropertyResult("recordSets","RecordSets",properties.RecordSets!=null?cfn_parse.FromCloudFormation.getArray(CfnRecordSetGroupRecordSetPropertyFromCloudFormation)(properties.RecordSets):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
