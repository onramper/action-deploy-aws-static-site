"use strict";var _a,_b,_c,_d,_e,_f;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnSimulationApplicationVersion=exports.CfnSimulationApplication=exports.CfnRobotApplicationVersion=exports.CfnRobotApplication=exports.CfnRobot=exports.CfnFleet=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnFleet extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFleetPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFleet(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnFleet.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnFleetProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFleet),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::RoboMaker::Fleet",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFleet.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFleetPropsToCloudFormation(props)}}exports.CfnFleet=CfnFleet,_a=JSII_RTTI_SYMBOL_1,CfnFleet[_a]={fqn:"aws-cdk-lib.aws_robomaker.CfnFleet",version:"2.94.0"},CfnFleet.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::Fleet";function CfnFleetPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.hashValidator(cdk.validateString))(properties.tags)),errors.wrap('supplied properties not correct for "CfnFleetProps"')}function convertCfnFleetPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFleetPropsValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags)}):properties}function CfnFleetPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRobot extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRobotPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRobot(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRobot.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnRobotProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRobot),error}cdk.requireProperty(props,"architecture",this),cdk.requireProperty(props,"greengrassGroupId",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.architecture=props.architecture,this.fleet=props.fleet,this.greengrassGroupId=props.greengrassGroupId,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::RoboMaker::Robot",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{architecture:this.architecture,fleet:this.fleet,greengrassGroupId:this.greengrassGroupId,name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRobot.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRobotPropsToCloudFormation(props)}}exports.CfnRobot=CfnRobot,_b=JSII_RTTI_SYMBOL_1,CfnRobot[_b]={fqn:"aws-cdk-lib.aws_robomaker.CfnRobot",version:"2.94.0"},CfnRobot.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::Robot";function CfnRobotPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("architecture",cdk.requiredValidator)(properties.architecture)),errors.collect(cdk.propertyValidator("architecture",cdk.validateString)(properties.architecture)),errors.collect(cdk.propertyValidator("fleet",cdk.validateString)(properties.fleet)),errors.collect(cdk.propertyValidator("greengrassGroupId",cdk.requiredValidator)(properties.greengrassGroupId)),errors.collect(cdk.propertyValidator("greengrassGroupId",cdk.validateString)(properties.greengrassGroupId)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.hashValidator(cdk.validateString))(properties.tags)),errors.wrap('supplied properties not correct for "CfnRobotProps"')}function convertCfnRobotPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRobotPropsValidator(properties).assertSuccess(),{Architecture:cdk.stringToCloudFormation(properties.architecture),Fleet:cdk.stringToCloudFormation(properties.fleet),GreengrassGroupId:cdk.stringToCloudFormation(properties.greengrassGroupId),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags)}):properties}function CfnRobotPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("architecture","Architecture",properties.Architecture!=null?cfn_parse.FromCloudFormation.getString(properties.Architecture):void 0),ret.addPropertyResult("fleet","Fleet",properties.Fleet!=null?cfn_parse.FromCloudFormation.getString(properties.Fleet):void 0),ret.addPropertyResult("greengrassGroupId","GreengrassGroupId",properties.GreengrassGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.GreengrassGroupId):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRobotApplication extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRobotApplicationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRobotApplication(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRobotApplication.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnRobotApplicationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRobotApplication),error}cdk.requireProperty(props,"robotSoftwareSuite",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCurrentRevisionId=cdk.Token.asString(this.getAtt("CurrentRevisionId",cdk.ResolutionTypeHint.STRING)),this.currentRevisionId=props.currentRevisionId,this.environment=props.environment,this.name=props.name,this.robotSoftwareSuite=props.robotSoftwareSuite,this.sources=props.sources,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::RoboMaker::RobotApplication",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{currentRevisionId:this.currentRevisionId,environment:this.environment,name:this.name,robotSoftwareSuite:this.robotSoftwareSuite,sources:this.sources,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRobotApplication.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRobotApplicationPropsToCloudFormation(props)}}exports.CfnRobotApplication=CfnRobotApplication,_c=JSII_RTTI_SYMBOL_1,CfnRobotApplication[_c]={fqn:"aws-cdk-lib.aws_robomaker.CfnRobotApplication",version:"2.94.0"},CfnRobotApplication.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::RobotApplication";function CfnRobotApplicationSourceConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("architecture",cdk.requiredValidator)(properties.architecture)),errors.collect(cdk.propertyValidator("architecture",cdk.validateString)(properties.architecture)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.requiredValidator)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.validateString)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Key",cdk.requiredValidator)(properties.s3Key)),errors.collect(cdk.propertyValidator("s3Key",cdk.validateString)(properties.s3Key)),errors.wrap('supplied properties not correct for "SourceConfigProperty"')}function convertCfnRobotApplicationSourceConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRobotApplicationSourceConfigPropertyValidator(properties).assertSuccess(),{Architecture:cdk.stringToCloudFormation(properties.architecture),S3Bucket:cdk.stringToCloudFormation(properties.s3Bucket),S3Key:cdk.stringToCloudFormation(properties.s3Key)}):properties}function CfnRobotApplicationSourceConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("architecture","Architecture",properties.Architecture!=null?cfn_parse.FromCloudFormation.getString(properties.Architecture):void 0),ret.addPropertyResult("s3Bucket","S3Bucket",properties.S3Bucket!=null?cfn_parse.FromCloudFormation.getString(properties.S3Bucket):void 0),ret.addPropertyResult("s3Key","S3Key",properties.S3Key!=null?cfn_parse.FromCloudFormation.getString(properties.S3Key):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRobotApplicationRobotSoftwareSuitePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "RobotSoftwareSuiteProperty"')}function convertCfnRobotApplicationRobotSoftwareSuitePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRobotApplicationRobotSoftwareSuitePropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnRobotApplicationRobotSoftwareSuitePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRobotApplicationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("currentRevisionId",cdk.validateString)(properties.currentRevisionId)),errors.collect(cdk.propertyValidator("environment",cdk.validateString)(properties.environment)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("robotSoftwareSuite",cdk.requiredValidator)(properties.robotSoftwareSuite)),errors.collect(cdk.propertyValidator("robotSoftwareSuite",CfnRobotApplicationRobotSoftwareSuitePropertyValidator)(properties.robotSoftwareSuite)),errors.collect(cdk.propertyValidator("sources",cdk.listValidator(CfnRobotApplicationSourceConfigPropertyValidator))(properties.sources)),errors.collect(cdk.propertyValidator("tags",cdk.hashValidator(cdk.validateString))(properties.tags)),errors.wrap('supplied properties not correct for "CfnRobotApplicationProps"')}function convertCfnRobotApplicationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRobotApplicationPropsValidator(properties).assertSuccess(),{CurrentRevisionId:cdk.stringToCloudFormation(properties.currentRevisionId),Environment:cdk.stringToCloudFormation(properties.environment),Name:cdk.stringToCloudFormation(properties.name),RobotSoftwareSuite:convertCfnRobotApplicationRobotSoftwareSuitePropertyToCloudFormation(properties.robotSoftwareSuite),Sources:cdk.listMapper(convertCfnRobotApplicationSourceConfigPropertyToCloudFormation)(properties.sources),Tags:cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags)}):properties}function CfnRobotApplicationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("currentRevisionId","CurrentRevisionId",properties.CurrentRevisionId!=null?cfn_parse.FromCloudFormation.getString(properties.CurrentRevisionId):void 0),ret.addPropertyResult("environment","Environment",properties.Environment!=null?cfn_parse.FromCloudFormation.getString(properties.Environment):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("robotSoftwareSuite","RobotSoftwareSuite",properties.RobotSoftwareSuite!=null?CfnRobotApplicationRobotSoftwareSuitePropertyFromCloudFormation(properties.RobotSoftwareSuite):void 0),ret.addPropertyResult("sources","Sources",properties.Sources!=null?cfn_parse.FromCloudFormation.getArray(CfnRobotApplicationSourceConfigPropertyFromCloudFormation)(properties.Sources):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRobotApplicationVersion extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRobotApplicationVersionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRobotApplicationVersion(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRobotApplicationVersion.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnRobotApplicationVersionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRobotApplicationVersion),error}cdk.requireProperty(props,"application",this),this.attrApplicationVersion=cdk.Token.asString(this.getAtt("ApplicationVersion",cdk.ResolutionTypeHint.STRING)),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.application=props.application,this.currentRevisionId=props.currentRevisionId}get cfnProperties(){return{application:this.application,currentRevisionId:this.currentRevisionId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRobotApplicationVersion.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRobotApplicationVersionPropsToCloudFormation(props)}}exports.CfnRobotApplicationVersion=CfnRobotApplicationVersion,_d=JSII_RTTI_SYMBOL_1,CfnRobotApplicationVersion[_d]={fqn:"aws-cdk-lib.aws_robomaker.CfnRobotApplicationVersion",version:"2.94.0"},CfnRobotApplicationVersion.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::RobotApplicationVersion";function CfnRobotApplicationVersionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("application",cdk.requiredValidator)(properties.application)),errors.collect(cdk.propertyValidator("application",cdk.validateString)(properties.application)),errors.collect(cdk.propertyValidator("currentRevisionId",cdk.validateString)(properties.currentRevisionId)),errors.wrap('supplied properties not correct for "CfnRobotApplicationVersionProps"')}function convertCfnRobotApplicationVersionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRobotApplicationVersionPropsValidator(properties).assertSuccess(),{Application:cdk.stringToCloudFormation(properties.application),CurrentRevisionId:cdk.stringToCloudFormation(properties.currentRevisionId)}):properties}function CfnRobotApplicationVersionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("application","Application",properties.Application!=null?cfn_parse.FromCloudFormation.getString(properties.Application):void 0),ret.addPropertyResult("currentRevisionId","CurrentRevisionId",properties.CurrentRevisionId!=null?cfn_parse.FromCloudFormation.getString(properties.CurrentRevisionId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSimulationApplication extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSimulationApplicationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSimulationApplication(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSimulationApplication.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnSimulationApplicationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSimulationApplication),error}cdk.requireProperty(props,"robotSoftwareSuite",this),cdk.requireProperty(props,"simulationSoftwareSuite",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCurrentRevisionId=cdk.Token.asString(this.getAtt("CurrentRevisionId",cdk.ResolutionTypeHint.STRING)),this.currentRevisionId=props.currentRevisionId,this.environment=props.environment,this.name=props.name,this.renderingEngine=props.renderingEngine,this.robotSoftwareSuite=props.robotSoftwareSuite,this.simulationSoftwareSuite=props.simulationSoftwareSuite,this.sources=props.sources,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::RoboMaker::SimulationApplication",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{currentRevisionId:this.currentRevisionId,environment:this.environment,name:this.name,renderingEngine:this.renderingEngine,robotSoftwareSuite:this.robotSoftwareSuite,simulationSoftwareSuite:this.simulationSoftwareSuite,sources:this.sources,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSimulationApplication.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSimulationApplicationPropsToCloudFormation(props)}}exports.CfnSimulationApplication=CfnSimulationApplication,_e=JSII_RTTI_SYMBOL_1,CfnSimulationApplication[_e]={fqn:"aws-cdk-lib.aws_robomaker.CfnSimulationApplication",version:"2.94.0"},CfnSimulationApplication.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::SimulationApplication";function CfnSimulationApplicationRenderingEnginePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.requiredValidator)(properties.version)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "RenderingEngineProperty"')}function convertCfnSimulationApplicationRenderingEnginePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationRenderingEnginePropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnSimulationApplicationRenderingEnginePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSimulationApplicationRobotSoftwareSuitePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "RobotSoftwareSuiteProperty"')}function convertCfnSimulationApplicationRobotSoftwareSuitePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationRobotSoftwareSuitePropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnSimulationApplicationRobotSoftwareSuitePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSimulationApplicationSimulationSoftwareSuitePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "SimulationSoftwareSuiteProperty"')}function convertCfnSimulationApplicationSimulationSoftwareSuitePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationSimulationSoftwareSuitePropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnSimulationApplicationSimulationSoftwareSuitePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSimulationApplicationSourceConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("architecture",cdk.requiredValidator)(properties.architecture)),errors.collect(cdk.propertyValidator("architecture",cdk.validateString)(properties.architecture)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.requiredValidator)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.validateString)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Key",cdk.requiredValidator)(properties.s3Key)),errors.collect(cdk.propertyValidator("s3Key",cdk.validateString)(properties.s3Key)),errors.wrap('supplied properties not correct for "SourceConfigProperty"')}function convertCfnSimulationApplicationSourceConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationSourceConfigPropertyValidator(properties).assertSuccess(),{Architecture:cdk.stringToCloudFormation(properties.architecture),S3Bucket:cdk.stringToCloudFormation(properties.s3Bucket),S3Key:cdk.stringToCloudFormation(properties.s3Key)}):properties}function CfnSimulationApplicationSourceConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("architecture","Architecture",properties.Architecture!=null?cfn_parse.FromCloudFormation.getString(properties.Architecture):void 0),ret.addPropertyResult("s3Bucket","S3Bucket",properties.S3Bucket!=null?cfn_parse.FromCloudFormation.getString(properties.S3Bucket):void 0),ret.addPropertyResult("s3Key","S3Key",properties.S3Key!=null?cfn_parse.FromCloudFormation.getString(properties.S3Key):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSimulationApplicationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("currentRevisionId",cdk.validateString)(properties.currentRevisionId)),errors.collect(cdk.propertyValidator("environment",cdk.validateString)(properties.environment)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("renderingEngine",CfnSimulationApplicationRenderingEnginePropertyValidator)(properties.renderingEngine)),errors.collect(cdk.propertyValidator("robotSoftwareSuite",cdk.requiredValidator)(properties.robotSoftwareSuite)),errors.collect(cdk.propertyValidator("robotSoftwareSuite",CfnSimulationApplicationRobotSoftwareSuitePropertyValidator)(properties.robotSoftwareSuite)),errors.collect(cdk.propertyValidator("simulationSoftwareSuite",cdk.requiredValidator)(properties.simulationSoftwareSuite)),errors.collect(cdk.propertyValidator("simulationSoftwareSuite",CfnSimulationApplicationSimulationSoftwareSuitePropertyValidator)(properties.simulationSoftwareSuite)),errors.collect(cdk.propertyValidator("sources",cdk.listValidator(CfnSimulationApplicationSourceConfigPropertyValidator))(properties.sources)),errors.collect(cdk.propertyValidator("tags",cdk.hashValidator(cdk.validateString))(properties.tags)),errors.wrap('supplied properties not correct for "CfnSimulationApplicationProps"')}function convertCfnSimulationApplicationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationPropsValidator(properties).assertSuccess(),{CurrentRevisionId:cdk.stringToCloudFormation(properties.currentRevisionId),Environment:cdk.stringToCloudFormation(properties.environment),Name:cdk.stringToCloudFormation(properties.name),RenderingEngine:convertCfnSimulationApplicationRenderingEnginePropertyToCloudFormation(properties.renderingEngine),RobotSoftwareSuite:convertCfnSimulationApplicationRobotSoftwareSuitePropertyToCloudFormation(properties.robotSoftwareSuite),SimulationSoftwareSuite:convertCfnSimulationApplicationSimulationSoftwareSuitePropertyToCloudFormation(properties.simulationSoftwareSuite),Sources:cdk.listMapper(convertCfnSimulationApplicationSourceConfigPropertyToCloudFormation)(properties.sources),Tags:cdk.hashMapper(cdk.stringToCloudFormation)(properties.tags)}):properties}function CfnSimulationApplicationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("currentRevisionId","CurrentRevisionId",properties.CurrentRevisionId!=null?cfn_parse.FromCloudFormation.getString(properties.CurrentRevisionId):void 0),ret.addPropertyResult("environment","Environment",properties.Environment!=null?cfn_parse.FromCloudFormation.getString(properties.Environment):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("renderingEngine","RenderingEngine",properties.RenderingEngine!=null?CfnSimulationApplicationRenderingEnginePropertyFromCloudFormation(properties.RenderingEngine):void 0),ret.addPropertyResult("robotSoftwareSuite","RobotSoftwareSuite",properties.RobotSoftwareSuite!=null?CfnSimulationApplicationRobotSoftwareSuitePropertyFromCloudFormation(properties.RobotSoftwareSuite):void 0),ret.addPropertyResult("simulationSoftwareSuite","SimulationSoftwareSuite",properties.SimulationSoftwareSuite!=null?CfnSimulationApplicationSimulationSoftwareSuitePropertyFromCloudFormation(properties.SimulationSoftwareSuite):void 0),ret.addPropertyResult("sources","Sources",properties.Sources!=null?cfn_parse.FromCloudFormation.getArray(CfnSimulationApplicationSourceConfigPropertyFromCloudFormation)(properties.Sources):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSimulationApplicationVersion extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSimulationApplicationVersionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSimulationApplicationVersion(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSimulationApplicationVersion.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_robomaker_CfnSimulationApplicationVersionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSimulationApplicationVersion),error}cdk.requireProperty(props,"application",this),this.attrApplicationVersion=cdk.Token.asString(this.getAtt("ApplicationVersion",cdk.ResolutionTypeHint.STRING)),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.application=props.application,this.currentRevisionId=props.currentRevisionId}get cfnProperties(){return{application:this.application,currentRevisionId:this.currentRevisionId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSimulationApplicationVersion.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSimulationApplicationVersionPropsToCloudFormation(props)}}exports.CfnSimulationApplicationVersion=CfnSimulationApplicationVersion,_f=JSII_RTTI_SYMBOL_1,CfnSimulationApplicationVersion[_f]={fqn:"aws-cdk-lib.aws_robomaker.CfnSimulationApplicationVersion",version:"2.94.0"},CfnSimulationApplicationVersion.CFN_RESOURCE_TYPE_NAME="AWS::RoboMaker::SimulationApplicationVersion";function CfnSimulationApplicationVersionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("application",cdk.requiredValidator)(properties.application)),errors.collect(cdk.propertyValidator("application",cdk.validateString)(properties.application)),errors.collect(cdk.propertyValidator("currentRevisionId",cdk.validateString)(properties.currentRevisionId)),errors.wrap('supplied properties not correct for "CfnSimulationApplicationVersionProps"')}function convertCfnSimulationApplicationVersionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSimulationApplicationVersionPropsValidator(properties).assertSuccess(),{Application:cdk.stringToCloudFormation(properties.application),CurrentRevisionId:cdk.stringToCloudFormation(properties.currentRevisionId)}):properties}function CfnSimulationApplicationVersionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("application","Application",properties.Application!=null?cfn_parse.FromCloudFormation.getString(properties.Application):void 0),ret.addPropertyResult("currentRevisionId","CurrentRevisionId",properties.CurrentRevisionId!=null?cfn_parse.FromCloudFormation.getString(properties.CurrentRevisionId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
