"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KinesisVideoMetrics=void 0;class KinesisVideoMetrics{static getMediaSuccessSum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"GetMedia.Success",dimensionsMap:dimensions,statistic:"Sum"}}static putMediaSuccessSum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"PutMedia.Success",dimensionsMap:dimensions,statistic:"Sum"}}static getMediaMillisBehindNowSum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"GetMedia.MillisBehindNow",dimensionsMap:dimensions,statistic:"Sum"}}static listFragmentsLatencySum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"ListFragments.Latency",dimensionsMap:dimensions,statistic:"Sum"}}static putMediaFragmentIngestionLatencySum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"PutMedia.FragmentIngestionLatency",dimensionsMap:dimensions,statistic:"Sum"}}static putMediaFragmentPersistLatencySum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"PutMedia.FragmentPersistLatency",dimensionsMap:dimensions,statistic:"Sum"}}static putMediaIncomingBytesSum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"PutMedia.IncomingBytes",dimensionsMap:dimensions,statistic:"Sum"}}static putMediaIncomingFramesSum(dimensions){return{namespace:"AWS/KinesisVideo",metricName:"PutMedia.IncomingFrames",dimensionsMap:dimensions,statistic:"Sum"}}}exports.KinesisVideoMetrics=KinesisVideoMetrics;
