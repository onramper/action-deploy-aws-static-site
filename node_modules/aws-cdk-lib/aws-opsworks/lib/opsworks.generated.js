"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnVolume=exports.CfnUserProfile=exports.CfnStack=exports.CfnLayer=exports.CfnInstance=exports.CfnElasticLoadBalancerAttachment=exports.CfnApp=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnApp extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAppPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnApp(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnApp.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnAppProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnApp),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"stackId",this),cdk.requireProperty(props,"type",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.appSource=props.appSource,this.attributes=props.attributes,this.dataSources=props.dataSources,this.description=props.description,this.domains=props.domains,this.enableSsl=props.enableSsl,this.environment=props.environment,this.name=props.name,this.shortname=props.shortname,this.sslConfiguration=props.sslConfiguration,this.stackId=props.stackId,this.type=props.type}get cfnProperties(){return{appSource:this.appSource,attributes:this.attributes,dataSources:this.dataSources,description:this.description,domains:this.domains,enableSsl:this.enableSsl,environment:this.environment,name:this.name,shortname:this.shortname,sslConfiguration:this.sslConfiguration,stackId:this.stackId,type:this.type}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnApp.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnAppPropsToCloudFormation(props)}}exports.CfnApp=CfnApp,_a=JSII_RTTI_SYMBOL_1,CfnApp[_a]={fqn:"aws-cdk-lib.aws_opsworks.CfnApp",version:"2.94.0"},CfnApp.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::App";function CfnAppSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("revision",cdk.validateString)(properties.revision)),errors.collect(cdk.propertyValidator("sshKey",cdk.validateString)(properties.sshKey)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "SourceProperty"')}function convertCfnAppSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAppSourcePropertyValidator(properties).assertSuccess(),{Password:cdk.stringToCloudFormation(properties.password),Revision:cdk.stringToCloudFormation(properties.revision),SshKey:cdk.stringToCloudFormation(properties.sshKey),Type:cdk.stringToCloudFormation(properties.type),Url:cdk.stringToCloudFormation(properties.url),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnAppSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("revision","Revision",properties.Revision!=null?cfn_parse.FromCloudFormation.getString(properties.Revision):void 0),ret.addPropertyResult("sshKey","SshKey",properties.SshKey!=null?cfn_parse.FromCloudFormation.getString(properties.SshKey):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addPropertyResult("username","Username",properties.Username!=null?cfn_parse.FromCloudFormation.getString(properties.Username):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAppDataSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("arn",cdk.validateString)(properties.arn)),errors.collect(cdk.propertyValidator("databaseName",cdk.validateString)(properties.databaseName)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "DataSourceProperty"')}function convertCfnAppDataSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAppDataSourcePropertyValidator(properties).assertSuccess(),{Arn:cdk.stringToCloudFormation(properties.arn),DatabaseName:cdk.stringToCloudFormation(properties.databaseName),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnAppDataSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("arn","Arn",properties.Arn!=null?cfn_parse.FromCloudFormation.getString(properties.Arn):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAppEnvironmentVariablePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.requiredValidator)(properties.key)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("secure",cdk.validateBoolean)(properties.secure)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "EnvironmentVariableProperty"')}function convertCfnAppEnvironmentVariablePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAppEnvironmentVariablePropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Secure:cdk.booleanToCloudFormation(properties.secure),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnAppEnvironmentVariablePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("secure","Secure",properties.Secure!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Secure):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAppSslConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificate",cdk.validateString)(properties.certificate)),errors.collect(cdk.propertyValidator("chain",cdk.validateString)(properties.chain)),errors.collect(cdk.propertyValidator("privateKey",cdk.validateString)(properties.privateKey)),errors.wrap('supplied properties not correct for "SslConfigurationProperty"')}function convertCfnAppSslConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAppSslConfigurationPropertyValidator(properties).assertSuccess(),{Certificate:cdk.stringToCloudFormation(properties.certificate),Chain:cdk.stringToCloudFormation(properties.chain),PrivateKey:cdk.stringToCloudFormation(properties.privateKey)}):properties}function CfnAppSslConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificate","Certificate",properties.Certificate!=null?cfn_parse.FromCloudFormation.getString(properties.Certificate):void 0),ret.addPropertyResult("chain","Chain",properties.Chain!=null?cfn_parse.FromCloudFormation.getString(properties.Chain):void 0),ret.addPropertyResult("privateKey","PrivateKey",properties.PrivateKey!=null?cfn_parse.FromCloudFormation.getString(properties.PrivateKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAppPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appSource",CfnAppSourcePropertyValidator)(properties.appSource)),errors.collect(cdk.propertyValidator("attributes",cdk.hashValidator(cdk.validateString))(properties.attributes)),errors.collect(cdk.propertyValidator("dataSources",cdk.listValidator(CfnAppDataSourcePropertyValidator))(properties.dataSources)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("domains",cdk.listValidator(cdk.validateString))(properties.domains)),errors.collect(cdk.propertyValidator("enableSsl",cdk.validateBoolean)(properties.enableSsl)),errors.collect(cdk.propertyValidator("environment",cdk.listValidator(CfnAppEnvironmentVariablePropertyValidator))(properties.environment)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("shortname",cdk.validateString)(properties.shortname)),errors.collect(cdk.propertyValidator("sslConfiguration",CfnAppSslConfigurationPropertyValidator)(properties.sslConfiguration)),errors.collect(cdk.propertyValidator("stackId",cdk.requiredValidator)(properties.stackId)),errors.collect(cdk.propertyValidator("stackId",cdk.validateString)(properties.stackId)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnAppProps"')}function convertCfnAppPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAppPropsValidator(properties).assertSuccess(),{AppSource:convertCfnAppSourcePropertyToCloudFormation(properties.appSource),Attributes:cdk.hashMapper(cdk.stringToCloudFormation)(properties.attributes),DataSources:cdk.listMapper(convertCfnAppDataSourcePropertyToCloudFormation)(properties.dataSources),Description:cdk.stringToCloudFormation(properties.description),Domains:cdk.listMapper(cdk.stringToCloudFormation)(properties.domains),EnableSsl:cdk.booleanToCloudFormation(properties.enableSsl),Environment:cdk.listMapper(convertCfnAppEnvironmentVariablePropertyToCloudFormation)(properties.environment),Name:cdk.stringToCloudFormation(properties.name),Shortname:cdk.stringToCloudFormation(properties.shortname),SslConfiguration:convertCfnAppSslConfigurationPropertyToCloudFormation(properties.sslConfiguration),StackId:cdk.stringToCloudFormation(properties.stackId),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnAppPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appSource","AppSource",properties.AppSource!=null?CfnAppSourcePropertyFromCloudFormation(properties.AppSource):void 0),ret.addPropertyResult("attributes","Attributes",properties.Attributes!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Attributes):void 0),ret.addPropertyResult("dataSources","DataSources",properties.DataSources!=null?cfn_parse.FromCloudFormation.getArray(CfnAppDataSourcePropertyFromCloudFormation)(properties.DataSources):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("domains","Domains",properties.Domains!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Domains):void 0),ret.addPropertyResult("enableSsl","EnableSsl",properties.EnableSsl!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableSsl):void 0),ret.addPropertyResult("environment","Environment",properties.Environment!=null?cfn_parse.FromCloudFormation.getArray(CfnAppEnvironmentVariablePropertyFromCloudFormation)(properties.Environment):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("shortname","Shortname",properties.Shortname!=null?cfn_parse.FromCloudFormation.getString(properties.Shortname):void 0),ret.addPropertyResult("sslConfiguration","SslConfiguration",properties.SslConfiguration!=null?CfnAppSslConfigurationPropertyFromCloudFormation(properties.SslConfiguration):void 0),ret.addPropertyResult("stackId","StackId",properties.StackId!=null?cfn_parse.FromCloudFormation.getString(properties.StackId):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnElasticLoadBalancerAttachment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnElasticLoadBalancerAttachmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnElasticLoadBalancerAttachment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnElasticLoadBalancerAttachment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnElasticLoadBalancerAttachmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnElasticLoadBalancerAttachment),error}cdk.requireProperty(props,"elasticLoadBalancerName",this),cdk.requireProperty(props,"layerId",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.elasticLoadBalancerName=props.elasticLoadBalancerName,this.layerId=props.layerId}get cfnProperties(){return{elasticLoadBalancerName:this.elasticLoadBalancerName,layerId:this.layerId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnElasticLoadBalancerAttachment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnElasticLoadBalancerAttachmentPropsToCloudFormation(props)}}exports.CfnElasticLoadBalancerAttachment=CfnElasticLoadBalancerAttachment,_b=JSII_RTTI_SYMBOL_1,CfnElasticLoadBalancerAttachment[_b]={fqn:"aws-cdk-lib.aws_opsworks.CfnElasticLoadBalancerAttachment",version:"2.94.0"},CfnElasticLoadBalancerAttachment.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::ElasticLoadBalancerAttachment";function CfnElasticLoadBalancerAttachmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("elasticLoadBalancerName",cdk.requiredValidator)(properties.elasticLoadBalancerName)),errors.collect(cdk.propertyValidator("elasticLoadBalancerName",cdk.validateString)(properties.elasticLoadBalancerName)),errors.collect(cdk.propertyValidator("layerId",cdk.requiredValidator)(properties.layerId)),errors.collect(cdk.propertyValidator("layerId",cdk.validateString)(properties.layerId)),errors.wrap('supplied properties not correct for "CfnElasticLoadBalancerAttachmentProps"')}function convertCfnElasticLoadBalancerAttachmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnElasticLoadBalancerAttachmentPropsValidator(properties).assertSuccess(),{ElasticLoadBalancerName:cdk.stringToCloudFormation(properties.elasticLoadBalancerName),LayerId:cdk.stringToCloudFormation(properties.layerId)}):properties}function CfnElasticLoadBalancerAttachmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("elasticLoadBalancerName","ElasticLoadBalancerName",properties.ElasticLoadBalancerName!=null?cfn_parse.FromCloudFormation.getString(properties.ElasticLoadBalancerName):void 0),ret.addPropertyResult("layerId","LayerId",properties.LayerId!=null?cfn_parse.FromCloudFormation.getString(properties.LayerId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnInstance extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnInstancePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnInstance(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnInstance.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnInstanceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnInstance),error}cdk.requireProperty(props,"instanceType",this),cdk.requireProperty(props,"layerIds",this),cdk.requireProperty(props,"stackId",this),this.attrAvailabilityZone=cdk.Token.asString(this.getAtt("AvailabilityZone",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrPrivateDnsName=cdk.Token.asString(this.getAtt("PrivateDnsName",cdk.ResolutionTypeHint.STRING)),this.attrPrivateIp=cdk.Token.asString(this.getAtt("PrivateIp",cdk.ResolutionTypeHint.STRING)),this.attrPublicDnsName=cdk.Token.asString(this.getAtt("PublicDnsName",cdk.ResolutionTypeHint.STRING)),this.attrPublicIp=cdk.Token.asString(this.getAtt("PublicIp",cdk.ResolutionTypeHint.STRING)),this.agentVersion=props.agentVersion,this.amiId=props.amiId,this.architecture=props.architecture,this.autoScalingType=props.autoScalingType,this.availabilityZone=props.availabilityZone,this.blockDeviceMappings=props.blockDeviceMappings,this.ebsOptimized=props.ebsOptimized,this.elasticIps=props.elasticIps,this.hostname=props.hostname,this.installUpdatesOnBoot=props.installUpdatesOnBoot,this.instanceType=props.instanceType,this.layerIds=props.layerIds,this.os=props.os,this.rootDeviceType=props.rootDeviceType,this.sshKeyName=props.sshKeyName,this.stackId=props.stackId,this.subnetId=props.subnetId,this.tenancy=props.tenancy,this.timeBasedAutoScaling=props.timeBasedAutoScaling,this.virtualizationType=props.virtualizationType,this.volumes=props.volumes}get cfnProperties(){return{agentVersion:this.agentVersion,amiId:this.amiId,architecture:this.architecture,autoScalingType:this.autoScalingType,availabilityZone:this.availabilityZone,blockDeviceMappings:this.blockDeviceMappings,ebsOptimized:this.ebsOptimized,elasticIps:this.elasticIps,hostname:this.hostname,installUpdatesOnBoot:this.installUpdatesOnBoot,instanceType:this.instanceType,layerIds:this.layerIds,os:this.os,rootDeviceType:this.rootDeviceType,sshKeyName:this.sshKeyName,stackId:this.stackId,subnetId:this.subnetId,tenancy:this.tenancy,timeBasedAutoScaling:this.timeBasedAutoScaling,virtualizationType:this.virtualizationType,volumes:this.volumes}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnInstance.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnInstancePropsToCloudFormation(props)}}exports.CfnInstance=CfnInstance,_c=JSII_RTTI_SYMBOL_1,CfnInstance[_c]={fqn:"aws-cdk-lib.aws_opsworks.CfnInstance",version:"2.94.0"},CfnInstance.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::Instance";function CfnInstanceEbsBlockDevicePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deleteOnTermination",cdk.validateBoolean)(properties.deleteOnTermination)),errors.collect(cdk.propertyValidator("iops",cdk.validateNumber)(properties.iops)),errors.collect(cdk.propertyValidator("snapshotId",cdk.validateString)(properties.snapshotId)),errors.collect(cdk.propertyValidator("volumeSize",cdk.validateNumber)(properties.volumeSize)),errors.collect(cdk.propertyValidator("volumeType",cdk.validateString)(properties.volumeType)),errors.wrap('supplied properties not correct for "EbsBlockDeviceProperty"')}function convertCfnInstanceEbsBlockDevicePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceEbsBlockDevicePropertyValidator(properties).assertSuccess(),{DeleteOnTermination:cdk.booleanToCloudFormation(properties.deleteOnTermination),Iops:cdk.numberToCloudFormation(properties.iops),SnapshotId:cdk.stringToCloudFormation(properties.snapshotId),VolumeSize:cdk.numberToCloudFormation(properties.volumeSize),VolumeType:cdk.stringToCloudFormation(properties.volumeType)}):properties}function CfnInstanceEbsBlockDevicePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deleteOnTermination","DeleteOnTermination",properties.DeleteOnTermination!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeleteOnTermination):void 0),ret.addPropertyResult("iops","Iops",properties.Iops!=null?cfn_parse.FromCloudFormation.getNumber(properties.Iops):void 0),ret.addPropertyResult("snapshotId","SnapshotId",properties.SnapshotId!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotId):void 0),ret.addPropertyResult("volumeSize","VolumeSize",properties.VolumeSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.VolumeSize):void 0),ret.addPropertyResult("volumeType","VolumeType",properties.VolumeType!=null?cfn_parse.FromCloudFormation.getString(properties.VolumeType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceBlockDeviceMappingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deviceName",cdk.validateString)(properties.deviceName)),errors.collect(cdk.propertyValidator("ebs",CfnInstanceEbsBlockDevicePropertyValidator)(properties.ebs)),errors.collect(cdk.propertyValidator("noDevice",cdk.validateString)(properties.noDevice)),errors.collect(cdk.propertyValidator("virtualName",cdk.validateString)(properties.virtualName)),errors.wrap('supplied properties not correct for "BlockDeviceMappingProperty"')}function convertCfnInstanceBlockDeviceMappingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceBlockDeviceMappingPropertyValidator(properties).assertSuccess(),{DeviceName:cdk.stringToCloudFormation(properties.deviceName),Ebs:convertCfnInstanceEbsBlockDevicePropertyToCloudFormation(properties.ebs),NoDevice:cdk.stringToCloudFormation(properties.noDevice),VirtualName:cdk.stringToCloudFormation(properties.virtualName)}):properties}function CfnInstanceBlockDeviceMappingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deviceName","DeviceName",properties.DeviceName!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceName):void 0),ret.addPropertyResult("ebs","Ebs",properties.Ebs!=null?CfnInstanceEbsBlockDevicePropertyFromCloudFormation(properties.Ebs):void 0),ret.addPropertyResult("noDevice","NoDevice",properties.NoDevice!=null?cfn_parse.FromCloudFormation.getString(properties.NoDevice):void 0),ret.addPropertyResult("virtualName","VirtualName",properties.VirtualName!=null?cfn_parse.FromCloudFormation.getString(properties.VirtualName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceTimeBasedAutoScalingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("friday",cdk.hashValidator(cdk.validateString))(properties.friday)),errors.collect(cdk.propertyValidator("monday",cdk.hashValidator(cdk.validateString))(properties.monday)),errors.collect(cdk.propertyValidator("saturday",cdk.hashValidator(cdk.validateString))(properties.saturday)),errors.collect(cdk.propertyValidator("sunday",cdk.hashValidator(cdk.validateString))(properties.sunday)),errors.collect(cdk.propertyValidator("thursday",cdk.hashValidator(cdk.validateString))(properties.thursday)),errors.collect(cdk.propertyValidator("tuesday",cdk.hashValidator(cdk.validateString))(properties.tuesday)),errors.collect(cdk.propertyValidator("wednesday",cdk.hashValidator(cdk.validateString))(properties.wednesday)),errors.wrap('supplied properties not correct for "TimeBasedAutoScalingProperty"')}function convertCfnInstanceTimeBasedAutoScalingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceTimeBasedAutoScalingPropertyValidator(properties).assertSuccess(),{Friday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.friday),Monday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.monday),Saturday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.saturday),Sunday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.sunday),Thursday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.thursday),Tuesday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.tuesday),Wednesday:cdk.hashMapper(cdk.stringToCloudFormation)(properties.wednesday)}):properties}function CfnInstanceTimeBasedAutoScalingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("friday","Friday",properties.Friday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Friday):void 0),ret.addPropertyResult("monday","Monday",properties.Monday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Monday):void 0),ret.addPropertyResult("saturday","Saturday",properties.Saturday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Saturday):void 0),ret.addPropertyResult("sunday","Sunday",properties.Sunday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Sunday):void 0),ret.addPropertyResult("thursday","Thursday",properties.Thursday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Thursday):void 0),ret.addPropertyResult("tuesday","Tuesday",properties.Tuesday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Tuesday):void 0),ret.addPropertyResult("wednesday","Wednesday",properties.Wednesday!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Wednesday):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstancePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("agentVersion",cdk.validateString)(properties.agentVersion)),errors.collect(cdk.propertyValidator("amiId",cdk.validateString)(properties.amiId)),errors.collect(cdk.propertyValidator("architecture",cdk.validateString)(properties.architecture)),errors.collect(cdk.propertyValidator("autoScalingType",cdk.validateString)(properties.autoScalingType)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("blockDeviceMappings",cdk.listValidator(CfnInstanceBlockDeviceMappingPropertyValidator))(properties.blockDeviceMappings)),errors.collect(cdk.propertyValidator("ebsOptimized",cdk.validateBoolean)(properties.ebsOptimized)),errors.collect(cdk.propertyValidator("elasticIps",cdk.listValidator(cdk.validateString))(properties.elasticIps)),errors.collect(cdk.propertyValidator("hostname",cdk.validateString)(properties.hostname)),errors.collect(cdk.propertyValidator("installUpdatesOnBoot",cdk.validateBoolean)(properties.installUpdatesOnBoot)),errors.collect(cdk.propertyValidator("instanceType",cdk.requiredValidator)(properties.instanceType)),errors.collect(cdk.propertyValidator("instanceType",cdk.validateString)(properties.instanceType)),errors.collect(cdk.propertyValidator("layerIds",cdk.requiredValidator)(properties.layerIds)),errors.collect(cdk.propertyValidator("layerIds",cdk.listValidator(cdk.validateString))(properties.layerIds)),errors.collect(cdk.propertyValidator("os",cdk.validateString)(properties.os)),errors.collect(cdk.propertyValidator("rootDeviceType",cdk.validateString)(properties.rootDeviceType)),errors.collect(cdk.propertyValidator("sshKeyName",cdk.validateString)(properties.sshKeyName)),errors.collect(cdk.propertyValidator("stackId",cdk.requiredValidator)(properties.stackId)),errors.collect(cdk.propertyValidator("stackId",cdk.validateString)(properties.stackId)),errors.collect(cdk.propertyValidator("subnetId",cdk.validateString)(properties.subnetId)),errors.collect(cdk.propertyValidator("tenancy",cdk.validateString)(properties.tenancy)),errors.collect(cdk.propertyValidator("timeBasedAutoScaling",CfnInstanceTimeBasedAutoScalingPropertyValidator)(properties.timeBasedAutoScaling)),errors.collect(cdk.propertyValidator("virtualizationType",cdk.validateString)(properties.virtualizationType)),errors.collect(cdk.propertyValidator("volumes",cdk.listValidator(cdk.validateString))(properties.volumes)),errors.wrap('supplied properties not correct for "CfnInstanceProps"')}function convertCfnInstancePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstancePropsValidator(properties).assertSuccess(),{AgentVersion:cdk.stringToCloudFormation(properties.agentVersion),AmiId:cdk.stringToCloudFormation(properties.amiId),Architecture:cdk.stringToCloudFormation(properties.architecture),AutoScalingType:cdk.stringToCloudFormation(properties.autoScalingType),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),BlockDeviceMappings:cdk.listMapper(convertCfnInstanceBlockDeviceMappingPropertyToCloudFormation)(properties.blockDeviceMappings),EbsOptimized:cdk.booleanToCloudFormation(properties.ebsOptimized),ElasticIps:cdk.listMapper(cdk.stringToCloudFormation)(properties.elasticIps),Hostname:cdk.stringToCloudFormation(properties.hostname),InstallUpdatesOnBoot:cdk.booleanToCloudFormation(properties.installUpdatesOnBoot),InstanceType:cdk.stringToCloudFormation(properties.instanceType),LayerIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.layerIds),Os:cdk.stringToCloudFormation(properties.os),RootDeviceType:cdk.stringToCloudFormation(properties.rootDeviceType),SshKeyName:cdk.stringToCloudFormation(properties.sshKeyName),StackId:cdk.stringToCloudFormation(properties.stackId),SubnetId:cdk.stringToCloudFormation(properties.subnetId),Tenancy:cdk.stringToCloudFormation(properties.tenancy),TimeBasedAutoScaling:convertCfnInstanceTimeBasedAutoScalingPropertyToCloudFormation(properties.timeBasedAutoScaling),VirtualizationType:cdk.stringToCloudFormation(properties.virtualizationType),Volumes:cdk.listMapper(cdk.stringToCloudFormation)(properties.volumes)}):properties}function CfnInstancePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentVersion","AgentVersion",properties.AgentVersion!=null?cfn_parse.FromCloudFormation.getString(properties.AgentVersion):void 0),ret.addPropertyResult("amiId","AmiId",properties.AmiId!=null?cfn_parse.FromCloudFormation.getString(properties.AmiId):void 0),ret.addPropertyResult("architecture","Architecture",properties.Architecture!=null?cfn_parse.FromCloudFormation.getString(properties.Architecture):void 0),ret.addPropertyResult("autoScalingType","AutoScalingType",properties.AutoScalingType!=null?cfn_parse.FromCloudFormation.getString(properties.AutoScalingType):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("blockDeviceMappings","BlockDeviceMappings",properties.BlockDeviceMappings!=null?cfn_parse.FromCloudFormation.getArray(CfnInstanceBlockDeviceMappingPropertyFromCloudFormation)(properties.BlockDeviceMappings):void 0),ret.addPropertyResult("ebsOptimized","EbsOptimized",properties.EbsOptimized!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EbsOptimized):void 0),ret.addPropertyResult("elasticIps","ElasticIps",properties.ElasticIps!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ElasticIps):void 0),ret.addPropertyResult("hostname","Hostname",properties.Hostname!=null?cfn_parse.FromCloudFormation.getString(properties.Hostname):void 0),ret.addPropertyResult("installUpdatesOnBoot","InstallUpdatesOnBoot",properties.InstallUpdatesOnBoot!=null?cfn_parse.FromCloudFormation.getBoolean(properties.InstallUpdatesOnBoot):void 0),ret.addPropertyResult("instanceType","InstanceType",properties.InstanceType!=null?cfn_parse.FromCloudFormation.getString(properties.InstanceType):void 0),ret.addPropertyResult("layerIds","LayerIds",properties.LayerIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.LayerIds):void 0),ret.addPropertyResult("os","Os",properties.Os!=null?cfn_parse.FromCloudFormation.getString(properties.Os):void 0),ret.addPropertyResult("rootDeviceType","RootDeviceType",properties.RootDeviceType!=null?cfn_parse.FromCloudFormation.getString(properties.RootDeviceType):void 0),ret.addPropertyResult("sshKeyName","SshKeyName",properties.SshKeyName!=null?cfn_parse.FromCloudFormation.getString(properties.SshKeyName):void 0),ret.addPropertyResult("stackId","StackId",properties.StackId!=null?cfn_parse.FromCloudFormation.getString(properties.StackId):void 0),ret.addPropertyResult("subnetId","SubnetId",properties.SubnetId!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetId):void 0),ret.addPropertyResult("tenancy","Tenancy",properties.Tenancy!=null?cfn_parse.FromCloudFormation.getString(properties.Tenancy):void 0),ret.addPropertyResult("timeBasedAutoScaling","TimeBasedAutoScaling",properties.TimeBasedAutoScaling!=null?CfnInstanceTimeBasedAutoScalingPropertyFromCloudFormation(properties.TimeBasedAutoScaling):void 0),ret.addPropertyResult("virtualizationType","VirtualizationType",properties.VirtualizationType!=null?cfn_parse.FromCloudFormation.getString(properties.VirtualizationType):void 0),ret.addPropertyResult("volumes","Volumes",properties.Volumes!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Volumes):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLayer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLayerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLayer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLayer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnLayerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLayer),error}cdk.requireProperty(props,"autoAssignElasticIps",this),cdk.requireProperty(props,"autoAssignPublicIps",this),cdk.requireProperty(props,"enableAutoHealing",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"shortname",this),cdk.requireProperty(props,"stackId",this),cdk.requireProperty(props,"type",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attributes=props.attributes,this.autoAssignElasticIps=props.autoAssignElasticIps,this.autoAssignPublicIps=props.autoAssignPublicIps,this.customInstanceProfileArn=props.customInstanceProfileArn,this.customJson=props.customJson,this.customRecipes=props.customRecipes,this.customSecurityGroupIds=props.customSecurityGroupIds,this.enableAutoHealing=props.enableAutoHealing,this.installUpdatesOnBoot=props.installUpdatesOnBoot,this.lifecycleEventConfiguration=props.lifecycleEventConfiguration,this.loadBasedAutoScaling=props.loadBasedAutoScaling,this.name=props.name,this.packages=props.packages,this.shortname=props.shortname,this.stackId=props.stackId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::OpsWorks::Layer",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.type=props.type,this.useEbsOptimizedInstances=props.useEbsOptimizedInstances,this.volumeConfigurations=props.volumeConfigurations}get cfnProperties(){return{attributes:this.attributes,autoAssignElasticIps:this.autoAssignElasticIps,autoAssignPublicIps:this.autoAssignPublicIps,customInstanceProfileArn:this.customInstanceProfileArn,customJson:this.customJson,customRecipes:this.customRecipes,customSecurityGroupIds:this.customSecurityGroupIds,enableAutoHealing:this.enableAutoHealing,installUpdatesOnBoot:this.installUpdatesOnBoot,lifecycleEventConfiguration:this.lifecycleEventConfiguration,loadBasedAutoScaling:this.loadBasedAutoScaling,name:this.name,packages:this.packages,shortname:this.shortname,stackId:this.stackId,tags:this.tags.renderTags(),type:this.type,useEbsOptimizedInstances:this.useEbsOptimizedInstances,volumeConfigurations:this.volumeConfigurations}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLayer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLayerPropsToCloudFormation(props)}}exports.CfnLayer=CfnLayer,_d=JSII_RTTI_SYMBOL_1,CfnLayer[_d]={fqn:"aws-cdk-lib.aws_opsworks.CfnLayer",version:"2.94.0"},CfnLayer.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::Layer";function CfnLayerRecipesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("configure",cdk.listValidator(cdk.validateString))(properties.configure)),errors.collect(cdk.propertyValidator("deploy",cdk.listValidator(cdk.validateString))(properties.deploy)),errors.collect(cdk.propertyValidator("setup",cdk.listValidator(cdk.validateString))(properties.setup)),errors.collect(cdk.propertyValidator("shutdown",cdk.listValidator(cdk.validateString))(properties.shutdown)),errors.collect(cdk.propertyValidator("undeploy",cdk.listValidator(cdk.validateString))(properties.undeploy)),errors.wrap('supplied properties not correct for "RecipesProperty"')}function convertCfnLayerRecipesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerRecipesPropertyValidator(properties).assertSuccess(),{Configure:cdk.listMapper(cdk.stringToCloudFormation)(properties.configure),Deploy:cdk.listMapper(cdk.stringToCloudFormation)(properties.deploy),Setup:cdk.listMapper(cdk.stringToCloudFormation)(properties.setup),Shutdown:cdk.listMapper(cdk.stringToCloudFormation)(properties.shutdown),Undeploy:cdk.listMapper(cdk.stringToCloudFormation)(properties.undeploy)}):properties}function CfnLayerRecipesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("configure","Configure",properties.Configure!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Configure):void 0),ret.addPropertyResult("deploy","Deploy",properties.Deploy!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Deploy):void 0),ret.addPropertyResult("setup","Setup",properties.Setup!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Setup):void 0),ret.addPropertyResult("shutdown","Shutdown",properties.Shutdown!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Shutdown):void 0),ret.addPropertyResult("undeploy","Undeploy",properties.Undeploy!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Undeploy):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerShutdownEventConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("delayUntilElbConnectionsDrained",cdk.validateBoolean)(properties.delayUntilElbConnectionsDrained)),errors.collect(cdk.propertyValidator("executionTimeout",cdk.validateNumber)(properties.executionTimeout)),errors.wrap('supplied properties not correct for "ShutdownEventConfigurationProperty"')}function convertCfnLayerShutdownEventConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerShutdownEventConfigurationPropertyValidator(properties).assertSuccess(),{DelayUntilElbConnectionsDrained:cdk.booleanToCloudFormation(properties.delayUntilElbConnectionsDrained),ExecutionTimeout:cdk.numberToCloudFormation(properties.executionTimeout)}):properties}function CfnLayerShutdownEventConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("delayUntilElbConnectionsDrained","DelayUntilElbConnectionsDrained",properties.DelayUntilElbConnectionsDrained!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DelayUntilElbConnectionsDrained):void 0),ret.addPropertyResult("executionTimeout","ExecutionTimeout",properties.ExecutionTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ExecutionTimeout):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerLifecycleEventConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("shutdownEventConfiguration",CfnLayerShutdownEventConfigurationPropertyValidator)(properties.shutdownEventConfiguration)),errors.wrap('supplied properties not correct for "LifecycleEventConfigurationProperty"')}function convertCfnLayerLifecycleEventConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerLifecycleEventConfigurationPropertyValidator(properties).assertSuccess(),{ShutdownEventConfiguration:convertCfnLayerShutdownEventConfigurationPropertyToCloudFormation(properties.shutdownEventConfiguration)}):properties}function CfnLayerLifecycleEventConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("shutdownEventConfiguration","ShutdownEventConfiguration",properties.ShutdownEventConfiguration!=null?CfnLayerShutdownEventConfigurationPropertyFromCloudFormation(properties.ShutdownEventConfiguration):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerAutoScalingThresholdsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cpuThreshold",cdk.validateNumber)(properties.cpuThreshold)),errors.collect(cdk.propertyValidator("ignoreMetricsTime",cdk.validateNumber)(properties.ignoreMetricsTime)),errors.collect(cdk.propertyValidator("instanceCount",cdk.validateNumber)(properties.instanceCount)),errors.collect(cdk.propertyValidator("loadThreshold",cdk.validateNumber)(properties.loadThreshold)),errors.collect(cdk.propertyValidator("memoryThreshold",cdk.validateNumber)(properties.memoryThreshold)),errors.collect(cdk.propertyValidator("thresholdsWaitTime",cdk.validateNumber)(properties.thresholdsWaitTime)),errors.wrap('supplied properties not correct for "AutoScalingThresholdsProperty"')}function convertCfnLayerAutoScalingThresholdsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerAutoScalingThresholdsPropertyValidator(properties).assertSuccess(),{CpuThreshold:cdk.numberToCloudFormation(properties.cpuThreshold),IgnoreMetricsTime:cdk.numberToCloudFormation(properties.ignoreMetricsTime),InstanceCount:cdk.numberToCloudFormation(properties.instanceCount),LoadThreshold:cdk.numberToCloudFormation(properties.loadThreshold),MemoryThreshold:cdk.numberToCloudFormation(properties.memoryThreshold),ThresholdsWaitTime:cdk.numberToCloudFormation(properties.thresholdsWaitTime)}):properties}function CfnLayerAutoScalingThresholdsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cpuThreshold","CpuThreshold",properties.CpuThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.CpuThreshold):void 0),ret.addPropertyResult("ignoreMetricsTime","IgnoreMetricsTime",properties.IgnoreMetricsTime!=null?cfn_parse.FromCloudFormation.getNumber(properties.IgnoreMetricsTime):void 0),ret.addPropertyResult("instanceCount","InstanceCount",properties.InstanceCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.InstanceCount):void 0),ret.addPropertyResult("loadThreshold","LoadThreshold",properties.LoadThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.LoadThreshold):void 0),ret.addPropertyResult("memoryThreshold","MemoryThreshold",properties.MemoryThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.MemoryThreshold):void 0),ret.addPropertyResult("thresholdsWaitTime","ThresholdsWaitTime",properties.ThresholdsWaitTime!=null?cfn_parse.FromCloudFormation.getNumber(properties.ThresholdsWaitTime):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerLoadBasedAutoScalingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("downScaling",CfnLayerAutoScalingThresholdsPropertyValidator)(properties.downScaling)),errors.collect(cdk.propertyValidator("enable",cdk.validateBoolean)(properties.enable)),errors.collect(cdk.propertyValidator("upScaling",CfnLayerAutoScalingThresholdsPropertyValidator)(properties.upScaling)),errors.wrap('supplied properties not correct for "LoadBasedAutoScalingProperty"')}function convertCfnLayerLoadBasedAutoScalingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerLoadBasedAutoScalingPropertyValidator(properties).assertSuccess(),{DownScaling:convertCfnLayerAutoScalingThresholdsPropertyToCloudFormation(properties.downScaling),Enable:cdk.booleanToCloudFormation(properties.enable),UpScaling:convertCfnLayerAutoScalingThresholdsPropertyToCloudFormation(properties.upScaling)}):properties}function CfnLayerLoadBasedAutoScalingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("downScaling","DownScaling",properties.DownScaling!=null?CfnLayerAutoScalingThresholdsPropertyFromCloudFormation(properties.DownScaling):void 0),ret.addPropertyResult("enable","Enable",properties.Enable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enable):void 0),ret.addPropertyResult("upScaling","UpScaling",properties.UpScaling!=null?CfnLayerAutoScalingThresholdsPropertyFromCloudFormation(properties.UpScaling):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerVolumeConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encrypted",cdk.validateBoolean)(properties.encrypted)),errors.collect(cdk.propertyValidator("iops",cdk.validateNumber)(properties.iops)),errors.collect(cdk.propertyValidator("mountPoint",cdk.validateString)(properties.mountPoint)),errors.collect(cdk.propertyValidator("numberOfDisks",cdk.validateNumber)(properties.numberOfDisks)),errors.collect(cdk.propertyValidator("raidLevel",cdk.validateNumber)(properties.raidLevel)),errors.collect(cdk.propertyValidator("size",cdk.validateNumber)(properties.size)),errors.collect(cdk.propertyValidator("volumeType",cdk.validateString)(properties.volumeType)),errors.wrap('supplied properties not correct for "VolumeConfigurationProperty"')}function convertCfnLayerVolumeConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerVolumeConfigurationPropertyValidator(properties).assertSuccess(),{Encrypted:cdk.booleanToCloudFormation(properties.encrypted),Iops:cdk.numberToCloudFormation(properties.iops),MountPoint:cdk.stringToCloudFormation(properties.mountPoint),NumberOfDisks:cdk.numberToCloudFormation(properties.numberOfDisks),RaidLevel:cdk.numberToCloudFormation(properties.raidLevel),Size:cdk.numberToCloudFormation(properties.size),VolumeType:cdk.stringToCloudFormation(properties.volumeType)}):properties}function CfnLayerVolumeConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("encrypted","Encrypted",properties.Encrypted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted):void 0),ret.addPropertyResult("iops","Iops",properties.Iops!=null?cfn_parse.FromCloudFormation.getNumber(properties.Iops):void 0),ret.addPropertyResult("mountPoint","MountPoint",properties.MountPoint!=null?cfn_parse.FromCloudFormation.getString(properties.MountPoint):void 0),ret.addPropertyResult("numberOfDisks","NumberOfDisks",properties.NumberOfDisks!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberOfDisks):void 0),ret.addPropertyResult("raidLevel","RaidLevel",properties.RaidLevel!=null?cfn_parse.FromCloudFormation.getNumber(properties.RaidLevel):void 0),ret.addPropertyResult("size","Size",properties.Size!=null?cfn_parse.FromCloudFormation.getNumber(properties.Size):void 0),ret.addPropertyResult("volumeType","VolumeType",properties.VolumeType!=null?cfn_parse.FromCloudFormation.getString(properties.VolumeType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLayerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attributes",cdk.hashValidator(cdk.validateString))(properties.attributes)),errors.collect(cdk.propertyValidator("autoAssignElasticIps",cdk.requiredValidator)(properties.autoAssignElasticIps)),errors.collect(cdk.propertyValidator("autoAssignElasticIps",cdk.validateBoolean)(properties.autoAssignElasticIps)),errors.collect(cdk.propertyValidator("autoAssignPublicIps",cdk.requiredValidator)(properties.autoAssignPublicIps)),errors.collect(cdk.propertyValidator("autoAssignPublicIps",cdk.validateBoolean)(properties.autoAssignPublicIps)),errors.collect(cdk.propertyValidator("customInstanceProfileArn",cdk.validateString)(properties.customInstanceProfileArn)),errors.collect(cdk.propertyValidator("customJson",cdk.validateObject)(properties.customJson)),errors.collect(cdk.propertyValidator("customRecipes",CfnLayerRecipesPropertyValidator)(properties.customRecipes)),errors.collect(cdk.propertyValidator("customSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.customSecurityGroupIds)),errors.collect(cdk.propertyValidator("enableAutoHealing",cdk.requiredValidator)(properties.enableAutoHealing)),errors.collect(cdk.propertyValidator("enableAutoHealing",cdk.validateBoolean)(properties.enableAutoHealing)),errors.collect(cdk.propertyValidator("installUpdatesOnBoot",cdk.validateBoolean)(properties.installUpdatesOnBoot)),errors.collect(cdk.propertyValidator("lifecycleEventConfiguration",CfnLayerLifecycleEventConfigurationPropertyValidator)(properties.lifecycleEventConfiguration)),errors.collect(cdk.propertyValidator("loadBasedAutoScaling",CfnLayerLoadBasedAutoScalingPropertyValidator)(properties.loadBasedAutoScaling)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("packages",cdk.listValidator(cdk.validateString))(properties.packages)),errors.collect(cdk.propertyValidator("shortname",cdk.requiredValidator)(properties.shortname)),errors.collect(cdk.propertyValidator("shortname",cdk.validateString)(properties.shortname)),errors.collect(cdk.propertyValidator("stackId",cdk.requiredValidator)(properties.stackId)),errors.collect(cdk.propertyValidator("stackId",cdk.validateString)(properties.stackId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("useEbsOptimizedInstances",cdk.validateBoolean)(properties.useEbsOptimizedInstances)),errors.collect(cdk.propertyValidator("volumeConfigurations",cdk.listValidator(CfnLayerVolumeConfigurationPropertyValidator))(properties.volumeConfigurations)),errors.wrap('supplied properties not correct for "CfnLayerProps"')}function convertCfnLayerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLayerPropsValidator(properties).assertSuccess(),{Attributes:cdk.hashMapper(cdk.stringToCloudFormation)(properties.attributes),AutoAssignElasticIps:cdk.booleanToCloudFormation(properties.autoAssignElasticIps),AutoAssignPublicIps:cdk.booleanToCloudFormation(properties.autoAssignPublicIps),CustomInstanceProfileArn:cdk.stringToCloudFormation(properties.customInstanceProfileArn),CustomJson:cdk.objectToCloudFormation(properties.customJson),CustomRecipes:convertCfnLayerRecipesPropertyToCloudFormation(properties.customRecipes),CustomSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.customSecurityGroupIds),EnableAutoHealing:cdk.booleanToCloudFormation(properties.enableAutoHealing),InstallUpdatesOnBoot:cdk.booleanToCloudFormation(properties.installUpdatesOnBoot),LifecycleEventConfiguration:convertCfnLayerLifecycleEventConfigurationPropertyToCloudFormation(properties.lifecycleEventConfiguration),LoadBasedAutoScaling:convertCfnLayerLoadBasedAutoScalingPropertyToCloudFormation(properties.loadBasedAutoScaling),Name:cdk.stringToCloudFormation(properties.name),Packages:cdk.listMapper(cdk.stringToCloudFormation)(properties.packages),Shortname:cdk.stringToCloudFormation(properties.shortname),StackId:cdk.stringToCloudFormation(properties.stackId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type),UseEbsOptimizedInstances:cdk.booleanToCloudFormation(properties.useEbsOptimizedInstances),VolumeConfigurations:cdk.listMapper(convertCfnLayerVolumeConfigurationPropertyToCloudFormation)(properties.volumeConfigurations)}):properties}function CfnLayerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attributes","Attributes",properties.Attributes!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Attributes):void 0),ret.addPropertyResult("autoAssignElasticIps","AutoAssignElasticIps",properties.AutoAssignElasticIps!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoAssignElasticIps):void 0),ret.addPropertyResult("autoAssignPublicIps","AutoAssignPublicIps",properties.AutoAssignPublicIps!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoAssignPublicIps):void 0),ret.addPropertyResult("customInstanceProfileArn","CustomInstanceProfileArn",properties.CustomInstanceProfileArn!=null?cfn_parse.FromCloudFormation.getString(properties.CustomInstanceProfileArn):void 0),ret.addPropertyResult("customJson","CustomJson",properties.CustomJson!=null?cfn_parse.FromCloudFormation.getAny(properties.CustomJson):void 0),ret.addPropertyResult("customRecipes","CustomRecipes",properties.CustomRecipes!=null?CfnLayerRecipesPropertyFromCloudFormation(properties.CustomRecipes):void 0),ret.addPropertyResult("customSecurityGroupIds","CustomSecurityGroupIds",properties.CustomSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CustomSecurityGroupIds):void 0),ret.addPropertyResult("enableAutoHealing","EnableAutoHealing",properties.EnableAutoHealing!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableAutoHealing):void 0),ret.addPropertyResult("installUpdatesOnBoot","InstallUpdatesOnBoot",properties.InstallUpdatesOnBoot!=null?cfn_parse.FromCloudFormation.getBoolean(properties.InstallUpdatesOnBoot):void 0),ret.addPropertyResult("lifecycleEventConfiguration","LifecycleEventConfiguration",properties.LifecycleEventConfiguration!=null?CfnLayerLifecycleEventConfigurationPropertyFromCloudFormation(properties.LifecycleEventConfiguration):void 0),ret.addPropertyResult("loadBasedAutoScaling","LoadBasedAutoScaling",properties.LoadBasedAutoScaling!=null?CfnLayerLoadBasedAutoScalingPropertyFromCloudFormation(properties.LoadBasedAutoScaling):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("packages","Packages",properties.Packages!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Packages):void 0),ret.addPropertyResult("shortname","Shortname",properties.Shortname!=null?cfn_parse.FromCloudFormation.getString(properties.Shortname):void 0),ret.addPropertyResult("stackId","StackId",properties.StackId!=null?cfn_parse.FromCloudFormation.getString(properties.StackId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("useEbsOptimizedInstances","UseEbsOptimizedInstances",properties.UseEbsOptimizedInstances!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseEbsOptimizedInstances):void 0),ret.addPropertyResult("volumeConfigurations","VolumeConfigurations",properties.VolumeConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnLayerVolumeConfigurationPropertyFromCloudFormation)(properties.VolumeConfigurations):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnStack extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnStackPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnStack(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnStack.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnStackProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnStack),error}cdk.requireProperty(props,"defaultInstanceProfileArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"serviceRoleArn",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.agentVersion=props.agentVersion,this.attributes=props.attributes,this.chefConfiguration=props.chefConfiguration,this.cloneAppIds=props.cloneAppIds,this.clonePermissions=props.clonePermissions,this.configurationManager=props.configurationManager,this.customCookbooksSource=props.customCookbooksSource,this.customJson=props.customJson,this.defaultAvailabilityZone=props.defaultAvailabilityZone,this.defaultInstanceProfileArn=props.defaultInstanceProfileArn,this.defaultOs=props.defaultOs,this.defaultRootDeviceType=props.defaultRootDeviceType,this.defaultSshKeyName=props.defaultSshKeyName,this.defaultSubnetId=props.defaultSubnetId,this.ecsClusterArn=props.ecsClusterArn,this.elasticIps=props.elasticIps,this.hostnameTheme=props.hostnameTheme,this.name=props.name,this.rdsDbInstances=props.rdsDbInstances,this.serviceRoleArn=props.serviceRoleArn,this.sourceStackId=props.sourceStackId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::OpsWorks::Stack",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.useCustomCookbooks=props.useCustomCookbooks,this.useOpsworksSecurityGroups=props.useOpsworksSecurityGroups,this.vpcId=props.vpcId}get cfnProperties(){return{agentVersion:this.agentVersion,attributes:this.attributes,chefConfiguration:this.chefConfiguration,cloneAppIds:this.cloneAppIds,clonePermissions:this.clonePermissions,configurationManager:this.configurationManager,customCookbooksSource:this.customCookbooksSource,customJson:this.customJson,defaultAvailabilityZone:this.defaultAvailabilityZone,defaultInstanceProfileArn:this.defaultInstanceProfileArn,defaultOs:this.defaultOs,defaultRootDeviceType:this.defaultRootDeviceType,defaultSshKeyName:this.defaultSshKeyName,defaultSubnetId:this.defaultSubnetId,ecsClusterArn:this.ecsClusterArn,elasticIps:this.elasticIps,hostnameTheme:this.hostnameTheme,name:this.name,rdsDbInstances:this.rdsDbInstances,serviceRoleArn:this.serviceRoleArn,sourceStackId:this.sourceStackId,tags:this.tags.renderTags(),useCustomCookbooks:this.useCustomCookbooks,useOpsworksSecurityGroups:this.useOpsworksSecurityGroups,vpcId:this.vpcId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnStack.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnStackPropsToCloudFormation(props)}}exports.CfnStack=CfnStack,_e=JSII_RTTI_SYMBOL_1,CfnStack[_e]={fqn:"aws-cdk-lib.aws_opsworks.CfnStack",version:"2.94.0"},CfnStack.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::Stack";function CfnStackChefConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("berkshelfVersion",cdk.validateString)(properties.berkshelfVersion)),errors.collect(cdk.propertyValidator("manageBerkshelf",cdk.validateBoolean)(properties.manageBerkshelf)),errors.wrap('supplied properties not correct for "ChefConfigurationProperty"')}function convertCfnStackChefConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackChefConfigurationPropertyValidator(properties).assertSuccess(),{BerkshelfVersion:cdk.stringToCloudFormation(properties.berkshelfVersion),ManageBerkshelf:cdk.booleanToCloudFormation(properties.manageBerkshelf)}):properties}function CfnStackChefConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("berkshelfVersion","BerkshelfVersion",properties.BerkshelfVersion!=null?cfn_parse.FromCloudFormation.getString(properties.BerkshelfVersion):void 0),ret.addPropertyResult("manageBerkshelf","ManageBerkshelf",properties.ManageBerkshelf!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ManageBerkshelf):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStackStackConfigurationManagerPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "StackConfigurationManagerProperty"')}function convertCfnStackStackConfigurationManagerPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackStackConfigurationManagerPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnStackStackConfigurationManagerPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("version","Version",properties.Version!=null?cfn_parse.FromCloudFormation.getString(properties.Version):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStackSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("revision",cdk.validateString)(properties.revision)),errors.collect(cdk.propertyValidator("sshKey",cdk.validateString)(properties.sshKey)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "SourceProperty"')}function convertCfnStackSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackSourcePropertyValidator(properties).assertSuccess(),{Password:cdk.stringToCloudFormation(properties.password),Revision:cdk.stringToCloudFormation(properties.revision),SshKey:cdk.stringToCloudFormation(properties.sshKey),Type:cdk.stringToCloudFormation(properties.type),Url:cdk.stringToCloudFormation(properties.url),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnStackSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("revision","Revision",properties.Revision!=null?cfn_parse.FromCloudFormation.getString(properties.Revision):void 0),ret.addPropertyResult("sshKey","SshKey",properties.SshKey!=null?cfn_parse.FromCloudFormation.getString(properties.SshKey):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addPropertyResult("username","Username",properties.Username!=null?cfn_parse.FromCloudFormation.getString(properties.Username):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStackElasticIpPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ip",cdk.requiredValidator)(properties.ip)),errors.collect(cdk.propertyValidator("ip",cdk.validateString)(properties.ip)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "ElasticIpProperty"')}function convertCfnStackElasticIpPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackElasticIpPropertyValidator(properties).assertSuccess(),{Ip:cdk.stringToCloudFormation(properties.ip),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnStackElasticIpPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ip","Ip",properties.Ip!=null?cfn_parse.FromCloudFormation.getString(properties.Ip):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStackRdsDbInstancePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbPassword",cdk.requiredValidator)(properties.dbPassword)),errors.collect(cdk.propertyValidator("dbPassword",cdk.validateString)(properties.dbPassword)),errors.collect(cdk.propertyValidator("dbUser",cdk.requiredValidator)(properties.dbUser)),errors.collect(cdk.propertyValidator("dbUser",cdk.validateString)(properties.dbUser)),errors.collect(cdk.propertyValidator("rdsDbInstanceArn",cdk.requiredValidator)(properties.rdsDbInstanceArn)),errors.collect(cdk.propertyValidator("rdsDbInstanceArn",cdk.validateString)(properties.rdsDbInstanceArn)),errors.wrap('supplied properties not correct for "RdsDbInstanceProperty"')}function convertCfnStackRdsDbInstancePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackRdsDbInstancePropertyValidator(properties).assertSuccess(),{DbPassword:cdk.stringToCloudFormation(properties.dbPassword),DbUser:cdk.stringToCloudFormation(properties.dbUser),RdsDbInstanceArn:cdk.stringToCloudFormation(properties.rdsDbInstanceArn)}):properties}function CfnStackRdsDbInstancePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbPassword","DbPassword",properties.DbPassword!=null?cfn_parse.FromCloudFormation.getString(properties.DbPassword):void 0),ret.addPropertyResult("dbUser","DbUser",properties.DbUser!=null?cfn_parse.FromCloudFormation.getString(properties.DbUser):void 0),ret.addPropertyResult("rdsDbInstanceArn","RdsDbInstanceArn",properties.RdsDbInstanceArn!=null?cfn_parse.FromCloudFormation.getString(properties.RdsDbInstanceArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnStackPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("agentVersion",cdk.validateString)(properties.agentVersion)),errors.collect(cdk.propertyValidator("attributes",cdk.hashValidator(cdk.validateString))(properties.attributes)),errors.collect(cdk.propertyValidator("chefConfiguration",CfnStackChefConfigurationPropertyValidator)(properties.chefConfiguration)),errors.collect(cdk.propertyValidator("cloneAppIds",cdk.listValidator(cdk.validateString))(properties.cloneAppIds)),errors.collect(cdk.propertyValidator("clonePermissions",cdk.validateBoolean)(properties.clonePermissions)),errors.collect(cdk.propertyValidator("configurationManager",CfnStackStackConfigurationManagerPropertyValidator)(properties.configurationManager)),errors.collect(cdk.propertyValidator("customCookbooksSource",CfnStackSourcePropertyValidator)(properties.customCookbooksSource)),errors.collect(cdk.propertyValidator("customJson",cdk.validateObject)(properties.customJson)),errors.collect(cdk.propertyValidator("defaultAvailabilityZone",cdk.validateString)(properties.defaultAvailabilityZone)),errors.collect(cdk.propertyValidator("defaultInstanceProfileArn",cdk.requiredValidator)(properties.defaultInstanceProfileArn)),errors.collect(cdk.propertyValidator("defaultInstanceProfileArn",cdk.validateString)(properties.defaultInstanceProfileArn)),errors.collect(cdk.propertyValidator("defaultOs",cdk.validateString)(properties.defaultOs)),errors.collect(cdk.propertyValidator("defaultRootDeviceType",cdk.validateString)(properties.defaultRootDeviceType)),errors.collect(cdk.propertyValidator("defaultSshKeyName",cdk.validateString)(properties.defaultSshKeyName)),errors.collect(cdk.propertyValidator("defaultSubnetId",cdk.validateString)(properties.defaultSubnetId)),errors.collect(cdk.propertyValidator("ecsClusterArn",cdk.validateString)(properties.ecsClusterArn)),errors.collect(cdk.propertyValidator("elasticIps",cdk.listValidator(CfnStackElasticIpPropertyValidator))(properties.elasticIps)),errors.collect(cdk.propertyValidator("hostnameTheme",cdk.validateString)(properties.hostnameTheme)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("rdsDbInstances",cdk.listValidator(CfnStackRdsDbInstancePropertyValidator))(properties.rdsDbInstances)),errors.collect(cdk.propertyValidator("serviceRoleArn",cdk.requiredValidator)(properties.serviceRoleArn)),errors.collect(cdk.propertyValidator("serviceRoleArn",cdk.validateString)(properties.serviceRoleArn)),errors.collect(cdk.propertyValidator("sourceStackId",cdk.validateString)(properties.sourceStackId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("useCustomCookbooks",cdk.validateBoolean)(properties.useCustomCookbooks)),errors.collect(cdk.propertyValidator("useOpsworksSecurityGroups",cdk.validateBoolean)(properties.useOpsworksSecurityGroups)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "CfnStackProps"')}function convertCfnStackPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStackPropsValidator(properties).assertSuccess(),{AgentVersion:cdk.stringToCloudFormation(properties.agentVersion),Attributes:cdk.hashMapper(cdk.stringToCloudFormation)(properties.attributes),ChefConfiguration:convertCfnStackChefConfigurationPropertyToCloudFormation(properties.chefConfiguration),CloneAppIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.cloneAppIds),ClonePermissions:cdk.booleanToCloudFormation(properties.clonePermissions),ConfigurationManager:convertCfnStackStackConfigurationManagerPropertyToCloudFormation(properties.configurationManager),CustomCookbooksSource:convertCfnStackSourcePropertyToCloudFormation(properties.customCookbooksSource),CustomJson:cdk.objectToCloudFormation(properties.customJson),DefaultAvailabilityZone:cdk.stringToCloudFormation(properties.defaultAvailabilityZone),DefaultInstanceProfileArn:cdk.stringToCloudFormation(properties.defaultInstanceProfileArn),DefaultOs:cdk.stringToCloudFormation(properties.defaultOs),DefaultRootDeviceType:cdk.stringToCloudFormation(properties.defaultRootDeviceType),DefaultSshKeyName:cdk.stringToCloudFormation(properties.defaultSshKeyName),DefaultSubnetId:cdk.stringToCloudFormation(properties.defaultSubnetId),EcsClusterArn:cdk.stringToCloudFormation(properties.ecsClusterArn),ElasticIps:cdk.listMapper(convertCfnStackElasticIpPropertyToCloudFormation)(properties.elasticIps),HostnameTheme:cdk.stringToCloudFormation(properties.hostnameTheme),Name:cdk.stringToCloudFormation(properties.name),RdsDbInstances:cdk.listMapper(convertCfnStackRdsDbInstancePropertyToCloudFormation)(properties.rdsDbInstances),ServiceRoleArn:cdk.stringToCloudFormation(properties.serviceRoleArn),SourceStackId:cdk.stringToCloudFormation(properties.sourceStackId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UseCustomCookbooks:cdk.booleanToCloudFormation(properties.useCustomCookbooks),UseOpsworksSecurityGroups:cdk.booleanToCloudFormation(properties.useOpsworksSecurityGroups),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnStackPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("agentVersion","AgentVersion",properties.AgentVersion!=null?cfn_parse.FromCloudFormation.getString(properties.AgentVersion):void 0),ret.addPropertyResult("attributes","Attributes",properties.Attributes!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Attributes):void 0),ret.addPropertyResult("chefConfiguration","ChefConfiguration",properties.ChefConfiguration!=null?CfnStackChefConfigurationPropertyFromCloudFormation(properties.ChefConfiguration):void 0),ret.addPropertyResult("cloneAppIds","CloneAppIds",properties.CloneAppIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CloneAppIds):void 0),ret.addPropertyResult("clonePermissions","ClonePermissions",properties.ClonePermissions!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ClonePermissions):void 0),ret.addPropertyResult("configurationManager","ConfigurationManager",properties.ConfigurationManager!=null?CfnStackStackConfigurationManagerPropertyFromCloudFormation(properties.ConfigurationManager):void 0),ret.addPropertyResult("customCookbooksSource","CustomCookbooksSource",properties.CustomCookbooksSource!=null?CfnStackSourcePropertyFromCloudFormation(properties.CustomCookbooksSource):void 0),ret.addPropertyResult("customJson","CustomJson",properties.CustomJson!=null?cfn_parse.FromCloudFormation.getAny(properties.CustomJson):void 0),ret.addPropertyResult("defaultAvailabilityZone","DefaultAvailabilityZone",properties.DefaultAvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultAvailabilityZone):void 0),ret.addPropertyResult("defaultInstanceProfileArn","DefaultInstanceProfileArn",properties.DefaultInstanceProfileArn!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultInstanceProfileArn):void 0),ret.addPropertyResult("defaultOs","DefaultOs",properties.DefaultOs!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultOs):void 0),ret.addPropertyResult("defaultRootDeviceType","DefaultRootDeviceType",properties.DefaultRootDeviceType!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultRootDeviceType):void 0),ret.addPropertyResult("defaultSshKeyName","DefaultSshKeyName",properties.DefaultSshKeyName!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultSshKeyName):void 0),ret.addPropertyResult("defaultSubnetId","DefaultSubnetId",properties.DefaultSubnetId!=null?cfn_parse.FromCloudFormation.getString(properties.DefaultSubnetId):void 0),ret.addPropertyResult("ecsClusterArn","EcsClusterArn",properties.EcsClusterArn!=null?cfn_parse.FromCloudFormation.getString(properties.EcsClusterArn):void 0),ret.addPropertyResult("elasticIps","ElasticIps",properties.ElasticIps!=null?cfn_parse.FromCloudFormation.getArray(CfnStackElasticIpPropertyFromCloudFormation)(properties.ElasticIps):void 0),ret.addPropertyResult("hostnameTheme","HostnameTheme",properties.HostnameTheme!=null?cfn_parse.FromCloudFormation.getString(properties.HostnameTheme):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("rdsDbInstances","RdsDbInstances",properties.RdsDbInstances!=null?cfn_parse.FromCloudFormation.getArray(CfnStackRdsDbInstancePropertyFromCloudFormation)(properties.RdsDbInstances):void 0),ret.addPropertyResult("serviceRoleArn","ServiceRoleArn",properties.ServiceRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceRoleArn):void 0),ret.addPropertyResult("sourceStackId","SourceStackId",properties.SourceStackId!=null?cfn_parse.FromCloudFormation.getString(properties.SourceStackId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("useCustomCookbooks","UseCustomCookbooks",properties.UseCustomCookbooks!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseCustomCookbooks):void 0),ret.addPropertyResult("useOpsworksSecurityGroups","UseOpsworksSecurityGroups",properties.UseOpsworksSecurityGroups!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseOpsworksSecurityGroups):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUserProfile extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserProfilePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnUserProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnUserProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnUserProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUserProfile),error}cdk.requireProperty(props,"iamUserArn",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrSshUsername=cdk.Token.asString(this.getAtt("SshUsername",cdk.ResolutionTypeHint.STRING)),this.allowSelfManagement=props.allowSelfManagement,this.iamUserArn=props.iamUserArn,this.sshPublicKey=props.sshPublicKey,this.sshUsername=props.sshUsername}get cfnProperties(){return{allowSelfManagement:this.allowSelfManagement,iamUserArn:this.iamUserArn,sshPublicKey:this.sshPublicKey,sshUsername:this.sshUsername}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUserProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnUserProfilePropsToCloudFormation(props)}}exports.CfnUserProfile=CfnUserProfile,_f=JSII_RTTI_SYMBOL_1,CfnUserProfile[_f]={fqn:"aws-cdk-lib.aws_opsworks.CfnUserProfile",version:"2.94.0"},CfnUserProfile.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::UserProfile";function CfnUserProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowSelfManagement",cdk.validateBoolean)(properties.allowSelfManagement)),errors.collect(cdk.propertyValidator("iamUserArn",cdk.requiredValidator)(properties.iamUserArn)),errors.collect(cdk.propertyValidator("iamUserArn",cdk.validateString)(properties.iamUserArn)),errors.collect(cdk.propertyValidator("sshPublicKey",cdk.validateString)(properties.sshPublicKey)),errors.collect(cdk.propertyValidator("sshUsername",cdk.validateString)(properties.sshUsername)),errors.wrap('supplied properties not correct for "CfnUserProfileProps"')}function convertCfnUserProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserProfilePropsValidator(properties).assertSuccess(),{AllowSelfManagement:cdk.booleanToCloudFormation(properties.allowSelfManagement),IamUserArn:cdk.stringToCloudFormation(properties.iamUserArn),SshPublicKey:cdk.stringToCloudFormation(properties.sshPublicKey),SshUsername:cdk.stringToCloudFormation(properties.sshUsername)}):properties}function CfnUserProfilePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowSelfManagement","AllowSelfManagement",properties.AllowSelfManagement!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowSelfManagement):void 0),ret.addPropertyResult("iamUserArn","IamUserArn",properties.IamUserArn!=null?cfn_parse.FromCloudFormation.getString(properties.IamUserArn):void 0),ret.addPropertyResult("sshPublicKey","SshPublicKey",properties.SshPublicKey!=null?cfn_parse.FromCloudFormation.getString(properties.SshPublicKey):void 0),ret.addPropertyResult("sshUsername","SshUsername",properties.SshUsername!=null?cfn_parse.FromCloudFormation.getString(properties.SshUsername):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVolume extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVolumePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnVolume(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnVolume.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_opsworks_CfnVolumeProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnVolume),error}cdk.requireProperty(props,"ec2VolumeId",this),cdk.requireProperty(props,"stackId",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.ec2VolumeId=props.ec2VolumeId,this.mountPoint=props.mountPoint,this.name=props.name,this.stackId=props.stackId}get cfnProperties(){return{ec2VolumeId:this.ec2VolumeId,mountPoint:this.mountPoint,name:this.name,stackId:this.stackId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnVolume.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnVolumePropsToCloudFormation(props)}}exports.CfnVolume=CfnVolume,_g=JSII_RTTI_SYMBOL_1,CfnVolume[_g]={fqn:"aws-cdk-lib.aws_opsworks.CfnVolume",version:"2.94.0"},CfnVolume.CFN_RESOURCE_TYPE_NAME="AWS::OpsWorks::Volume";function CfnVolumePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ec2VolumeId",cdk.requiredValidator)(properties.ec2VolumeId)),errors.collect(cdk.propertyValidator("ec2VolumeId",cdk.validateString)(properties.ec2VolumeId)),errors.collect(cdk.propertyValidator("mountPoint",cdk.validateString)(properties.mountPoint)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("stackId",cdk.requiredValidator)(properties.stackId)),errors.collect(cdk.propertyValidator("stackId",cdk.validateString)(properties.stackId)),errors.wrap('supplied properties not correct for "CfnVolumeProps"')}function convertCfnVolumePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVolumePropsValidator(properties).assertSuccess(),{Ec2VolumeId:cdk.stringToCloudFormation(properties.ec2VolumeId),MountPoint:cdk.stringToCloudFormation(properties.mountPoint),Name:cdk.stringToCloudFormation(properties.name),StackId:cdk.stringToCloudFormation(properties.stackId)}):properties}function CfnVolumePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ec2VolumeId","Ec2VolumeId",properties.Ec2VolumeId!=null?cfn_parse.FromCloudFormation.getString(properties.Ec2VolumeId):void 0),ret.addPropertyResult("mountPoint","MountPoint",properties.MountPoint!=null?cfn_parse.FromCloudFormation.getString(properties.MountPoint):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("stackId","StackId",properties.StackId!=null?cfn_parse.FromCloudFormation.getString(properties.StackId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
