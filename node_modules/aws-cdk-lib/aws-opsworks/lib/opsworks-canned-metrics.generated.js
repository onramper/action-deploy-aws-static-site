"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.OpsWorksMetrics=void 0;class OpsWorksMetrics{static procsAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"procs",dimensionsMap:dimensions,statistic:"Average"}}static memoryUsedAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_used",dimensionsMap:dimensions,statistic:"Average"}}static cpuIdleAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_idle",dimensionsMap:dimensions,statistic:"Average"}}static cpuNiceAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_nice",dimensionsMap:dimensions,statistic:"Average"}}static cpuStealAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_steal",dimensionsMap:dimensions,statistic:"Average"}}static cpuSystemAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_system",dimensionsMap:dimensions,statistic:"Average"}}static cpuUserAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_user",dimensionsMap:dimensions,statistic:"Average"}}static cpuWaitioAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"cpu_waitio",dimensionsMap:dimensions,statistic:"Average"}}static load1Average(dimensions){return{namespace:"AWS/OpsWorks",metricName:"load_1",dimensionsMap:dimensions,statistic:"Average"}}static load15Average(dimensions){return{namespace:"AWS/OpsWorks",metricName:"load_15",dimensionsMap:dimensions,statistic:"Average"}}static load5Average(dimensions){return{namespace:"AWS/OpsWorks",metricName:"load_5",dimensionsMap:dimensions,statistic:"Average"}}static memoryBuffersAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_buffers",dimensionsMap:dimensions,statistic:"Average"}}static memoryCachedAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_cached",dimensionsMap:dimensions,statistic:"Average"}}static memoryFreeAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_free",dimensionsMap:dimensions,statistic:"Average"}}static memorySwapAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_swap",dimensionsMap:dimensions,statistic:"Average"}}static memoryTotalAverage(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_total",dimensionsMap:dimensions,statistic:"Average"}}static memoryUsedMaximum(dimensions){return{namespace:"AWS/OpsWorks",metricName:"memory_used",dimensionsMap:dimensions,statistic:"Maximum"}}static load1Maximum(dimensions){return{namespace:"AWS/OpsWorks",metricName:"load_1",dimensionsMap:dimensions,statistic:"Maximum"}}}exports.OpsWorksMetrics=OpsWorksMetrics;
