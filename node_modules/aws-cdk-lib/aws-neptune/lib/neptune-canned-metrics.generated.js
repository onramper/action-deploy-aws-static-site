"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.NeptuneMetrics=void 0;class NeptuneMetrics{static cpuUtilizationAverage(dimensions){return{namespace:"AWS/Neptune",metricName:"CPUUtilization",dimensionsMap:dimensions,statistic:"Average"}}static freeLocalStorageMinimum(dimensions){return{namespace:"AWS/Neptune",metricName:"FreeLocalStorage",dimensionsMap:dimensions,statistic:"Minimum"}}static freeableMemoryMinimum(dimensions){return{namespace:"AWS/Neptune",metricName:"FreeableMemory",dimensionsMap:dimensions,statistic:"Minimum"}}static gremlinErrorsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"GremlinErrors",dimensionsMap:dimensions,statistic:"Sum"}}static gremlinRequestsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"GremlinRequests",dimensionsMap:dimensions,statistic:"Sum"}}static gremlinRequestsPerSecAverage(dimensions){return{namespace:"AWS/Neptune",metricName:"GremlinRequestsPerSec",dimensionsMap:dimensions,statistic:"Average"}}static http413Sum(dimensions){return{namespace:"AWS/Neptune",metricName:"Http413",dimensionsMap:dimensions,statistic:"Sum"}}static http500Sum(dimensions){return{namespace:"AWS/Neptune",metricName:"Http500",dimensionsMap:dimensions,statistic:"Sum"}}static loaderRequestsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"LoaderRequests",dimensionsMap:dimensions,statistic:"Sum"}}static networkReceiveThroughputSum(dimensions){return{namespace:"AWS/Neptune",metricName:"NetworkReceiveThroughput",dimensionsMap:dimensions,statistic:"Sum"}}static sparqlErrorsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"SparqlErrors",dimensionsMap:dimensions,statistic:"Sum"}}static sparqlRequestsPerSecSum(dimensions){return{namespace:"AWS/Neptune",metricName:"SparqlRequestsPerSec",dimensionsMap:dimensions,statistic:"Sum"}}static volumeBytesUsedSum(dimensions){return{namespace:"AWS/Neptune",metricName:"VolumeBytesUsed",dimensionsMap:dimensions,statistic:"Sum"}}static volumeReadIoPsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"VolumeReadIOPs",dimensionsMap:dimensions,statistic:"Sum"}}static volumeWriteIoPsSum(dimensions){return{namespace:"AWS/Neptune",metricName:"VolumeWriteIOPs",dimensionsMap:dimensions,statistic:"Sum"}}}exports.NeptuneMetrics=NeptuneMetrics;
