"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnGateway=exports.CfnFlowVpcInterface=exports.CfnFlowSource=exports.CfnFlowOutput=exports.CfnFlowEntitlement=exports.CfnFlow=exports.CfnBridgeSource=exports.CfnBridgeOutput=exports.CfnBridge=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnBridge extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBridgePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBridge(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBridge.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnBridgeProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBridge),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"placementArn",this),cdk.requireProperty(props,"sources",this),this.attrBridgeArn=cdk.Token.asString(this.getAtt("BridgeArn",cdk.ResolutionTypeHint.STRING)),this.attrBridgeState=cdk.Token.asString(this.getAtt("BridgeState",cdk.ResolutionTypeHint.STRING)),this.egressGatewayBridge=props.egressGatewayBridge,this.ingressGatewayBridge=props.ingressGatewayBridge,this.name=props.name,this.outputs=props.outputs,this.placementArn=props.placementArn,this.sourceFailoverConfig=props.sourceFailoverConfig,this.sources=props.sources}get cfnProperties(){return{egressGatewayBridge:this.egressGatewayBridge,ingressGatewayBridge:this.ingressGatewayBridge,name:this.name,outputs:this.outputs,placementArn:this.placementArn,sourceFailoverConfig:this.sourceFailoverConfig,sources:this.sources}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBridge.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBridgePropsToCloudFormation(props)}}exports.CfnBridge=CfnBridge,_a=JSII_RTTI_SYMBOL_1,CfnBridge[_a]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnBridge",version:"2.94.0"},CfnBridge.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::Bridge";function CfnBridgeSourcePriorityPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("primarySource",cdk.validateString)(properties.primarySource)),errors.wrap('supplied properties not correct for "SourcePriorityProperty"')}function convertCfnBridgeSourcePriorityPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeSourcePriorityPropertyValidator(properties).assertSuccess(),{PrimarySource:cdk.stringToCloudFormation(properties.primarySource)}):properties}function CfnBridgeSourcePriorityPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("primarySource","PrimarySource",properties.PrimarySource!=null?cfn_parse.FromCloudFormation.getString(properties.PrimarySource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeFailoverConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("failoverMode",cdk.requiredValidator)(properties.failoverMode)),errors.collect(cdk.propertyValidator("failoverMode",cdk.validateString)(properties.failoverMode)),errors.collect(cdk.propertyValidator("sourcePriority",CfnBridgeSourcePriorityPropertyValidator)(properties.sourcePriority)),errors.collect(cdk.propertyValidator("state",cdk.validateString)(properties.state)),errors.wrap('supplied properties not correct for "FailoverConfigProperty"')}function convertCfnBridgeFailoverConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeFailoverConfigPropertyValidator(properties).assertSuccess(),{FailoverMode:cdk.stringToCloudFormation(properties.failoverMode),SourcePriority:convertCfnBridgeSourcePriorityPropertyToCloudFormation(properties.sourcePriority),State:cdk.stringToCloudFormation(properties.state)}):properties}function CfnBridgeFailoverConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("failoverMode","FailoverMode",properties.FailoverMode!=null?cfn_parse.FromCloudFormation.getString(properties.FailoverMode):void 0),ret.addPropertyResult("sourcePriority","SourcePriority",properties.SourcePriority!=null?CfnBridgeSourcePriorityPropertyFromCloudFormation(properties.SourcePriority):void 0),ret.addPropertyResult("state","State",properties.State!=null?cfn_parse.FromCloudFormation.getString(properties.State):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeBridgeNetworkOutputPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ipAddress",cdk.requiredValidator)(properties.ipAddress)),errors.collect(cdk.propertyValidator("ipAddress",cdk.validateString)(properties.ipAddress)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkName",cdk.requiredValidator)(properties.networkName)),errors.collect(cdk.propertyValidator("networkName",cdk.validateString)(properties.networkName)),errors.collect(cdk.propertyValidator("port",cdk.requiredValidator)(properties.port)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.requiredValidator)(properties.protocol)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("ttl",cdk.requiredValidator)(properties.ttl)),errors.collect(cdk.propertyValidator("ttl",cdk.validateNumber)(properties.ttl)),errors.wrap('supplied properties not correct for "BridgeNetworkOutputProperty"')}function convertCfnBridgeBridgeNetworkOutputPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeBridgeNetworkOutputPropertyValidator(properties).assertSuccess(),{IpAddress:cdk.stringToCloudFormation(properties.ipAddress),Name:cdk.stringToCloudFormation(properties.name),NetworkName:cdk.stringToCloudFormation(properties.networkName),Port:cdk.numberToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol),Ttl:cdk.numberToCloudFormation(properties.ttl)}):properties}function CfnBridgeBridgeNetworkOutputPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ipAddress","IpAddress",properties.IpAddress!=null?cfn_parse.FromCloudFormation.getString(properties.IpAddress):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkName","NetworkName",properties.NetworkName!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkName):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("ttl","Ttl",properties.Ttl!=null?cfn_parse.FromCloudFormation.getNumber(properties.Ttl):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeBridgeOutputPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("networkOutput",CfnBridgeBridgeNetworkOutputPropertyValidator)(properties.networkOutput)),errors.wrap('supplied properties not correct for "BridgeOutputProperty"')}function convertCfnBridgeBridgeOutputPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeBridgeOutputPropertyValidator(properties).assertSuccess(),{NetworkOutput:convertCfnBridgeBridgeNetworkOutputPropertyToCloudFormation(properties.networkOutput)}):properties}function CfnBridgeBridgeOutputPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("networkOutput","NetworkOutput",properties.NetworkOutput!=null?CfnBridgeBridgeNetworkOutputPropertyFromCloudFormation(properties.NetworkOutput):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeVpcInterfaceAttachmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.wrap('supplied properties not correct for "VpcInterfaceAttachmentProperty"')}function convertCfnBridgeVpcInterfaceAttachmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeVpcInterfaceAttachmentPropertyValidator(properties).assertSuccess(),{VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName)}):properties}function CfnBridgeVpcInterfaceAttachmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeBridgeFlowSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("flowArn",cdk.requiredValidator)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowVpcInterfaceAttachment",CfnBridgeVpcInterfaceAttachmentPropertyValidator)(properties.flowVpcInterfaceAttachment)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "BridgeFlowSourceProperty"')}function convertCfnBridgeBridgeFlowSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeBridgeFlowSourcePropertyValidator(properties).assertSuccess(),{FlowArn:cdk.stringToCloudFormation(properties.flowArn),FlowVpcInterfaceAttachment:convertCfnBridgeVpcInterfaceAttachmentPropertyToCloudFormation(properties.flowVpcInterfaceAttachment),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnBridgeBridgeFlowSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("flowVpcInterfaceAttachment","FlowVpcInterfaceAttachment",properties.FlowVpcInterfaceAttachment!=null?CfnBridgeVpcInterfaceAttachmentPropertyFromCloudFormation(properties.FlowVpcInterfaceAttachment):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeBridgeNetworkSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("multicastIp",cdk.requiredValidator)(properties.multicastIp)),errors.collect(cdk.propertyValidator("multicastIp",cdk.validateString)(properties.multicastIp)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkName",cdk.requiredValidator)(properties.networkName)),errors.collect(cdk.propertyValidator("networkName",cdk.validateString)(properties.networkName)),errors.collect(cdk.propertyValidator("port",cdk.requiredValidator)(properties.port)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.requiredValidator)(properties.protocol)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.wrap('supplied properties not correct for "BridgeNetworkSourceProperty"')}function convertCfnBridgeBridgeNetworkSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeBridgeNetworkSourcePropertyValidator(properties).assertSuccess(),{MulticastIp:cdk.stringToCloudFormation(properties.multicastIp),Name:cdk.stringToCloudFormation(properties.name),NetworkName:cdk.stringToCloudFormation(properties.networkName),Port:cdk.numberToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol)}):properties}function CfnBridgeBridgeNetworkSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("multicastIp","MulticastIp",properties.MulticastIp!=null?cfn_parse.FromCloudFormation.getString(properties.MulticastIp):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkName","NetworkName",properties.NetworkName!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkName):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeBridgeSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("flowSource",CfnBridgeBridgeFlowSourcePropertyValidator)(properties.flowSource)),errors.collect(cdk.propertyValidator("networkSource",CfnBridgeBridgeNetworkSourcePropertyValidator)(properties.networkSource)),errors.wrap('supplied properties not correct for "BridgeSourceProperty"')}function convertCfnBridgeBridgeSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeBridgeSourcePropertyValidator(properties).assertSuccess(),{FlowSource:convertCfnBridgeBridgeFlowSourcePropertyToCloudFormation(properties.flowSource),NetworkSource:convertCfnBridgeBridgeNetworkSourcePropertyToCloudFormation(properties.networkSource)}):properties}function CfnBridgeBridgeSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("flowSource","FlowSource",properties.FlowSource!=null?CfnBridgeBridgeFlowSourcePropertyFromCloudFormation(properties.FlowSource):void 0),ret.addPropertyResult("networkSource","NetworkSource",properties.NetworkSource!=null?CfnBridgeBridgeNetworkSourcePropertyFromCloudFormation(properties.NetworkSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeIngressGatewayBridgePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("maxBitrate",cdk.requiredValidator)(properties.maxBitrate)),errors.collect(cdk.propertyValidator("maxBitrate",cdk.validateNumber)(properties.maxBitrate)),errors.collect(cdk.propertyValidator("maxOutputs",cdk.requiredValidator)(properties.maxOutputs)),errors.collect(cdk.propertyValidator("maxOutputs",cdk.validateNumber)(properties.maxOutputs)),errors.wrap('supplied properties not correct for "IngressGatewayBridgeProperty"')}function convertCfnBridgeIngressGatewayBridgePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeIngressGatewayBridgePropertyValidator(properties).assertSuccess(),{MaxBitrate:cdk.numberToCloudFormation(properties.maxBitrate),MaxOutputs:cdk.numberToCloudFormation(properties.maxOutputs)}):properties}function CfnBridgeIngressGatewayBridgePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("maxBitrate","MaxBitrate",properties.MaxBitrate!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxBitrate):void 0),ret.addPropertyResult("maxOutputs","MaxOutputs",properties.MaxOutputs!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxOutputs):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeEgressGatewayBridgePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("maxBitrate",cdk.requiredValidator)(properties.maxBitrate)),errors.collect(cdk.propertyValidator("maxBitrate",cdk.validateNumber)(properties.maxBitrate)),errors.wrap('supplied properties not correct for "EgressGatewayBridgeProperty"')}function convertCfnBridgeEgressGatewayBridgePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeEgressGatewayBridgePropertyValidator(properties).assertSuccess(),{MaxBitrate:cdk.numberToCloudFormation(properties.maxBitrate)}):properties}function CfnBridgeEgressGatewayBridgePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("maxBitrate","MaxBitrate",properties.MaxBitrate!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxBitrate):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressGatewayBridge",CfnBridgeEgressGatewayBridgePropertyValidator)(properties.egressGatewayBridge)),errors.collect(cdk.propertyValidator("ingressGatewayBridge",CfnBridgeIngressGatewayBridgePropertyValidator)(properties.ingressGatewayBridge)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("outputs",cdk.listValidator(CfnBridgeBridgeOutputPropertyValidator))(properties.outputs)),errors.collect(cdk.propertyValidator("placementArn",cdk.requiredValidator)(properties.placementArn)),errors.collect(cdk.propertyValidator("placementArn",cdk.validateString)(properties.placementArn)),errors.collect(cdk.propertyValidator("sourceFailoverConfig",CfnBridgeFailoverConfigPropertyValidator)(properties.sourceFailoverConfig)),errors.collect(cdk.propertyValidator("sources",cdk.requiredValidator)(properties.sources)),errors.collect(cdk.propertyValidator("sources",cdk.listValidator(CfnBridgeBridgeSourcePropertyValidator))(properties.sources)),errors.wrap('supplied properties not correct for "CfnBridgeProps"')}function convertCfnBridgePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgePropsValidator(properties).assertSuccess(),{EgressGatewayBridge:convertCfnBridgeEgressGatewayBridgePropertyToCloudFormation(properties.egressGatewayBridge),IngressGatewayBridge:convertCfnBridgeIngressGatewayBridgePropertyToCloudFormation(properties.ingressGatewayBridge),Name:cdk.stringToCloudFormation(properties.name),Outputs:cdk.listMapper(convertCfnBridgeBridgeOutputPropertyToCloudFormation)(properties.outputs),PlacementArn:cdk.stringToCloudFormation(properties.placementArn),SourceFailoverConfig:convertCfnBridgeFailoverConfigPropertyToCloudFormation(properties.sourceFailoverConfig),Sources:cdk.listMapper(convertCfnBridgeBridgeSourcePropertyToCloudFormation)(properties.sources)}):properties}function CfnBridgePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressGatewayBridge","EgressGatewayBridge",properties.EgressGatewayBridge!=null?CfnBridgeEgressGatewayBridgePropertyFromCloudFormation(properties.EgressGatewayBridge):void 0),ret.addPropertyResult("ingressGatewayBridge","IngressGatewayBridge",properties.IngressGatewayBridge!=null?CfnBridgeIngressGatewayBridgePropertyFromCloudFormation(properties.IngressGatewayBridge):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("outputs","Outputs",properties.Outputs!=null?cfn_parse.FromCloudFormation.getArray(CfnBridgeBridgeOutputPropertyFromCloudFormation)(properties.Outputs):void 0),ret.addPropertyResult("placementArn","PlacementArn",properties.PlacementArn!=null?cfn_parse.FromCloudFormation.getString(properties.PlacementArn):void 0),ret.addPropertyResult("sourceFailoverConfig","SourceFailoverConfig",properties.SourceFailoverConfig!=null?CfnBridgeFailoverConfigPropertyFromCloudFormation(properties.SourceFailoverConfig):void 0),ret.addPropertyResult("sources","Sources",properties.Sources!=null?cfn_parse.FromCloudFormation.getArray(CfnBridgeBridgeSourcePropertyFromCloudFormation)(properties.Sources):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBridgeOutput extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBridgeOutputPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBridgeOutput(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBridgeOutput.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnBridgeOutputProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBridgeOutput),error}cdk.requireProperty(props,"bridgeArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"networkOutput",this),this.bridgeArn=props.bridgeArn,this.name=props.name,this.networkOutput=props.networkOutput}get cfnProperties(){return{bridgeArn:this.bridgeArn,name:this.name,networkOutput:this.networkOutput}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBridgeOutput.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBridgeOutputPropsToCloudFormation(props)}}exports.CfnBridgeOutput=CfnBridgeOutput,_b=JSII_RTTI_SYMBOL_1,CfnBridgeOutput[_b]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnBridgeOutput",version:"2.94.0"},CfnBridgeOutput.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::BridgeOutput";function CfnBridgeOutputBridgeNetworkOutputPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ipAddress",cdk.requiredValidator)(properties.ipAddress)),errors.collect(cdk.propertyValidator("ipAddress",cdk.validateString)(properties.ipAddress)),errors.collect(cdk.propertyValidator("networkName",cdk.requiredValidator)(properties.networkName)),errors.collect(cdk.propertyValidator("networkName",cdk.validateString)(properties.networkName)),errors.collect(cdk.propertyValidator("port",cdk.requiredValidator)(properties.port)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.requiredValidator)(properties.protocol)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("ttl",cdk.requiredValidator)(properties.ttl)),errors.collect(cdk.propertyValidator("ttl",cdk.validateNumber)(properties.ttl)),errors.wrap('supplied properties not correct for "BridgeNetworkOutputProperty"')}function convertCfnBridgeOutputBridgeNetworkOutputPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeOutputBridgeNetworkOutputPropertyValidator(properties).assertSuccess(),{IpAddress:cdk.stringToCloudFormation(properties.ipAddress),NetworkName:cdk.stringToCloudFormation(properties.networkName),Port:cdk.numberToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol),Ttl:cdk.numberToCloudFormation(properties.ttl)}):properties}function CfnBridgeOutputBridgeNetworkOutputPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ipAddress","IpAddress",properties.IpAddress!=null?cfn_parse.FromCloudFormation.getString(properties.IpAddress):void 0),ret.addPropertyResult("networkName","NetworkName",properties.NetworkName!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkName):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("ttl","Ttl",properties.Ttl!=null?cfn_parse.FromCloudFormation.getNumber(properties.Ttl):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeOutputPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bridgeArn",cdk.requiredValidator)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("bridgeArn",cdk.validateString)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkOutput",cdk.requiredValidator)(properties.networkOutput)),errors.collect(cdk.propertyValidator("networkOutput",CfnBridgeOutputBridgeNetworkOutputPropertyValidator)(properties.networkOutput)),errors.wrap('supplied properties not correct for "CfnBridgeOutputProps"')}function convertCfnBridgeOutputPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeOutputPropsValidator(properties).assertSuccess(),{BridgeArn:cdk.stringToCloudFormation(properties.bridgeArn),Name:cdk.stringToCloudFormation(properties.name),NetworkOutput:convertCfnBridgeOutputBridgeNetworkOutputPropertyToCloudFormation(properties.networkOutput)}):properties}function CfnBridgeOutputPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bridgeArn","BridgeArn",properties.BridgeArn!=null?cfn_parse.FromCloudFormation.getString(properties.BridgeArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkOutput","NetworkOutput",properties.NetworkOutput!=null?CfnBridgeOutputBridgeNetworkOutputPropertyFromCloudFormation(properties.NetworkOutput):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBridgeSource extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBridgeSourcePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBridgeSource(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBridgeSource.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnBridgeSourceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBridgeSource),error}cdk.requireProperty(props,"bridgeArn",this),cdk.requireProperty(props,"name",this),this.bridgeArn=props.bridgeArn,this.flowSource=props.flowSource,this.name=props.name,this.networkSource=props.networkSource}get cfnProperties(){return{bridgeArn:this.bridgeArn,flowSource:this.flowSource,name:this.name,networkSource:this.networkSource}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBridgeSource.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBridgeSourcePropsToCloudFormation(props)}}exports.CfnBridgeSource=CfnBridgeSource,_c=JSII_RTTI_SYMBOL_1,CfnBridgeSource[_c]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnBridgeSource",version:"2.94.0"},CfnBridgeSource.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::BridgeSource";function CfnBridgeSourceVpcInterfaceAttachmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.wrap('supplied properties not correct for "VpcInterfaceAttachmentProperty"')}function convertCfnBridgeSourceVpcInterfaceAttachmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeSourceVpcInterfaceAttachmentPropertyValidator(properties).assertSuccess(),{VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName)}):properties}function CfnBridgeSourceVpcInterfaceAttachmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeSourceBridgeFlowSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("flowArn",cdk.requiredValidator)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowVpcInterfaceAttachment",CfnBridgeSourceVpcInterfaceAttachmentPropertyValidator)(properties.flowVpcInterfaceAttachment)),errors.wrap('supplied properties not correct for "BridgeFlowSourceProperty"')}function convertCfnBridgeSourceBridgeFlowSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeSourceBridgeFlowSourcePropertyValidator(properties).assertSuccess(),{FlowArn:cdk.stringToCloudFormation(properties.flowArn),FlowVpcInterfaceAttachment:convertCfnBridgeSourceVpcInterfaceAttachmentPropertyToCloudFormation(properties.flowVpcInterfaceAttachment)}):properties}function CfnBridgeSourceBridgeFlowSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("flowVpcInterfaceAttachment","FlowVpcInterfaceAttachment",properties.FlowVpcInterfaceAttachment!=null?CfnBridgeSourceVpcInterfaceAttachmentPropertyFromCloudFormation(properties.FlowVpcInterfaceAttachment):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeSourceBridgeNetworkSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("multicastIp",cdk.requiredValidator)(properties.multicastIp)),errors.collect(cdk.propertyValidator("multicastIp",cdk.validateString)(properties.multicastIp)),errors.collect(cdk.propertyValidator("networkName",cdk.requiredValidator)(properties.networkName)),errors.collect(cdk.propertyValidator("networkName",cdk.validateString)(properties.networkName)),errors.collect(cdk.propertyValidator("port",cdk.requiredValidator)(properties.port)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.requiredValidator)(properties.protocol)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.wrap('supplied properties not correct for "BridgeNetworkSourceProperty"')}function convertCfnBridgeSourceBridgeNetworkSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeSourceBridgeNetworkSourcePropertyValidator(properties).assertSuccess(),{MulticastIp:cdk.stringToCloudFormation(properties.multicastIp),NetworkName:cdk.stringToCloudFormation(properties.networkName),Port:cdk.numberToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol)}):properties}function CfnBridgeSourceBridgeNetworkSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("multicastIp","MulticastIp",properties.MulticastIp!=null?cfn_parse.FromCloudFormation.getString(properties.MulticastIp):void 0),ret.addPropertyResult("networkName","NetworkName",properties.NetworkName!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkName):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBridgeSourcePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bridgeArn",cdk.requiredValidator)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("bridgeArn",cdk.validateString)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("flowSource",CfnBridgeSourceBridgeFlowSourcePropertyValidator)(properties.flowSource)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkSource",CfnBridgeSourceBridgeNetworkSourcePropertyValidator)(properties.networkSource)),errors.wrap('supplied properties not correct for "CfnBridgeSourceProps"')}function convertCfnBridgeSourcePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBridgeSourcePropsValidator(properties).assertSuccess(),{BridgeArn:cdk.stringToCloudFormation(properties.bridgeArn),FlowSource:convertCfnBridgeSourceBridgeFlowSourcePropertyToCloudFormation(properties.flowSource),Name:cdk.stringToCloudFormation(properties.name),NetworkSource:convertCfnBridgeSourceBridgeNetworkSourcePropertyToCloudFormation(properties.networkSource)}):properties}function CfnBridgeSourcePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bridgeArn","BridgeArn",properties.BridgeArn!=null?cfn_parse.FromCloudFormation.getString(properties.BridgeArn):void 0),ret.addPropertyResult("flowSource","FlowSource",properties.FlowSource!=null?CfnBridgeSourceBridgeFlowSourcePropertyFromCloudFormation(properties.FlowSource):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkSource","NetworkSource",properties.NetworkSource!=null?CfnBridgeSourceBridgeNetworkSourcePropertyFromCloudFormation(properties.NetworkSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFlow extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFlowPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFlow(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFlow.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnFlowProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFlow),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"source",this),this.attrFlowArn=cdk.Token.asString(this.getAtt("FlowArn",cdk.ResolutionTypeHint.STRING)),this.attrFlowAvailabilityZone=cdk.Token.asString(this.getAtt("FlowAvailabilityZone",cdk.ResolutionTypeHint.STRING)),this.attrSourceIngestIp=cdk.Token.asString(this.getAtt("Source.IngestIp",cdk.ResolutionTypeHint.STRING)),this.attrSourceSourceArn=cdk.Token.asString(this.getAtt("Source.SourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSourceSourceIngestPort=cdk.Token.asString(this.getAtt("Source.SourceIngestPort",cdk.ResolutionTypeHint.STRING)),this.availabilityZone=props.availabilityZone,this.name=props.name,this.source=props.source,this.sourceFailoverConfig=props.sourceFailoverConfig}get cfnProperties(){return{availabilityZone:this.availabilityZone,name:this.name,source:this.source,sourceFailoverConfig:this.sourceFailoverConfig}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFlow.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFlowPropsToCloudFormation(props)}}exports.CfnFlow=CfnFlow,_d=JSII_RTTI_SYMBOL_1,CfnFlow[_d]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnFlow",version:"2.94.0"},CfnFlow.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::Flow";function CfnFlowEncryptionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("algorithm",cdk.validateString)(properties.algorithm)),errors.collect(cdk.propertyValidator("constantInitializationVector",cdk.validateString)(properties.constantInitializationVector)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("keyType",cdk.validateString)(properties.keyType)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.wrap('supplied properties not correct for "EncryptionProperty"')}function convertCfnFlowEncryptionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowEncryptionPropertyValidator(properties).assertSuccess(),{Algorithm:cdk.stringToCloudFormation(properties.algorithm),ConstantInitializationVector:cdk.stringToCloudFormation(properties.constantInitializationVector),DeviceId:cdk.stringToCloudFormation(properties.deviceId),KeyType:cdk.stringToCloudFormation(properties.keyType),Region:cdk.stringToCloudFormation(properties.region),ResourceId:cdk.stringToCloudFormation(properties.resourceId),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SecretArn:cdk.stringToCloudFormation(properties.secretArn),Url:cdk.stringToCloudFormation(properties.url)}):properties}function CfnFlowEncryptionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("algorithm","Algorithm",properties.Algorithm!=null?cfn_parse.FromCloudFormation.getString(properties.Algorithm):void 0),ret.addPropertyResult("constantInitializationVector","ConstantInitializationVector",properties.ConstantInitializationVector!=null?cfn_parse.FromCloudFormation.getString(properties.ConstantInitializationVector):void 0),ret.addPropertyResult("deviceId","DeviceId",properties.DeviceId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceId):void 0),ret.addPropertyResult("keyType","KeyType",properties.KeyType!=null?cfn_parse.FromCloudFormation.getString(properties.KeyType):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowVpcInterfaceAttachmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.wrap('supplied properties not correct for "VpcInterfaceAttachmentProperty"')}function convertCfnFlowVpcInterfaceAttachmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowVpcInterfaceAttachmentPropertyValidator(properties).assertSuccess(),{VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName)}):properties}function CfnFlowVpcInterfaceAttachmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowGatewayBridgeSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bridgeArn",cdk.requiredValidator)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("bridgeArn",cdk.validateString)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("vpcInterfaceAttachment",CfnFlowVpcInterfaceAttachmentPropertyValidator)(properties.vpcInterfaceAttachment)),errors.wrap('supplied properties not correct for "GatewayBridgeSourceProperty"')}function convertCfnFlowGatewayBridgeSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowGatewayBridgeSourcePropertyValidator(properties).assertSuccess(),{BridgeArn:cdk.stringToCloudFormation(properties.bridgeArn),VpcInterfaceAttachment:convertCfnFlowVpcInterfaceAttachmentPropertyToCloudFormation(properties.vpcInterfaceAttachment)}):properties}function CfnFlowGatewayBridgeSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bridgeArn","BridgeArn",properties.BridgeArn!=null?cfn_parse.FromCloudFormation.getString(properties.BridgeArn):void 0),ret.addPropertyResult("vpcInterfaceAttachment","VpcInterfaceAttachment",properties.VpcInterfaceAttachment!=null?CfnFlowVpcInterfaceAttachmentPropertyFromCloudFormation(properties.VpcInterfaceAttachment):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("decryption",CfnFlowEncryptionPropertyValidator)(properties.decryption)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("entitlementArn",cdk.validateString)(properties.entitlementArn)),errors.collect(cdk.propertyValidator("gatewayBridgeSource",CfnFlowGatewayBridgeSourcePropertyValidator)(properties.gatewayBridgeSource)),errors.collect(cdk.propertyValidator("ingestIp",cdk.validateString)(properties.ingestIp)),errors.collect(cdk.propertyValidator("ingestPort",cdk.validateNumber)(properties.ingestPort)),errors.collect(cdk.propertyValidator("maxBitrate",cdk.validateNumber)(properties.maxBitrate)),errors.collect(cdk.propertyValidator("maxLatency",cdk.validateNumber)(properties.maxLatency)),errors.collect(cdk.propertyValidator("minLatency",cdk.validateNumber)(properties.minLatency)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("senderControlPort",cdk.validateNumber)(properties.senderControlPort)),errors.collect(cdk.propertyValidator("senderIpAddress",cdk.validateString)(properties.senderIpAddress)),errors.collect(cdk.propertyValidator("sourceArn",cdk.validateString)(properties.sourceArn)),errors.collect(cdk.propertyValidator("sourceIngestPort",cdk.validateString)(properties.sourceIngestPort)),errors.collect(cdk.propertyValidator("sourceListenerAddress",cdk.validateString)(properties.sourceListenerAddress)),errors.collect(cdk.propertyValidator("sourceListenerPort",cdk.validateNumber)(properties.sourceListenerPort)),errors.collect(cdk.propertyValidator("streamId",cdk.validateString)(properties.streamId)),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.collect(cdk.propertyValidator("whitelistCidr",cdk.validateString)(properties.whitelistCidr)),errors.wrap('supplied properties not correct for "SourceProperty"')}function convertCfnFlowSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourcePropertyValidator(properties).assertSuccess(),{Decryption:convertCfnFlowEncryptionPropertyToCloudFormation(properties.decryption),Description:cdk.stringToCloudFormation(properties.description),EntitlementArn:cdk.stringToCloudFormation(properties.entitlementArn),GatewayBridgeSource:convertCfnFlowGatewayBridgeSourcePropertyToCloudFormation(properties.gatewayBridgeSource),IngestIp:cdk.stringToCloudFormation(properties.ingestIp),IngestPort:cdk.numberToCloudFormation(properties.ingestPort),MaxBitrate:cdk.numberToCloudFormation(properties.maxBitrate),MaxLatency:cdk.numberToCloudFormation(properties.maxLatency),MinLatency:cdk.numberToCloudFormation(properties.minLatency),Name:cdk.stringToCloudFormation(properties.name),Protocol:cdk.stringToCloudFormation(properties.protocol),SenderControlPort:cdk.numberToCloudFormation(properties.senderControlPort),SenderIpAddress:cdk.stringToCloudFormation(properties.senderIpAddress),SourceArn:cdk.stringToCloudFormation(properties.sourceArn),SourceIngestPort:cdk.stringToCloudFormation(properties.sourceIngestPort),SourceListenerAddress:cdk.stringToCloudFormation(properties.sourceListenerAddress),SourceListenerPort:cdk.numberToCloudFormation(properties.sourceListenerPort),StreamId:cdk.stringToCloudFormation(properties.streamId),VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName),WhitelistCidr:cdk.stringToCloudFormation(properties.whitelistCidr)}):properties}function CfnFlowSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("decryption","Decryption",properties.Decryption!=null?CfnFlowEncryptionPropertyFromCloudFormation(properties.Decryption):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("entitlementArn","EntitlementArn",properties.EntitlementArn!=null?cfn_parse.FromCloudFormation.getString(properties.EntitlementArn):void 0),ret.addPropertyResult("gatewayBridgeSource","GatewayBridgeSource",properties.GatewayBridgeSource!=null?CfnFlowGatewayBridgeSourcePropertyFromCloudFormation(properties.GatewayBridgeSource):void 0),ret.addPropertyResult("ingestIp","IngestIp",properties.IngestIp!=null?cfn_parse.FromCloudFormation.getString(properties.IngestIp):void 0),ret.addPropertyResult("ingestPort","IngestPort",properties.IngestPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.IngestPort):void 0),ret.addPropertyResult("maxBitrate","MaxBitrate",properties.MaxBitrate!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxBitrate):void 0),ret.addPropertyResult("maxLatency","MaxLatency",properties.MaxLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxLatency):void 0),ret.addPropertyResult("minLatency","MinLatency",properties.MinLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinLatency):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("senderControlPort","SenderControlPort",properties.SenderControlPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.SenderControlPort):void 0),ret.addPropertyResult("senderIpAddress","SenderIpAddress",properties.SenderIpAddress!=null?cfn_parse.FromCloudFormation.getString(properties.SenderIpAddress):void 0),ret.addPropertyResult("sourceArn","SourceArn",properties.SourceArn!=null?cfn_parse.FromCloudFormation.getString(properties.SourceArn):void 0),ret.addPropertyResult("sourceIngestPort","SourceIngestPort",properties.SourceIngestPort!=null?cfn_parse.FromCloudFormation.getString(properties.SourceIngestPort):void 0),ret.addPropertyResult("sourceListenerAddress","SourceListenerAddress",properties.SourceListenerAddress!=null?cfn_parse.FromCloudFormation.getString(properties.SourceListenerAddress):void 0),ret.addPropertyResult("sourceListenerPort","SourceListenerPort",properties.SourceListenerPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.SourceListenerPort):void 0),ret.addPropertyResult("streamId","StreamId",properties.StreamId!=null?cfn_parse.FromCloudFormation.getString(properties.StreamId):void 0),ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addPropertyResult("whitelistCidr","WhitelistCidr",properties.WhitelistCidr!=null?cfn_parse.FromCloudFormation.getString(properties.WhitelistCidr):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowSourcePriorityPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("primarySource",cdk.requiredValidator)(properties.primarySource)),errors.collect(cdk.propertyValidator("primarySource",cdk.validateString)(properties.primarySource)),errors.wrap('supplied properties not correct for "SourcePriorityProperty"')}function convertCfnFlowSourcePriorityPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourcePriorityPropertyValidator(properties).assertSuccess(),{PrimarySource:cdk.stringToCloudFormation(properties.primarySource)}):properties}function CfnFlowSourcePriorityPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("primarySource","PrimarySource",properties.PrimarySource!=null?cfn_parse.FromCloudFormation.getString(properties.PrimarySource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowFailoverConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("failoverMode",cdk.validateString)(properties.failoverMode)),errors.collect(cdk.propertyValidator("recoveryWindow",cdk.validateNumber)(properties.recoveryWindow)),errors.collect(cdk.propertyValidator("sourcePriority",CfnFlowSourcePriorityPropertyValidator)(properties.sourcePriority)),errors.collect(cdk.propertyValidator("state",cdk.validateString)(properties.state)),errors.wrap('supplied properties not correct for "FailoverConfigProperty"')}function convertCfnFlowFailoverConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowFailoverConfigPropertyValidator(properties).assertSuccess(),{FailoverMode:cdk.stringToCloudFormation(properties.failoverMode),RecoveryWindow:cdk.numberToCloudFormation(properties.recoveryWindow),SourcePriority:convertCfnFlowSourcePriorityPropertyToCloudFormation(properties.sourcePriority),State:cdk.stringToCloudFormation(properties.state)}):properties}function CfnFlowFailoverConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("failoverMode","FailoverMode",properties.FailoverMode!=null?cfn_parse.FromCloudFormation.getString(properties.FailoverMode):void 0),ret.addPropertyResult("recoveryWindow","RecoveryWindow",properties.RecoveryWindow!=null?cfn_parse.FromCloudFormation.getNumber(properties.RecoveryWindow):void 0),ret.addPropertyResult("sourcePriority","SourcePriority",properties.SourcePriority!=null?CfnFlowSourcePriorityPropertyFromCloudFormation(properties.SourcePriority):void 0),ret.addPropertyResult("state","State",properties.State!=null?cfn_parse.FromCloudFormation.getString(properties.State):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("source",cdk.requiredValidator)(properties.source)),errors.collect(cdk.propertyValidator("source",CfnFlowSourcePropertyValidator)(properties.source)),errors.collect(cdk.propertyValidator("sourceFailoverConfig",CfnFlowFailoverConfigPropertyValidator)(properties.sourceFailoverConfig)),errors.wrap('supplied properties not correct for "CfnFlowProps"')}function convertCfnFlowPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowPropsValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),Name:cdk.stringToCloudFormation(properties.name),Source:convertCfnFlowSourcePropertyToCloudFormation(properties.source),SourceFailoverConfig:convertCfnFlowFailoverConfigPropertyToCloudFormation(properties.sourceFailoverConfig)}):properties}function CfnFlowPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("source","Source",properties.Source!=null?CfnFlowSourcePropertyFromCloudFormation(properties.Source):void 0),ret.addPropertyResult("sourceFailoverConfig","SourceFailoverConfig",properties.SourceFailoverConfig!=null?CfnFlowFailoverConfigPropertyFromCloudFormation(properties.SourceFailoverConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFlowEntitlement extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFlowEntitlementPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFlowEntitlement(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFlowEntitlement.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnFlowEntitlementProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFlowEntitlement),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"flowArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"subscribers",this),this.attrEntitlementArn=cdk.Token.asString(this.getAtt("EntitlementArn",cdk.ResolutionTypeHint.STRING)),this.dataTransferSubscriberFeePercent=props.dataTransferSubscriberFeePercent,this.description=props.description,this.encryption=props.encryption,this.entitlementStatus=props.entitlementStatus,this.flowArn=props.flowArn,this.name=props.name,this.subscribers=props.subscribers}get cfnProperties(){return{dataTransferSubscriberFeePercent:this.dataTransferSubscriberFeePercent,description:this.description,encryption:this.encryption,entitlementStatus:this.entitlementStatus,flowArn:this.flowArn,name:this.name,subscribers:this.subscribers}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFlowEntitlement.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFlowEntitlementPropsToCloudFormation(props)}}exports.CfnFlowEntitlement=CfnFlowEntitlement,_e=JSII_RTTI_SYMBOL_1,CfnFlowEntitlement[_e]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnFlowEntitlement",version:"2.94.0"},CfnFlowEntitlement.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::FlowEntitlement";function CfnFlowEntitlementEncryptionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("algorithm",cdk.requiredValidator)(properties.algorithm)),errors.collect(cdk.propertyValidator("algorithm",cdk.validateString)(properties.algorithm)),errors.collect(cdk.propertyValidator("constantInitializationVector",cdk.validateString)(properties.constantInitializationVector)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("keyType",cdk.validateString)(properties.keyType)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.wrap('supplied properties not correct for "EncryptionProperty"')}function convertCfnFlowEntitlementEncryptionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowEntitlementEncryptionPropertyValidator(properties).assertSuccess(),{Algorithm:cdk.stringToCloudFormation(properties.algorithm),ConstantInitializationVector:cdk.stringToCloudFormation(properties.constantInitializationVector),DeviceId:cdk.stringToCloudFormation(properties.deviceId),KeyType:cdk.stringToCloudFormation(properties.keyType),Region:cdk.stringToCloudFormation(properties.region),ResourceId:cdk.stringToCloudFormation(properties.resourceId),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SecretArn:cdk.stringToCloudFormation(properties.secretArn),Url:cdk.stringToCloudFormation(properties.url)}):properties}function CfnFlowEntitlementEncryptionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("algorithm","Algorithm",properties.Algorithm!=null?cfn_parse.FromCloudFormation.getString(properties.Algorithm):void 0),ret.addPropertyResult("constantInitializationVector","ConstantInitializationVector",properties.ConstantInitializationVector!=null?cfn_parse.FromCloudFormation.getString(properties.ConstantInitializationVector):void 0),ret.addPropertyResult("deviceId","DeviceId",properties.DeviceId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceId):void 0),ret.addPropertyResult("keyType","KeyType",properties.KeyType!=null?cfn_parse.FromCloudFormation.getString(properties.KeyType):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowEntitlementPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dataTransferSubscriberFeePercent",cdk.validateNumber)(properties.dataTransferSubscriberFeePercent)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("encryption",CfnFlowEntitlementEncryptionPropertyValidator)(properties.encryption)),errors.collect(cdk.propertyValidator("entitlementStatus",cdk.validateString)(properties.entitlementStatus)),errors.collect(cdk.propertyValidator("flowArn",cdk.requiredValidator)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("subscribers",cdk.requiredValidator)(properties.subscribers)),errors.collect(cdk.propertyValidator("subscribers",cdk.listValidator(cdk.validateString))(properties.subscribers)),errors.wrap('supplied properties not correct for "CfnFlowEntitlementProps"')}function convertCfnFlowEntitlementPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowEntitlementPropsValidator(properties).assertSuccess(),{DataTransferSubscriberFeePercent:cdk.numberToCloudFormation(properties.dataTransferSubscriberFeePercent),Description:cdk.stringToCloudFormation(properties.description),Encryption:convertCfnFlowEntitlementEncryptionPropertyToCloudFormation(properties.encryption),EntitlementStatus:cdk.stringToCloudFormation(properties.entitlementStatus),FlowArn:cdk.stringToCloudFormation(properties.flowArn),Name:cdk.stringToCloudFormation(properties.name),Subscribers:cdk.listMapper(cdk.stringToCloudFormation)(properties.subscribers)}):properties}function CfnFlowEntitlementPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dataTransferSubscriberFeePercent","DataTransferSubscriberFeePercent",properties.DataTransferSubscriberFeePercent!=null?cfn_parse.FromCloudFormation.getNumber(properties.DataTransferSubscriberFeePercent):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("encryption","Encryption",properties.Encryption!=null?CfnFlowEntitlementEncryptionPropertyFromCloudFormation(properties.Encryption):void 0),ret.addPropertyResult("entitlementStatus","EntitlementStatus",properties.EntitlementStatus!=null?cfn_parse.FromCloudFormation.getString(properties.EntitlementStatus):void 0),ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("subscribers","Subscribers",properties.Subscribers!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Subscribers):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFlowOutput extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFlowOutputPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFlowOutput(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFlowOutput.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnFlowOutputProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFlowOutput),error}cdk.requireProperty(props,"flowArn",this),cdk.requireProperty(props,"protocol",this),this.attrOutputArn=cdk.Token.asString(this.getAtt("OutputArn",cdk.ResolutionTypeHint.STRING)),this.cidrAllowList=props.cidrAllowList,this.description=props.description,this.destination=props.destination,this.encryption=props.encryption,this.flowArn=props.flowArn,this.maxLatency=props.maxLatency,this.minLatency=props.minLatency,this.name=props.name,this.port=props.port,this.protocol=props.protocol,this.remoteId=props.remoteId,this.smoothingLatency=props.smoothingLatency,this.streamId=props.streamId,this.vpcInterfaceAttachment=props.vpcInterfaceAttachment}get cfnProperties(){return{cidrAllowList:this.cidrAllowList,description:this.description,destination:this.destination,encryption:this.encryption,flowArn:this.flowArn,maxLatency:this.maxLatency,minLatency:this.minLatency,name:this.name,port:this.port,protocol:this.protocol,remoteId:this.remoteId,smoothingLatency:this.smoothingLatency,streamId:this.streamId,vpcInterfaceAttachment:this.vpcInterfaceAttachment}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFlowOutput.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFlowOutputPropsToCloudFormation(props)}}exports.CfnFlowOutput=CfnFlowOutput,_f=JSII_RTTI_SYMBOL_1,CfnFlowOutput[_f]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnFlowOutput",version:"2.94.0"},CfnFlowOutput.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::FlowOutput";function CfnFlowOutputEncryptionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("algorithm",cdk.validateString)(properties.algorithm)),errors.collect(cdk.propertyValidator("keyType",cdk.validateString)(properties.keyType)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("secretArn",cdk.requiredValidator)(properties.secretArn)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.wrap('supplied properties not correct for "EncryptionProperty"')}function convertCfnFlowOutputEncryptionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowOutputEncryptionPropertyValidator(properties).assertSuccess(),{Algorithm:cdk.stringToCloudFormation(properties.algorithm),KeyType:cdk.stringToCloudFormation(properties.keyType),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SecretArn:cdk.stringToCloudFormation(properties.secretArn)}):properties}function CfnFlowOutputEncryptionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("algorithm","Algorithm",properties.Algorithm!=null?cfn_parse.FromCloudFormation.getString(properties.Algorithm):void 0),ret.addPropertyResult("keyType","KeyType",properties.KeyType!=null?cfn_parse.FromCloudFormation.getString(properties.KeyType):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowOutputVpcInterfaceAttachmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.wrap('supplied properties not correct for "VpcInterfaceAttachmentProperty"')}function convertCfnFlowOutputVpcInterfaceAttachmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowOutputVpcInterfaceAttachmentPropertyValidator(properties).assertSuccess(),{VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName)}):properties}function CfnFlowOutputVpcInterfaceAttachmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowOutputPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrAllowList",cdk.listValidator(cdk.validateString))(properties.cidrAllowList)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("destination",cdk.validateString)(properties.destination)),errors.collect(cdk.propertyValidator("encryption",CfnFlowOutputEncryptionPropertyValidator)(properties.encryption)),errors.collect(cdk.propertyValidator("flowArn",cdk.requiredValidator)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("maxLatency",cdk.validateNumber)(properties.maxLatency)),errors.collect(cdk.propertyValidator("minLatency",cdk.validateNumber)(properties.minLatency)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.requiredValidator)(properties.protocol)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("remoteId",cdk.validateString)(properties.remoteId)),errors.collect(cdk.propertyValidator("smoothingLatency",cdk.validateNumber)(properties.smoothingLatency)),errors.collect(cdk.propertyValidator("streamId",cdk.validateString)(properties.streamId)),errors.collect(cdk.propertyValidator("vpcInterfaceAttachment",CfnFlowOutputVpcInterfaceAttachmentPropertyValidator)(properties.vpcInterfaceAttachment)),errors.wrap('supplied properties not correct for "CfnFlowOutputProps"')}function convertCfnFlowOutputPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowOutputPropsValidator(properties).assertSuccess(),{CidrAllowList:cdk.listMapper(cdk.stringToCloudFormation)(properties.cidrAllowList),Description:cdk.stringToCloudFormation(properties.description),Destination:cdk.stringToCloudFormation(properties.destination),Encryption:convertCfnFlowOutputEncryptionPropertyToCloudFormation(properties.encryption),FlowArn:cdk.stringToCloudFormation(properties.flowArn),MaxLatency:cdk.numberToCloudFormation(properties.maxLatency),MinLatency:cdk.numberToCloudFormation(properties.minLatency),Name:cdk.stringToCloudFormation(properties.name),Port:cdk.numberToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol),RemoteId:cdk.stringToCloudFormation(properties.remoteId),SmoothingLatency:cdk.numberToCloudFormation(properties.smoothingLatency),StreamId:cdk.stringToCloudFormation(properties.streamId),VpcInterfaceAttachment:convertCfnFlowOutputVpcInterfaceAttachmentPropertyToCloudFormation(properties.vpcInterfaceAttachment)}):properties}function CfnFlowOutputPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrAllowList","CidrAllowList",properties.CidrAllowList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CidrAllowList):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("destination","Destination",properties.Destination!=null?cfn_parse.FromCloudFormation.getString(properties.Destination):void 0),ret.addPropertyResult("encryption","Encryption",properties.Encryption!=null?CfnFlowOutputEncryptionPropertyFromCloudFormation(properties.Encryption):void 0),ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("maxLatency","MaxLatency",properties.MaxLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxLatency):void 0),ret.addPropertyResult("minLatency","MinLatency",properties.MinLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinLatency):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("remoteId","RemoteId",properties.RemoteId!=null?cfn_parse.FromCloudFormation.getString(properties.RemoteId):void 0),ret.addPropertyResult("smoothingLatency","SmoothingLatency",properties.SmoothingLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.SmoothingLatency):void 0),ret.addPropertyResult("streamId","StreamId",properties.StreamId!=null?cfn_parse.FromCloudFormation.getString(properties.StreamId):void 0),ret.addPropertyResult("vpcInterfaceAttachment","VpcInterfaceAttachment",properties.VpcInterfaceAttachment!=null?CfnFlowOutputVpcInterfaceAttachmentPropertyFromCloudFormation(properties.VpcInterfaceAttachment):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFlowSource extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFlowSourcePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFlowSource(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFlowSource.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnFlowSourceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFlowSource),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"name",this),this.attrIngestIp=cdk.Token.asString(this.getAtt("IngestIp",cdk.ResolutionTypeHint.STRING)),this.attrSourceArn=cdk.Token.asString(this.getAtt("SourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSourceIngestPort=cdk.Token.asString(this.getAtt("SourceIngestPort",cdk.ResolutionTypeHint.STRING)),this.decryption=props.decryption,this.description=props.description,this.entitlementArn=props.entitlementArn,this.flowArn=props.flowArn,this.gatewayBridgeSource=props.gatewayBridgeSource,this.ingestPort=props.ingestPort,this.maxBitrate=props.maxBitrate,this.maxLatency=props.maxLatency,this.minLatency=props.minLatency,this.name=props.name,this.protocol=props.protocol,this.senderControlPort=props.senderControlPort,this.senderIpAddress=props.senderIpAddress,this.sourceListenerAddress=props.sourceListenerAddress,this.sourceListenerPort=props.sourceListenerPort,this.streamId=props.streamId,this.vpcInterfaceName=props.vpcInterfaceName,this.whitelistCidr=props.whitelistCidr}get cfnProperties(){return{decryption:this.decryption,description:this.description,entitlementArn:this.entitlementArn,flowArn:this.flowArn,gatewayBridgeSource:this.gatewayBridgeSource,ingestPort:this.ingestPort,maxBitrate:this.maxBitrate,maxLatency:this.maxLatency,minLatency:this.minLatency,name:this.name,protocol:this.protocol,senderControlPort:this.senderControlPort,senderIpAddress:this.senderIpAddress,sourceListenerAddress:this.sourceListenerAddress,sourceListenerPort:this.sourceListenerPort,streamId:this.streamId,vpcInterfaceName:this.vpcInterfaceName,whitelistCidr:this.whitelistCidr}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFlowSource.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFlowSourcePropsToCloudFormation(props)}}exports.CfnFlowSource=CfnFlowSource,_g=JSII_RTTI_SYMBOL_1,CfnFlowSource[_g]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnFlowSource",version:"2.94.0"},CfnFlowSource.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::FlowSource";function CfnFlowSourceEncryptionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("algorithm",cdk.validateString)(properties.algorithm)),errors.collect(cdk.propertyValidator("constantInitializationVector",cdk.validateString)(properties.constantInitializationVector)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("keyType",cdk.validateString)(properties.keyType)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.collect(cdk.propertyValidator("url",cdk.validateString)(properties.url)),errors.wrap('supplied properties not correct for "EncryptionProperty"')}function convertCfnFlowSourceEncryptionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourceEncryptionPropertyValidator(properties).assertSuccess(),{Algorithm:cdk.stringToCloudFormation(properties.algorithm),ConstantInitializationVector:cdk.stringToCloudFormation(properties.constantInitializationVector),DeviceId:cdk.stringToCloudFormation(properties.deviceId),KeyType:cdk.stringToCloudFormation(properties.keyType),Region:cdk.stringToCloudFormation(properties.region),ResourceId:cdk.stringToCloudFormation(properties.resourceId),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SecretArn:cdk.stringToCloudFormation(properties.secretArn),Url:cdk.stringToCloudFormation(properties.url)}):properties}function CfnFlowSourceEncryptionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("algorithm","Algorithm",properties.Algorithm!=null?cfn_parse.FromCloudFormation.getString(properties.Algorithm):void 0),ret.addPropertyResult("constantInitializationVector","ConstantInitializationVector",properties.ConstantInitializationVector!=null?cfn_parse.FromCloudFormation.getString(properties.ConstantInitializationVector):void 0),ret.addPropertyResult("deviceId","DeviceId",properties.DeviceId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceId):void 0),ret.addPropertyResult("keyType","KeyType",properties.KeyType!=null?cfn_parse.FromCloudFormation.getString(properties.KeyType):void 0),ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addPropertyResult("url","Url",properties.Url!=null?cfn_parse.FromCloudFormation.getString(properties.Url):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowSourceVpcInterfaceAttachmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.wrap('supplied properties not correct for "VpcInterfaceAttachmentProperty"')}function convertCfnFlowSourceVpcInterfaceAttachmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourceVpcInterfaceAttachmentPropertyValidator(properties).assertSuccess(),{VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName)}):properties}function CfnFlowSourceVpcInterfaceAttachmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowSourceGatewayBridgeSourcePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bridgeArn",cdk.requiredValidator)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("bridgeArn",cdk.validateString)(properties.bridgeArn)),errors.collect(cdk.propertyValidator("vpcInterfaceAttachment",CfnFlowSourceVpcInterfaceAttachmentPropertyValidator)(properties.vpcInterfaceAttachment)),errors.wrap('supplied properties not correct for "GatewayBridgeSourceProperty"')}function convertCfnFlowSourceGatewayBridgeSourcePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourceGatewayBridgeSourcePropertyValidator(properties).assertSuccess(),{BridgeArn:cdk.stringToCloudFormation(properties.bridgeArn),VpcInterfaceAttachment:convertCfnFlowSourceVpcInterfaceAttachmentPropertyToCloudFormation(properties.vpcInterfaceAttachment)}):properties}function CfnFlowSourceGatewayBridgeSourcePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bridgeArn","BridgeArn",properties.BridgeArn!=null?cfn_parse.FromCloudFormation.getString(properties.BridgeArn):void 0),ret.addPropertyResult("vpcInterfaceAttachment","VpcInterfaceAttachment",properties.VpcInterfaceAttachment!=null?CfnFlowSourceVpcInterfaceAttachmentPropertyFromCloudFormation(properties.VpcInterfaceAttachment):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFlowSourcePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("decryption",CfnFlowSourceEncryptionPropertyValidator)(properties.decryption)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("entitlementArn",cdk.validateString)(properties.entitlementArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("gatewayBridgeSource",CfnFlowSourceGatewayBridgeSourcePropertyValidator)(properties.gatewayBridgeSource)),errors.collect(cdk.propertyValidator("ingestPort",cdk.validateNumber)(properties.ingestPort)),errors.collect(cdk.propertyValidator("maxBitrate",cdk.validateNumber)(properties.maxBitrate)),errors.collect(cdk.propertyValidator("maxLatency",cdk.validateNumber)(properties.maxLatency)),errors.collect(cdk.propertyValidator("minLatency",cdk.validateNumber)(properties.minLatency)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("senderControlPort",cdk.validateNumber)(properties.senderControlPort)),errors.collect(cdk.propertyValidator("senderIpAddress",cdk.validateString)(properties.senderIpAddress)),errors.collect(cdk.propertyValidator("sourceListenerAddress",cdk.validateString)(properties.sourceListenerAddress)),errors.collect(cdk.propertyValidator("sourceListenerPort",cdk.validateNumber)(properties.sourceListenerPort)),errors.collect(cdk.propertyValidator("streamId",cdk.validateString)(properties.streamId)),errors.collect(cdk.propertyValidator("vpcInterfaceName",cdk.validateString)(properties.vpcInterfaceName)),errors.collect(cdk.propertyValidator("whitelistCidr",cdk.validateString)(properties.whitelistCidr)),errors.wrap('supplied properties not correct for "CfnFlowSourceProps"')}function convertCfnFlowSourcePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowSourcePropsValidator(properties).assertSuccess(),{Decryption:convertCfnFlowSourceEncryptionPropertyToCloudFormation(properties.decryption),Description:cdk.stringToCloudFormation(properties.description),EntitlementArn:cdk.stringToCloudFormation(properties.entitlementArn),FlowArn:cdk.stringToCloudFormation(properties.flowArn),GatewayBridgeSource:convertCfnFlowSourceGatewayBridgeSourcePropertyToCloudFormation(properties.gatewayBridgeSource),IngestPort:cdk.numberToCloudFormation(properties.ingestPort),MaxBitrate:cdk.numberToCloudFormation(properties.maxBitrate),MaxLatency:cdk.numberToCloudFormation(properties.maxLatency),MinLatency:cdk.numberToCloudFormation(properties.minLatency),Name:cdk.stringToCloudFormation(properties.name),Protocol:cdk.stringToCloudFormation(properties.protocol),SenderControlPort:cdk.numberToCloudFormation(properties.senderControlPort),SenderIpAddress:cdk.stringToCloudFormation(properties.senderIpAddress),SourceListenerAddress:cdk.stringToCloudFormation(properties.sourceListenerAddress),SourceListenerPort:cdk.numberToCloudFormation(properties.sourceListenerPort),StreamId:cdk.stringToCloudFormation(properties.streamId),VpcInterfaceName:cdk.stringToCloudFormation(properties.vpcInterfaceName),WhitelistCidr:cdk.stringToCloudFormation(properties.whitelistCidr)}):properties}function CfnFlowSourcePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("decryption","Decryption",properties.Decryption!=null?CfnFlowSourceEncryptionPropertyFromCloudFormation(properties.Decryption):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("entitlementArn","EntitlementArn",properties.EntitlementArn!=null?cfn_parse.FromCloudFormation.getString(properties.EntitlementArn):void 0),ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("gatewayBridgeSource","GatewayBridgeSource",properties.GatewayBridgeSource!=null?CfnFlowSourceGatewayBridgeSourcePropertyFromCloudFormation(properties.GatewayBridgeSource):void 0),ret.addPropertyResult("ingestPort","IngestPort",properties.IngestPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.IngestPort):void 0),ret.addPropertyResult("maxBitrate","MaxBitrate",properties.MaxBitrate!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxBitrate):void 0),ret.addPropertyResult("maxLatency","MaxLatency",properties.MaxLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxLatency):void 0),ret.addPropertyResult("minLatency","MinLatency",properties.MinLatency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinLatency):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("senderControlPort","SenderControlPort",properties.SenderControlPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.SenderControlPort):void 0),ret.addPropertyResult("senderIpAddress","SenderIpAddress",properties.SenderIpAddress!=null?cfn_parse.FromCloudFormation.getString(properties.SenderIpAddress):void 0),ret.addPropertyResult("sourceListenerAddress","SourceListenerAddress",properties.SourceListenerAddress!=null?cfn_parse.FromCloudFormation.getString(properties.SourceListenerAddress):void 0),ret.addPropertyResult("sourceListenerPort","SourceListenerPort",properties.SourceListenerPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.SourceListenerPort):void 0),ret.addPropertyResult("streamId","StreamId",properties.StreamId!=null?cfn_parse.FromCloudFormation.getString(properties.StreamId):void 0),ret.addPropertyResult("vpcInterfaceName","VpcInterfaceName",properties.VpcInterfaceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcInterfaceName):void 0),ret.addPropertyResult("whitelistCidr","WhitelistCidr",properties.WhitelistCidr!=null?cfn_parse.FromCloudFormation.getString(properties.WhitelistCidr):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFlowVpcInterface extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFlowVpcInterfacePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFlowVpcInterface(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFlowVpcInterface.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnFlowVpcInterfaceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFlowVpcInterface),error}cdk.requireProperty(props,"flowArn",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"roleArn",this),cdk.requireProperty(props,"securityGroupIds",this),cdk.requireProperty(props,"subnetId",this),this.attrNetworkInterfaceIds=cdk.Token.asList(this.getAtt("NetworkInterfaceIds",cdk.ResolutionTypeHint.STRING_LIST)),this.flowArn=props.flowArn,this.name=props.name,this.roleArn=props.roleArn,this.securityGroupIds=props.securityGroupIds,this.subnetId=props.subnetId}get cfnProperties(){return{flowArn:this.flowArn,name:this.name,roleArn:this.roleArn,securityGroupIds:this.securityGroupIds,subnetId:this.subnetId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFlowVpcInterface.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFlowVpcInterfacePropsToCloudFormation(props)}}exports.CfnFlowVpcInterface=CfnFlowVpcInterface,_h=JSII_RTTI_SYMBOL_1,CfnFlowVpcInterface[_h]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnFlowVpcInterface",version:"2.94.0"},CfnFlowVpcInterface.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::FlowVpcInterface";function CfnFlowVpcInterfacePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("flowArn",cdk.requiredValidator)(properties.flowArn)),errors.collect(cdk.propertyValidator("flowArn",cdk.validateString)(properties.flowArn)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.requiredValidator)(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetId",cdk.requiredValidator)(properties.subnetId)),errors.collect(cdk.propertyValidator("subnetId",cdk.validateString)(properties.subnetId)),errors.wrap('supplied properties not correct for "CfnFlowVpcInterfaceProps"')}function convertCfnFlowVpcInterfacePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFlowVpcInterfacePropsValidator(properties).assertSuccess(),{FlowArn:cdk.stringToCloudFormation(properties.flowArn),Name:cdk.stringToCloudFormation(properties.name),RoleArn:cdk.stringToCloudFormation(properties.roleArn),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetId:cdk.stringToCloudFormation(properties.subnetId)}):properties}function CfnFlowVpcInterfacePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("flowArn","FlowArn",properties.FlowArn!=null?cfn_parse.FromCloudFormation.getString(properties.FlowArn):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetId","SubnetId",properties.SubnetId!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnGateway extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGatewayPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnGateway(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnGateway.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mediaconnect_CfnGatewayProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnGateway),error}cdk.requireProperty(props,"egressCidrBlocks",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"networks",this),this.attrGatewayArn=cdk.Token.asString(this.getAtt("GatewayArn",cdk.ResolutionTypeHint.STRING)),this.attrGatewayState=cdk.Token.asString(this.getAtt("GatewayState",cdk.ResolutionTypeHint.STRING)),this.egressCidrBlocks=props.egressCidrBlocks,this.name=props.name,this.networks=props.networks}get cfnProperties(){return{egressCidrBlocks:this.egressCidrBlocks,name:this.name,networks:this.networks}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnGateway.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnGatewayPropsToCloudFormation(props)}}exports.CfnGateway=CfnGateway,_j=JSII_RTTI_SYMBOL_1,CfnGateway[_j]={fqn:"aws-cdk-lib.aws_mediaconnect.CfnGateway",version:"2.94.0"},CfnGateway.CFN_RESOURCE_TYPE_NAME="AWS::MediaConnect::Gateway";function CfnGatewayGatewayNetworkPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrBlock",cdk.requiredValidator)(properties.cidrBlock)),errors.collect(cdk.propertyValidator("cidrBlock",cdk.validateString)(properties.cidrBlock)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "GatewayNetworkProperty"')}function convertCfnGatewayGatewayNetworkPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGatewayGatewayNetworkPropertyValidator(properties).assertSuccess(),{CidrBlock:cdk.stringToCloudFormation(properties.cidrBlock),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnGatewayGatewayNetworkPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrBlock","CidrBlock",properties.CidrBlock!=null?cfn_parse.FromCloudFormation.getString(properties.CidrBlock):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnGatewayPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressCidrBlocks",cdk.requiredValidator)(properties.egressCidrBlocks)),errors.collect(cdk.propertyValidator("egressCidrBlocks",cdk.listValidator(cdk.validateString))(properties.egressCidrBlocks)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networks",cdk.requiredValidator)(properties.networks)),errors.collect(cdk.propertyValidator("networks",cdk.listValidator(CfnGatewayGatewayNetworkPropertyValidator))(properties.networks)),errors.wrap('supplied properties not correct for "CfnGatewayProps"')}function convertCfnGatewayPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGatewayPropsValidator(properties).assertSuccess(),{EgressCidrBlocks:cdk.listMapper(cdk.stringToCloudFormation)(properties.egressCidrBlocks),Name:cdk.stringToCloudFormation(properties.name),Networks:cdk.listMapper(convertCfnGatewayGatewayNetworkPropertyToCloudFormation)(properties.networks)}):properties}function CfnGatewayPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressCidrBlocks","EgressCidrBlocks",properties.EgressCidrBlocks!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EgressCidrBlocks):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networks","Networks",properties.Networks!=null?cfn_parse.FromCloudFormation.getArray(CfnGatewayGatewayNetworkPropertyFromCloudFormation)(properties.Networks):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
