"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnStageV2=exports.CfnRouteResponseV2=exports.CfnRouteV2=exports.CfnModelV2=exports.CfnIntegrationResponseV2=exports.CfnIntegrationV2=exports.CfnDomainNameV2=exports.CfnDeploymentV2=exports.CfnAuthorizerV2=exports.CfnApiMappingV2=exports.CfnApiV2=void 0;const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core");function CfnApiV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiKeySelectionExpression",cdk.validateString)(properties.apiKeySelectionExpression)),errors.collect(cdk.propertyValidator("basePath",cdk.validateString)(properties.basePath)),errors.collect(cdk.propertyValidator("body",cdk.validateObject)(properties.body)),errors.collect(cdk.propertyValidator("bodyS3Location",CfnApiV2_BodyS3LocationPropertyValidator)(properties.bodyS3Location)),errors.collect(cdk.propertyValidator("corsConfiguration",CfnApiV2_CorsPropertyValidator)(properties.corsConfiguration)),errors.collect(cdk.propertyValidator("credentialsArn",cdk.validateString)(properties.credentialsArn)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("disableSchemaValidation",cdk.validateBoolean)(properties.disableSchemaValidation)),errors.collect(cdk.propertyValidator("failOnWarnings",cdk.validateBoolean)(properties.failOnWarnings)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("protocolType",cdk.validateString)(properties.protocolType)),errors.collect(cdk.propertyValidator("routeKey",cdk.validateString)(properties.routeKey)),errors.collect(cdk.propertyValidator("routeSelectionExpression",cdk.validateString)(properties.routeSelectionExpression)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.collect(cdk.propertyValidator("target",cdk.validateString)(properties.target)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "CfnApiV2Props"')}function cfnApiV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnApiV2PropsValidator(properties).assertSuccess(),{ApiKeySelectionExpression:cdk.stringToCloudFormation(properties.apiKeySelectionExpression),BasePath:cdk.stringToCloudFormation(properties.basePath),Body:cdk.objectToCloudFormation(properties.body),BodyS3Location:cfnApiV2BodyS3LocationPropertyToCloudFormation(properties.bodyS3Location),CorsConfiguration:cfnApiV2CorsPropertyToCloudFormation(properties.corsConfiguration),CredentialsArn:cdk.stringToCloudFormation(properties.credentialsArn),Description:cdk.stringToCloudFormation(properties.description),DisableSchemaValidation:cdk.booleanToCloudFormation(properties.disableSchemaValidation),FailOnWarnings:cdk.booleanToCloudFormation(properties.failOnWarnings),Name:cdk.stringToCloudFormation(properties.name),ProtocolType:cdk.stringToCloudFormation(properties.protocolType),RouteKey:cdk.stringToCloudFormation(properties.routeKey),RouteSelectionExpression:cdk.stringToCloudFormation(properties.routeSelectionExpression),Tags:cdk.objectToCloudFormation(properties.tags),Target:cdk.stringToCloudFormation(properties.target),Version:cdk.stringToCloudFormation(properties.version)}):properties}class CfnApiV2 extends cdk.CfnResource{constructor(scope,id,props={}){super(scope,id,{type:CfnApiV2.CFN_RESOURCE_TYPE_NAME,properties:props}),this.apiKeySelectionExpression=props.apiKeySelectionExpression,this.basePath=props.basePath,this.body=props.body,this.bodyS3Location=props.bodyS3Location,this.corsConfiguration=props.corsConfiguration,this.credentialsArn=props.credentialsArn,this.description=props.description,this.disableSchemaValidation=props.disableSchemaValidation,this.failOnWarnings=props.failOnWarnings,this.name=props.name,this.protocolType=props.protocolType,this.routeKey=props.routeKey,this.routeSelectionExpression=props.routeSelectionExpression,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::ApiGatewayV2::Api",props.tags,{tagPropertyName:"tags"}),this.target=props.target,this.version=props.version}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnApiV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiKeySelectionExpression:this.apiKeySelectionExpression,basePath:this.basePath,body:this.body,bodyS3Location:this.bodyS3Location,corsConfiguration:this.corsConfiguration,credentialsArn:this.credentialsArn,description:this.description,disableSchemaValidation:this.disableSchemaValidation,failOnWarnings:this.failOnWarnings,name:this.name,protocolType:this.protocolType,routeKey:this.routeKey,routeSelectionExpression:this.routeSelectionExpression,tags:this.tags.renderTags(),target:this.target,version:this.version}}renderProperties(props){return cfnApiV2PropsToCloudFormation(props)}}exports.CfnApiV2=CfnApiV2,_a=JSII_RTTI_SYMBOL_1,CfnApiV2[_a]={fqn:"aws-cdk-lib.aws_apigateway.CfnApiV2",version:"2.94.0"},CfnApiV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Api";function CfnApiV2_BodyS3LocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("bucket",cdk.validateString)(properties.bucket)),errors.collect(cdk.propertyValidator("etag",cdk.validateString)(properties.etag)),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("version",cdk.validateString)(properties.version)),errors.wrap('supplied properties not correct for "BodyS3LocationProperty"')}function cfnApiV2BodyS3LocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnApiV2_BodyS3LocationPropertyValidator(properties).assertSuccess(),{Bucket:cdk.stringToCloudFormation(properties.bucket),Etag:cdk.stringToCloudFormation(properties.etag),Key:cdk.stringToCloudFormation(properties.key),Version:cdk.stringToCloudFormation(properties.version)}):properties}function CfnApiV2_CorsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("allowCredentials",cdk.validateBoolean)(properties.allowCredentials)),errors.collect(cdk.propertyValidator("allowHeaders",cdk.listValidator(cdk.validateString))(properties.allowHeaders)),errors.collect(cdk.propertyValidator("allowMethods",cdk.listValidator(cdk.validateString))(properties.allowMethods)),errors.collect(cdk.propertyValidator("allowOrigins",cdk.listValidator(cdk.validateString))(properties.allowOrigins)),errors.collect(cdk.propertyValidator("exposeHeaders",cdk.listValidator(cdk.validateString))(properties.exposeHeaders)),errors.collect(cdk.propertyValidator("maxAge",cdk.validateNumber)(properties.maxAge)),errors.wrap('supplied properties not correct for "CorsProperty"')}function cfnApiV2CorsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnApiV2_CorsPropertyValidator(properties).assertSuccess(),{AllowCredentials:cdk.booleanToCloudFormation(properties.allowCredentials),AllowHeaders:cdk.listMapper(cdk.stringToCloudFormation)(properties.allowHeaders),AllowMethods:cdk.listMapper(cdk.stringToCloudFormation)(properties.allowMethods),AllowOrigins:cdk.listMapper(cdk.stringToCloudFormation)(properties.allowOrigins),ExposeHeaders:cdk.listMapper(cdk.stringToCloudFormation)(properties.exposeHeaders),MaxAge:cdk.numberToCloudFormation(properties.maxAge)}):properties}function CfnApiMappingV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("apiMappingKey",cdk.validateString)(properties.apiMappingKey)),errors.collect(cdk.propertyValidator("domainName",cdk.requiredValidator)(properties.domainName)),errors.collect(cdk.propertyValidator("domainName",cdk.validateString)(properties.domainName)),errors.collect(cdk.propertyValidator("stage",cdk.requiredValidator)(properties.stage)),errors.collect(cdk.propertyValidator("stage",cdk.validateString)(properties.stage)),errors.wrap('supplied properties not correct for "CfnApiMappingV2Props"')}function cfnApiMappingV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnApiMappingV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),DomainName:cdk.stringToCloudFormation(properties.domainName),Stage:cdk.stringToCloudFormation(properties.stage),ApiMappingKey:cdk.stringToCloudFormation(properties.apiMappingKey)}):properties}class CfnApiMappingV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnApiMappingV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"domainName",this),cdk.requireProperty(props,"stage",this),this.apiId=props.apiId,this.domainName=props.domainName,this.stage=props.stage,this.apiMappingKey=props.apiMappingKey}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnApiMappingV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,domainName:this.domainName,stage:this.stage,apiMappingKey:this.apiMappingKey}}renderProperties(props){return cfnApiMappingV2PropsToCloudFormation(props)}}exports.CfnApiMappingV2=CfnApiMappingV2,_b=JSII_RTTI_SYMBOL_1,CfnApiMappingV2[_b]={fqn:"aws-cdk-lib.aws_apigateway.CfnApiMappingV2",version:"2.94.0"},CfnApiMappingV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::ApiMapping";function CfnAuthorizerV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("authorizerCredentialsArn",cdk.validateString)(properties.authorizerCredentialsArn)),errors.collect(cdk.propertyValidator("authorizerResultTtlInSeconds",cdk.validateNumber)(properties.authorizerResultTtlInSeconds)),errors.collect(cdk.propertyValidator("authorizerType",cdk.requiredValidator)(properties.authorizerType)),errors.collect(cdk.propertyValidator("authorizerType",cdk.validateString)(properties.authorizerType)),errors.collect(cdk.propertyValidator("authorizerUri",cdk.validateString)(properties.authorizerUri)),errors.collect(cdk.propertyValidator("identitySource",cdk.requiredValidator)(properties.identitySource)),errors.collect(cdk.propertyValidator("identitySource",cdk.listValidator(cdk.validateString))(properties.identitySource)),errors.collect(cdk.propertyValidator("identityValidationExpression",cdk.validateString)(properties.identityValidationExpression)),errors.collect(cdk.propertyValidator("jwtConfiguration",CfnAuthorizerV2_JWTConfigurationPropertyValidator)(properties.jwtConfiguration)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "CfnAuthorizerV2Props"')}function cfnAuthorizerV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAuthorizerV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),AuthorizerType:cdk.stringToCloudFormation(properties.authorizerType),IdentitySource:cdk.listMapper(cdk.stringToCloudFormation)(properties.identitySource),Name:cdk.stringToCloudFormation(properties.name),AuthorizerCredentialsArn:cdk.stringToCloudFormation(properties.authorizerCredentialsArn),AuthorizerResultTtlInSeconds:cdk.numberToCloudFormation(properties.authorizerResultTtlInSeconds),AuthorizerUri:cdk.stringToCloudFormation(properties.authorizerUri),IdentityValidationExpression:cdk.stringToCloudFormation(properties.identityValidationExpression),JwtConfiguration:cfnAuthorizerV2JWTConfigurationPropertyToCloudFormation(properties.jwtConfiguration)}):properties}class CfnAuthorizerV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnAuthorizerV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"authorizerType",this),cdk.requireProperty(props,"identitySource",this),cdk.requireProperty(props,"name",this),this.apiId=props.apiId,this.authorizerType=props.authorizerType,this.identitySource=props.identitySource,this.name=props.name,this.authorizerCredentialsArn=props.authorizerCredentialsArn,this.authorizerResultTtlInSeconds=props.authorizerResultTtlInSeconds,this.authorizerUri=props.authorizerUri,this.identityValidationExpression=props.identityValidationExpression,this.jwtConfiguration=props.jwtConfiguration}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnAuthorizerV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,authorizerType:this.authorizerType,identitySource:this.identitySource,name:this.name,authorizerCredentialsArn:this.authorizerCredentialsArn,authorizerResultTtlInSeconds:this.authorizerResultTtlInSeconds,authorizerUri:this.authorizerUri,identityValidationExpression:this.identityValidationExpression,jwtConfiguration:this.jwtConfiguration}}renderProperties(props){return cfnAuthorizerV2PropsToCloudFormation(props)}}exports.CfnAuthorizerV2=CfnAuthorizerV2,_c=JSII_RTTI_SYMBOL_1,CfnAuthorizerV2[_c]={fqn:"aws-cdk-lib.aws_apigateway.CfnAuthorizerV2",version:"2.94.0"},CfnAuthorizerV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Authorizer";function CfnAuthorizerV2_JWTConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("audience",cdk.listValidator(cdk.validateString))(properties.audience)),errors.collect(cdk.propertyValidator("issuer",cdk.validateString)(properties.issuer)),errors.wrap('supplied properties not correct for "JWTConfigurationProperty"')}function cfnAuthorizerV2JWTConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAuthorizerV2_JWTConfigurationPropertyValidator(properties).assertSuccess(),{Audience:cdk.listMapper(cdk.stringToCloudFormation)(properties.audience),Issuer:cdk.stringToCloudFormation(properties.issuer)}):properties}function CfnDeploymentV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("stageName",cdk.validateString)(properties.stageName)),errors.wrap('supplied properties not correct for "CfnDeploymentV2Props"')}function cfnDeploymentV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDeploymentV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),Description:cdk.stringToCloudFormation(properties.description),StageName:cdk.stringToCloudFormation(properties.stageName)}):properties}class CfnDeploymentV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnDeploymentV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),this.apiId=props.apiId,this.description=props.description,this.stageName=props.stageName}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnDeploymentV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,description:this.description,stageName:this.stageName}}renderProperties(props){return cfnDeploymentV2PropsToCloudFormation(props)}}exports.CfnDeploymentV2=CfnDeploymentV2,_d=JSII_RTTI_SYMBOL_1,CfnDeploymentV2[_d]={fqn:"aws-cdk-lib.aws_apigateway.CfnDeploymentV2",version:"2.94.0"},CfnDeploymentV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Deployment";function CfnDomainNameV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("domainName",cdk.requiredValidator)(properties.domainName)),errors.collect(cdk.propertyValidator("domainName",cdk.validateString)(properties.domainName)),errors.collect(cdk.propertyValidator("domainNameConfigurations",cdk.listValidator(CfnDomainNameV2_DomainNameConfigurationPropertyValidator))(properties.domainNameConfigurations)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.wrap('supplied properties not correct for "CfnDomainNameV2Props"')}function cfnDomainNameV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDomainNameV2PropsValidator(properties).assertSuccess(),{DomainName:cdk.stringToCloudFormation(properties.domainName),DomainNameConfigurations:cdk.listMapper(cfnDomainNameV2DomainNameConfigurationPropertyToCloudFormation)(properties.domainNameConfigurations),Tags:cdk.objectToCloudFormation(properties.tags)}):properties}class CfnDomainNameV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnDomainNameV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"domainName",this),this.attrRegionalDomainName=cdk.Token.asString(this.getAtt("RegionalDomainName")),this.attrRegionalHostedZoneId=cdk.Token.asString(this.getAtt("RegionalHostedZoneId")),this.domainName=props.domainName,this.domainNameConfigurations=props.domainNameConfigurations,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::ApiGatewayV2::DomainName",props.tags,{tagPropertyName:"tags"})}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnDomainNameV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{domainName:this.domainName,domainNameConfigurations:this.domainNameConfigurations,tags:this.tags.renderTags()}}renderProperties(props){return cfnDomainNameV2PropsToCloudFormation(props)}}exports.CfnDomainNameV2=CfnDomainNameV2,_e=JSII_RTTI_SYMBOL_1,CfnDomainNameV2[_e]={fqn:"aws-cdk-lib.aws_apigateway.CfnDomainNameV2",version:"2.94.0"},CfnDomainNameV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::DomainName";function CfnDomainNameV2_DomainNameConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("certificateArn",cdk.validateString)(properties.certificateArn)),errors.collect(cdk.propertyValidator("certificateName",cdk.validateString)(properties.certificateName)),errors.collect(cdk.propertyValidator("endpointType",cdk.validateString)(properties.endpointType)),errors.wrap('supplied properties not correct for "DomainNameConfigurationProperty"')}function cfnDomainNameV2DomainNameConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDomainNameV2_DomainNameConfigurationPropertyValidator(properties).assertSuccess(),{CertificateArn:cdk.stringToCloudFormation(properties.certificateArn),CertificateName:cdk.stringToCloudFormation(properties.certificateName),EndpointType:cdk.stringToCloudFormation(properties.endpointType)}):properties}function CfnIntegrationV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("connectionType",cdk.validateString)(properties.connectionType)),errors.collect(cdk.propertyValidator("contentHandlingStrategy",cdk.validateString)(properties.contentHandlingStrategy)),errors.collect(cdk.propertyValidator("credentialsArn",cdk.validateString)(properties.credentialsArn)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("integrationMethod",cdk.validateString)(properties.integrationMethod)),errors.collect(cdk.propertyValidator("integrationType",cdk.requiredValidator)(properties.integrationType)),errors.collect(cdk.propertyValidator("integrationType",cdk.validateString)(properties.integrationType)),errors.collect(cdk.propertyValidator("integrationUri",cdk.validateString)(properties.integrationUri)),errors.collect(cdk.propertyValidator("passthroughBehavior",cdk.validateString)(properties.passthroughBehavior)),errors.collect(cdk.propertyValidator("payloadFormatVersion",cdk.validateString)(properties.payloadFormatVersion)),errors.collect(cdk.propertyValidator("requestParameters",cdk.validateObject)(properties.requestParameters)),errors.collect(cdk.propertyValidator("requestTemplates",cdk.validateObject)(properties.requestTemplates)),errors.collect(cdk.propertyValidator("templateSelectionExpression",cdk.validateString)(properties.templateSelectionExpression)),errors.collect(cdk.propertyValidator("timeoutInMillis",cdk.validateNumber)(properties.timeoutInMillis)),errors.wrap('supplied properties not correct for "CfnIntegrationV2Props"')}function cfnIntegrationV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnIntegrationV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),IntegrationType:cdk.stringToCloudFormation(properties.integrationType),ConnectionType:cdk.stringToCloudFormation(properties.connectionType),ContentHandlingStrategy:cdk.stringToCloudFormation(properties.contentHandlingStrategy),CredentialsArn:cdk.stringToCloudFormation(properties.credentialsArn),Description:cdk.stringToCloudFormation(properties.description),IntegrationMethod:cdk.stringToCloudFormation(properties.integrationMethod),IntegrationUri:cdk.stringToCloudFormation(properties.integrationUri),PassthroughBehavior:cdk.stringToCloudFormation(properties.passthroughBehavior),PayloadFormatVersion:cdk.stringToCloudFormation(properties.payloadFormatVersion),RequestParameters:cdk.objectToCloudFormation(properties.requestParameters),RequestTemplates:cdk.objectToCloudFormation(properties.requestTemplates),TemplateSelectionExpression:cdk.stringToCloudFormation(properties.templateSelectionExpression),TimeoutInMillis:cdk.numberToCloudFormation(properties.timeoutInMillis)}):properties}class CfnIntegrationV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnIntegrationV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"integrationType",this),this.apiId=props.apiId,this.integrationType=props.integrationType,this.connectionType=props.connectionType,this.contentHandlingStrategy=props.contentHandlingStrategy,this.credentialsArn=props.credentialsArn,this.description=props.description,this.integrationMethod=props.integrationMethod,this.integrationUri=props.integrationUri,this.passthroughBehavior=props.passthroughBehavior,this.payloadFormatVersion=props.payloadFormatVersion,this.requestParameters=props.requestParameters,this.requestTemplates=props.requestTemplates,this.templateSelectionExpression=props.templateSelectionExpression,this.timeoutInMillis=props.timeoutInMillis}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnIntegrationV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,integrationType:this.integrationType,connectionType:this.connectionType,contentHandlingStrategy:this.contentHandlingStrategy,credentialsArn:this.credentialsArn,description:this.description,integrationMethod:this.integrationMethod,integrationUri:this.integrationUri,passthroughBehavior:this.passthroughBehavior,payloadFormatVersion:this.payloadFormatVersion,requestParameters:this.requestParameters,requestTemplates:this.requestTemplates,templateSelectionExpression:this.templateSelectionExpression,timeoutInMillis:this.timeoutInMillis}}renderProperties(props){return cfnIntegrationV2PropsToCloudFormation(props)}}exports.CfnIntegrationV2=CfnIntegrationV2,_f=JSII_RTTI_SYMBOL_1,CfnIntegrationV2[_f]={fqn:"aws-cdk-lib.aws_apigateway.CfnIntegrationV2",version:"2.94.0"},CfnIntegrationV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Integration";function CfnIntegrationResponseV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("contentHandlingStrategy",cdk.validateString)(properties.contentHandlingStrategy)),errors.collect(cdk.propertyValidator("integrationId",cdk.requiredValidator)(properties.integrationId)),errors.collect(cdk.propertyValidator("integrationId",cdk.validateString)(properties.integrationId)),errors.collect(cdk.propertyValidator("integrationResponseKey",cdk.requiredValidator)(properties.integrationResponseKey)),errors.collect(cdk.propertyValidator("integrationResponseKey",cdk.validateString)(properties.integrationResponseKey)),errors.collect(cdk.propertyValidator("responseParameters",cdk.validateObject)(properties.responseParameters)),errors.collect(cdk.propertyValidator("responseTemplates",cdk.validateObject)(properties.responseTemplates)),errors.collect(cdk.propertyValidator("templateSelectionExpression",cdk.validateString)(properties.templateSelectionExpression)),errors.wrap('supplied properties not correct for "CfnIntegrationResponseV2Props"')}function cfnIntegrationResponseV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnIntegrationResponseV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),IntegrationId:cdk.stringToCloudFormation(properties.integrationId),IntegrationResponseKey:cdk.stringToCloudFormation(properties.integrationResponseKey),ContentHandlingStrategy:cdk.stringToCloudFormation(properties.contentHandlingStrategy),ResponseParameters:cdk.objectToCloudFormation(properties.responseParameters),ResponseTemplates:cdk.objectToCloudFormation(properties.responseTemplates),TemplateSelectionExpression:cdk.stringToCloudFormation(properties.templateSelectionExpression)}):properties}class CfnIntegrationResponseV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnIntegrationResponseV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"integrationId",this),cdk.requireProperty(props,"integrationResponseKey",this),this.apiId=props.apiId,this.integrationId=props.integrationId,this.integrationResponseKey=props.integrationResponseKey,this.contentHandlingStrategy=props.contentHandlingStrategy,this.responseParameters=props.responseParameters,this.responseTemplates=props.responseTemplates,this.templateSelectionExpression=props.templateSelectionExpression}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnIntegrationResponseV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,integrationId:this.integrationId,integrationResponseKey:this.integrationResponseKey,contentHandlingStrategy:this.contentHandlingStrategy,responseParameters:this.responseParameters,responseTemplates:this.responseTemplates,templateSelectionExpression:this.templateSelectionExpression}}renderProperties(props){return cfnIntegrationResponseV2PropsToCloudFormation(props)}}exports.CfnIntegrationResponseV2=CfnIntegrationResponseV2,_g=JSII_RTTI_SYMBOL_1,CfnIntegrationResponseV2[_g]={fqn:"aws-cdk-lib.aws_apigateway.CfnIntegrationResponseV2",version:"2.94.0"},CfnIntegrationResponseV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::IntegrationResponse";function CfnModelV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("contentType",cdk.validateString)(properties.contentType)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("schema",cdk.requiredValidator)(properties.schema)),errors.collect(cdk.propertyValidator("schema",cdk.validateObject)(properties.schema)),errors.wrap('supplied properties not correct for "CfnModelV2Props"')}function cfnModelV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnModelV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),Name:cdk.stringToCloudFormation(properties.name),Schema:cdk.objectToCloudFormation(properties.schema),ContentType:cdk.stringToCloudFormation(properties.contentType),Description:cdk.stringToCloudFormation(properties.description)}):properties}class CfnModelV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnModelV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"schema",this),this.apiId=props.apiId,this.name=props.name,this.schema=props.schema,this.contentType=props.contentType,this.description=props.description}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnModelV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,name:this.name,schema:this.schema,contentType:this.contentType,description:this.description}}renderProperties(props){return cfnModelV2PropsToCloudFormation(props)}}exports.CfnModelV2=CfnModelV2,_h=JSII_RTTI_SYMBOL_1,CfnModelV2[_h]={fqn:"aws-cdk-lib.aws_apigateway.CfnModelV2",version:"2.94.0"},CfnModelV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Model";function CfnRouteV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("apiKeyRequired",cdk.validateBoolean)(properties.apiKeyRequired)),errors.collect(cdk.propertyValidator("authorizationScopes",cdk.listValidator(cdk.validateString))(properties.authorizationScopes)),errors.collect(cdk.propertyValidator("authorizationType",cdk.validateString)(properties.authorizationType)),errors.collect(cdk.propertyValidator("authorizerId",cdk.validateString)(properties.authorizerId)),errors.collect(cdk.propertyValidator("modelSelectionExpression",cdk.validateString)(properties.modelSelectionExpression)),errors.collect(cdk.propertyValidator("operationName",cdk.validateString)(properties.operationName)),errors.collect(cdk.propertyValidator("requestModels",cdk.validateObject)(properties.requestModels)),errors.collect(cdk.propertyValidator("requestParameters",cdk.validateObject)(properties.requestParameters)),errors.collect(cdk.propertyValidator("routeKey",cdk.requiredValidator)(properties.routeKey)),errors.collect(cdk.propertyValidator("routeKey",cdk.validateString)(properties.routeKey)),errors.collect(cdk.propertyValidator("routeResponseSelectionExpression",cdk.validateString)(properties.routeResponseSelectionExpression)),errors.collect(cdk.propertyValidator("target",cdk.validateString)(properties.target)),errors.wrap('supplied properties not correct for "CfnRouteV2Props"')}function cfnRouteV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRouteV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),RouteKey:cdk.stringToCloudFormation(properties.routeKey),ApiKeyRequired:cdk.booleanToCloudFormation(properties.apiKeyRequired),AuthorizationScopes:cdk.listMapper(cdk.stringToCloudFormation)(properties.authorizationScopes),AuthorizationType:cdk.stringToCloudFormation(properties.authorizationType),AuthorizerId:cdk.stringToCloudFormation(properties.authorizerId),ModelSelectionExpression:cdk.stringToCloudFormation(properties.modelSelectionExpression),OperationName:cdk.stringToCloudFormation(properties.operationName),RequestModels:cdk.objectToCloudFormation(properties.requestModels),RequestParameters:cdk.objectToCloudFormation(properties.requestParameters),RouteResponseSelectionExpression:cdk.stringToCloudFormation(properties.routeResponseSelectionExpression),Target:cdk.stringToCloudFormation(properties.target)}):properties}class CfnRouteV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnRouteV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"routeKey",this),this.apiId=props.apiId,this.routeKey=props.routeKey,this.apiKeyRequired=props.apiKeyRequired,this.authorizationScopes=props.authorizationScopes,this.authorizationType=props.authorizationType,this.authorizerId=props.authorizerId,this.modelSelectionExpression=props.modelSelectionExpression,this.operationName=props.operationName,this.requestModels=props.requestModels,this.requestParameters=props.requestParameters,this.routeResponseSelectionExpression=props.routeResponseSelectionExpression,this.target=props.target}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnRouteV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,routeKey:this.routeKey,apiKeyRequired:this.apiKeyRequired,authorizationScopes:this.authorizationScopes,authorizationType:this.authorizationType,authorizerId:this.authorizerId,modelSelectionExpression:this.modelSelectionExpression,operationName:this.operationName,requestModels:this.requestModels,requestParameters:this.requestParameters,routeResponseSelectionExpression:this.routeResponseSelectionExpression,target:this.target}}renderProperties(props){return cfnRouteV2PropsToCloudFormation(props)}}exports.CfnRouteV2=CfnRouteV2,_j=JSII_RTTI_SYMBOL_1,CfnRouteV2[_j]={fqn:"aws-cdk-lib.aws_apigateway.CfnRouteV2",version:"2.94.0"},CfnRouteV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Route";function CfnRouteV2_ParameterConstraintsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("required",cdk.requiredValidator)(properties.required)),errors.collect(cdk.propertyValidator("required",cdk.validateBoolean)(properties.required)),errors.wrap('supplied properties not correct for "ParameterConstraintsProperty"')}function cfnRouteV2ParameterConstraintsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRouteV2_ParameterConstraintsPropertyValidator(properties).assertSuccess(),{Required:cdk.booleanToCloudFormation(properties.required)}):properties}function CfnRouteResponseV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("modelSelectionExpression",cdk.validateString)(properties.modelSelectionExpression)),errors.collect(cdk.propertyValidator("responseModels",cdk.validateObject)(properties.responseModels)),errors.collect(cdk.propertyValidator("responseParameters",cdk.validateObject)(properties.responseParameters)),errors.collect(cdk.propertyValidator("routeId",cdk.requiredValidator)(properties.routeId)),errors.collect(cdk.propertyValidator("routeId",cdk.validateString)(properties.routeId)),errors.collect(cdk.propertyValidator("routeResponseKey",cdk.requiredValidator)(properties.routeResponseKey)),errors.collect(cdk.propertyValidator("routeResponseKey",cdk.validateString)(properties.routeResponseKey)),errors.wrap('supplied properties not correct for "CfnRouteResponseV2Props"')}function cfnRouteResponseV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRouteResponseV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),RouteId:cdk.stringToCloudFormation(properties.routeId),RouteResponseKey:cdk.stringToCloudFormation(properties.routeResponseKey),ModelSelectionExpression:cdk.stringToCloudFormation(properties.modelSelectionExpression),ResponseModels:cdk.objectToCloudFormation(properties.responseModels),ResponseParameters:cdk.objectToCloudFormation(properties.responseParameters)}):properties}class CfnRouteResponseV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnRouteResponseV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"routeId",this),cdk.requireProperty(props,"routeResponseKey",this),this.apiId=props.apiId,this.routeId=props.routeId,this.routeResponseKey=props.routeResponseKey,this.modelSelectionExpression=props.modelSelectionExpression,this.responseModels=props.responseModels,this.responseParameters=props.responseParameters}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnRouteResponseV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,routeId:this.routeId,routeResponseKey:this.routeResponseKey,modelSelectionExpression:this.modelSelectionExpression,responseModels:this.responseModels,responseParameters:this.responseParameters}}renderProperties(props){return cfnRouteResponseV2PropsToCloudFormation(props)}}exports.CfnRouteResponseV2=CfnRouteResponseV2,_k=JSII_RTTI_SYMBOL_1,CfnRouteResponseV2[_k]={fqn:"aws-cdk-lib.aws_apigateway.CfnRouteResponseV2",version:"2.94.0"},CfnRouteResponseV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::RouteResponse";function CfnRouteResponseV2_ParameterConstraintsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("required",cdk.requiredValidator)(properties.required)),errors.collect(cdk.propertyValidator("required",cdk.validateBoolean)(properties.required)),errors.wrap('supplied properties not correct for "ParameterConstraintsProperty"')}function cfnRouteResponseV2ParameterConstraintsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRouteResponseV2_ParameterConstraintsPropertyValidator(properties).assertSuccess(),{Required:cdk.booleanToCloudFormation(properties.required)}):properties}function CfnStageV2PropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("accessLogSettings",CfnStageV2_AccessLogSettingsPropertyValidator)(properties.accessLogSettings)),errors.collect(cdk.propertyValidator("apiId",cdk.requiredValidator)(properties.apiId)),errors.collect(cdk.propertyValidator("apiId",cdk.validateString)(properties.apiId)),errors.collect(cdk.propertyValidator("autoDeploy",cdk.validateBoolean)(properties.autoDeploy)),errors.collect(cdk.propertyValidator("clientCertificateId",cdk.validateString)(properties.clientCertificateId)),errors.collect(cdk.propertyValidator("defaultRouteSettings",CfnStageV2_RouteSettingsPropertyValidator)(properties.defaultRouteSettings)),errors.collect(cdk.propertyValidator("deploymentId",cdk.validateString)(properties.deploymentId)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("routeSettings",cdk.validateObject)(properties.routeSettings)),errors.collect(cdk.propertyValidator("stageName",cdk.requiredValidator)(properties.stageName)),errors.collect(cdk.propertyValidator("stageName",cdk.validateString)(properties.stageName)),errors.collect(cdk.propertyValidator("stageVariables",cdk.validateObject)(properties.stageVariables)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.wrap('supplied properties not correct for "CfnStageV2Props"')}function cfnStageV2PropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStageV2PropsValidator(properties).assertSuccess(),{ApiId:cdk.stringToCloudFormation(properties.apiId),StageName:cdk.stringToCloudFormation(properties.stageName),AccessLogSettings:cfnStageV2AccessLogSettingsPropertyToCloudFormation(properties.accessLogSettings),AutoDeploy:cdk.booleanToCloudFormation(properties.autoDeploy),ClientCertificateId:cdk.stringToCloudFormation(properties.clientCertificateId),DefaultRouteSettings:cfnStageV2RouteSettingsPropertyToCloudFormation(properties.defaultRouteSettings),DeploymentId:cdk.stringToCloudFormation(properties.deploymentId),Description:cdk.stringToCloudFormation(properties.description),RouteSettings:cdk.objectToCloudFormation(properties.routeSettings),StageVariables:cdk.objectToCloudFormation(properties.stageVariables),Tags:cdk.objectToCloudFormation(properties.tags)}):properties}class CfnStageV2 extends cdk.CfnResource{constructor(scope,id,props){super(scope,id,{type:CfnStageV2.CFN_RESOURCE_TYPE_NAME,properties:props}),cdk.requireProperty(props,"apiId",this),cdk.requireProperty(props,"stageName",this),this.apiId=props.apiId,this.stageName=props.stageName,this.accessLogSettings=props.accessLogSettings,this.autoDeploy=props.autoDeploy,this.clientCertificateId=props.clientCertificateId,this.defaultRouteSettings=props.defaultRouteSettings,this.deploymentId=props.deploymentId,this.description=props.description,this.routeSettings=props.routeSettings,this.stageVariables=props.stageVariables,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::ApiGatewayV2::Stage",props.tags,{tagPropertyName:"tags"})}inspect(inspector){inspector.addAttribute("aws:cdk:cloudformation:type",CfnStageV2.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}get cfnProperties(){return{apiId:this.apiId,stageName:this.stageName,accessLogSettings:this.accessLogSettings,autoDeploy:this.autoDeploy,clientCertificateId:this.clientCertificateId,defaultRouteSettings:this.defaultRouteSettings,deploymentId:this.deploymentId,description:this.description,routeSettings:this.routeSettings,stageVariables:this.stageVariables,tags:this.tags.renderTags()}}renderProperties(props){return cfnStageV2PropsToCloudFormation(props)}}exports.CfnStageV2=CfnStageV2,_l=JSII_RTTI_SYMBOL_1,CfnStageV2[_l]={fqn:"aws-cdk-lib.aws_apigateway.CfnStageV2",version:"2.94.0"},CfnStageV2.CFN_RESOURCE_TYPE_NAME="AWS::ApiGatewayV2::Stage";function CfnStageV2_AccessLogSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("destinationArn",cdk.validateString)(properties.destinationArn)),errors.collect(cdk.propertyValidator("format",cdk.validateString)(properties.format)),errors.wrap('supplied properties not correct for "AccessLogSettingsProperty"')}function cfnStageV2AccessLogSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStageV2_AccessLogSettingsPropertyValidator(properties).assertSuccess(),{DestinationArn:cdk.stringToCloudFormation(properties.destinationArn),Format:cdk.stringToCloudFormation(properties.format)}):properties}function CfnStageV2_RouteSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return errors.collect(cdk.propertyValidator("dataTraceEnabled",cdk.validateBoolean)(properties.dataTraceEnabled)),errors.collect(cdk.propertyValidator("detailedMetricsEnabled",cdk.validateBoolean)(properties.detailedMetricsEnabled)),errors.collect(cdk.propertyValidator("loggingLevel",cdk.validateString)(properties.loggingLevel)),errors.collect(cdk.propertyValidator("throttlingBurstLimit",cdk.validateNumber)(properties.throttlingBurstLimit)),errors.collect(cdk.propertyValidator("throttlingRateLimit",cdk.validateNumber)(properties.throttlingRateLimit)),errors.wrap('supplied properties not correct for "RouteSettingsProperty"')}function cfnStageV2RouteSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStageV2_RouteSettingsPropertyValidator(properties).assertSuccess(),{DataTraceEnabled:cdk.booleanToCloudFormation(properties.dataTraceEnabled),DetailedMetricsEnabled:cdk.booleanToCloudFormation(properties.detailedMetricsEnabled),LoggingLevel:cdk.stringToCloudFormation(properties.loggingLevel),ThrottlingBurstLimit:cdk.numberToCloudFormation(properties.throttlingBurstLimit),ThrottlingRateLimit:cdk.numberToCloudFormation(properties.throttlingRateLimit)}):properties}
