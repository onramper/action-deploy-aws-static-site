"use strict";var _a,_b,_c,_d,_e,_f,_g;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnReplicationTask=exports.CfnReplicationSubnetGroup=exports.CfnReplicationInstance=exports.CfnReplicationConfig=exports.CfnEventSubscription=exports.CfnEndpoint=exports.CfnCertificate=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCertificate extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCertificatePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCertificate(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnCertificate.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnCertificateProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCertificate),error}this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.certificateIdentifier=props.certificateIdentifier,this.certificatePem=props.certificatePem,this.certificateWallet=props.certificateWallet}get cfnProperties(){return{certificateIdentifier:this.certificateIdentifier,certificatePem:this.certificatePem,certificateWallet:this.certificateWallet}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCertificate.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCertificatePropsToCloudFormation(props)}}exports.CfnCertificate=CfnCertificate,_a=JSII_RTTI_SYMBOL_1,CfnCertificate[_a]={fqn:"aws-cdk-lib.aws_dms.CfnCertificate",version:"2.94.0"},CfnCertificate.CFN_RESOURCE_TYPE_NAME="AWS::DMS::Certificate";function CfnCertificatePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificateIdentifier",cdk.validateString)(properties.certificateIdentifier)),errors.collect(cdk.propertyValidator("certificatePem",cdk.validateString)(properties.certificatePem)),errors.collect(cdk.propertyValidator("certificateWallet",cdk.validateString)(properties.certificateWallet)),errors.wrap('supplied properties not correct for "CfnCertificateProps"')}function convertCfnCertificatePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCertificatePropsValidator(properties).assertSuccess(),{CertificateIdentifier:cdk.stringToCloudFormation(properties.certificateIdentifier),CertificatePem:cdk.stringToCloudFormation(properties.certificatePem),CertificateWallet:cdk.stringToCloudFormation(properties.certificateWallet)}):properties}function CfnCertificatePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateIdentifier","CertificateIdentifier",properties.CertificateIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateIdentifier):void 0),ret.addPropertyResult("certificatePem","CertificatePem",properties.CertificatePem!=null?cfn_parse.FromCloudFormation.getString(properties.CertificatePem):void 0),ret.addPropertyResult("certificateWallet","CertificateWallet",properties.CertificateWallet!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateWallet):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEndpoint extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEndpointPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEndpoint(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEndpoint.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnEndpointProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEndpoint),error}cdk.requireProperty(props,"endpointType",this),cdk.requireProperty(props,"engineName",this),this.attrExternalId=cdk.Token.asString(this.getAtt("ExternalId",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.certificateArn=props.certificateArn,this.databaseName=props.databaseName,this.docDbSettings=props.docDbSettings,this.dynamoDbSettings=props.dynamoDbSettings,this.elasticsearchSettings=props.elasticsearchSettings,this.endpointIdentifier=props.endpointIdentifier,this.endpointType=props.endpointType,this.engineName=props.engineName,this.extraConnectionAttributes=props.extraConnectionAttributes,this.gcpMySqlSettings=props.gcpMySqlSettings,this.ibmDb2Settings=props.ibmDb2Settings,this.kafkaSettings=props.kafkaSettings,this.kinesisSettings=props.kinesisSettings,this.kmsKeyId=props.kmsKeyId,this.microsoftSqlServerSettings=props.microsoftSqlServerSettings,this.mongoDbSettings=props.mongoDbSettings,this.mySqlSettings=props.mySqlSettings,this.neptuneSettings=props.neptuneSettings,this.oracleSettings=props.oracleSettings,this.password=props.password,this.port=props.port,this.postgreSqlSettings=props.postgreSqlSettings,this.redisSettings=props.redisSettings,this.redshiftSettings=props.redshiftSettings,this.resourceIdentifier=props.resourceIdentifier,this.s3Settings=props.s3Settings,this.serverName=props.serverName,this.sslMode=props.sslMode,this.sybaseSettings=props.sybaseSettings,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DMS::Endpoint",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.username=props.username}get cfnProperties(){return{certificateArn:this.certificateArn,databaseName:this.databaseName,docDbSettings:this.docDbSettings,dynamoDbSettings:this.dynamoDbSettings,elasticsearchSettings:this.elasticsearchSettings,endpointIdentifier:this.endpointIdentifier,endpointType:this.endpointType,engineName:this.engineName,extraConnectionAttributes:this.extraConnectionAttributes,gcpMySqlSettings:this.gcpMySqlSettings,ibmDb2Settings:this.ibmDb2Settings,kafkaSettings:this.kafkaSettings,kinesisSettings:this.kinesisSettings,kmsKeyId:this.kmsKeyId,microsoftSqlServerSettings:this.microsoftSqlServerSettings,mongoDbSettings:this.mongoDbSettings,mySqlSettings:this.mySqlSettings,neptuneSettings:this.neptuneSettings,oracleSettings:this.oracleSettings,password:this.password,port:this.port,postgreSqlSettings:this.postgreSqlSettings,redisSettings:this.redisSettings,redshiftSettings:this.redshiftSettings,resourceIdentifier:this.resourceIdentifier,s3Settings:this.s3Settings,serverName:this.serverName,sslMode:this.sslMode,sybaseSettings:this.sybaseSettings,tags:this.tags.renderTags(),username:this.username}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEndpoint.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEndpointPropsToCloudFormation(props)}}exports.CfnEndpoint=CfnEndpoint,_b=JSII_RTTI_SYMBOL_1,CfnEndpoint[_b]={fqn:"aws-cdk-lib.aws_dms.CfnEndpoint",version:"2.94.0"},CfnEndpoint.CFN_RESOURCE_TYPE_NAME="AWS::DMS::Endpoint";function CfnEndpointSybaseSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.wrap('supplied properties not correct for "SybaseSettingsProperty"')}function convertCfnEndpointSybaseSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointSybaseSettingsPropertyValidator(properties).assertSuccess(),{SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId)}):properties}function CfnEndpointSybaseSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointRedisSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authPassword",cdk.validateString)(properties.authPassword)),errors.collect(cdk.propertyValidator("authType",cdk.validateString)(properties.authType)),errors.collect(cdk.propertyValidator("authUserName",cdk.validateString)(properties.authUserName)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("serverName",cdk.validateString)(properties.serverName)),errors.collect(cdk.propertyValidator("sslCaCertificateArn",cdk.validateString)(properties.sslCaCertificateArn)),errors.collect(cdk.propertyValidator("sslSecurityProtocol",cdk.validateString)(properties.sslSecurityProtocol)),errors.wrap('supplied properties not correct for "RedisSettingsProperty"')}function convertCfnEndpointRedisSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointRedisSettingsPropertyValidator(properties).assertSuccess(),{AuthPassword:cdk.stringToCloudFormation(properties.authPassword),AuthType:cdk.stringToCloudFormation(properties.authType),AuthUserName:cdk.stringToCloudFormation(properties.authUserName),Port:cdk.numberToCloudFormation(properties.port),ServerName:cdk.stringToCloudFormation(properties.serverName),SslCaCertificateArn:cdk.stringToCloudFormation(properties.sslCaCertificateArn),SslSecurityProtocol:cdk.stringToCloudFormation(properties.sslSecurityProtocol)}):properties}function CfnEndpointRedisSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("authPassword","AuthPassword",properties.AuthPassword!=null?cfn_parse.FromCloudFormation.getString(properties.AuthPassword):void 0),ret.addPropertyResult("authType","AuthType",properties.AuthType!=null?cfn_parse.FromCloudFormation.getString(properties.AuthType):void 0),ret.addPropertyResult("authUserName","AuthUserName",properties.AuthUserName!=null?cfn_parse.FromCloudFormation.getString(properties.AuthUserName):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("serverName","ServerName",properties.ServerName!=null?cfn_parse.FromCloudFormation.getString(properties.ServerName):void 0),ret.addPropertyResult("sslCaCertificateArn","SslCaCertificateArn",properties.SslCaCertificateArn!=null?cfn_parse.FromCloudFormation.getString(properties.SslCaCertificateArn):void 0),ret.addPropertyResult("sslSecurityProtocol","SslSecurityProtocol",properties.SslSecurityProtocol!=null?cfn_parse.FromCloudFormation.getString(properties.SslSecurityProtocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointOracleSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessAlternateDirectly",cdk.validateBoolean)(properties.accessAlternateDirectly)),errors.collect(cdk.propertyValidator("addSupplementalLogging",cdk.validateBoolean)(properties.addSupplementalLogging)),errors.collect(cdk.propertyValidator("additionalArchivedLogDestId",cdk.validateNumber)(properties.additionalArchivedLogDestId)),errors.collect(cdk.propertyValidator("allowSelectNestedTables",cdk.validateBoolean)(properties.allowSelectNestedTables)),errors.collect(cdk.propertyValidator("archivedLogDestId",cdk.validateNumber)(properties.archivedLogDestId)),errors.collect(cdk.propertyValidator("archivedLogsOnly",cdk.validateBoolean)(properties.archivedLogsOnly)),errors.collect(cdk.propertyValidator("asmPassword",cdk.validateString)(properties.asmPassword)),errors.collect(cdk.propertyValidator("asmServer",cdk.validateString)(properties.asmServer)),errors.collect(cdk.propertyValidator("asmUser",cdk.validateString)(properties.asmUser)),errors.collect(cdk.propertyValidator("charLengthSemantics",cdk.validateString)(properties.charLengthSemantics)),errors.collect(cdk.propertyValidator("directPathNoLog",cdk.validateBoolean)(properties.directPathNoLog)),errors.collect(cdk.propertyValidator("directPathParallelLoad",cdk.validateBoolean)(properties.directPathParallelLoad)),errors.collect(cdk.propertyValidator("enableHomogenousTablespace",cdk.validateBoolean)(properties.enableHomogenousTablespace)),errors.collect(cdk.propertyValidator("extraArchivedLogDestIds",cdk.listValidator(cdk.validateNumber))(properties.extraArchivedLogDestIds)),errors.collect(cdk.propertyValidator("failTasksOnLobTruncation",cdk.validateBoolean)(properties.failTasksOnLobTruncation)),errors.collect(cdk.propertyValidator("numberDatatypeScale",cdk.validateNumber)(properties.numberDatatypeScale)),errors.collect(cdk.propertyValidator("oraclePathPrefix",cdk.validateString)(properties.oraclePathPrefix)),errors.collect(cdk.propertyValidator("parallelAsmReadThreads",cdk.validateNumber)(properties.parallelAsmReadThreads)),errors.collect(cdk.propertyValidator("readAheadBlocks",cdk.validateNumber)(properties.readAheadBlocks)),errors.collect(cdk.propertyValidator("readTableSpaceName",cdk.validateBoolean)(properties.readTableSpaceName)),errors.collect(cdk.propertyValidator("replacePathPrefix",cdk.validateBoolean)(properties.replacePathPrefix)),errors.collect(cdk.propertyValidator("retryInterval",cdk.validateNumber)(properties.retryInterval)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerOracleAsmAccessRoleArn",cdk.validateString)(properties.secretsManagerOracleAsmAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerOracleAsmSecretId",cdk.validateString)(properties.secretsManagerOracleAsmSecretId)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("securityDbEncryption",cdk.validateString)(properties.securityDbEncryption)),errors.collect(cdk.propertyValidator("securityDbEncryptionName",cdk.validateString)(properties.securityDbEncryptionName)),errors.collect(cdk.propertyValidator("spatialDataOptionToGeoJsonFunctionName",cdk.validateString)(properties.spatialDataOptionToGeoJsonFunctionName)),errors.collect(cdk.propertyValidator("standbyDelayTime",cdk.validateNumber)(properties.standbyDelayTime)),errors.collect(cdk.propertyValidator("useAlternateFolderForOnline",cdk.validateBoolean)(properties.useAlternateFolderForOnline)),errors.collect(cdk.propertyValidator("useBFile",cdk.validateBoolean)(properties.useBFile)),errors.collect(cdk.propertyValidator("useDirectPathFullLoad",cdk.validateBoolean)(properties.useDirectPathFullLoad)),errors.collect(cdk.propertyValidator("useLogminerReader",cdk.validateBoolean)(properties.useLogminerReader)),errors.collect(cdk.propertyValidator("usePathPrefix",cdk.validateString)(properties.usePathPrefix)),errors.wrap('supplied properties not correct for "OracleSettingsProperty"')}function convertCfnEndpointOracleSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointOracleSettingsPropertyValidator(properties).assertSuccess(),{AccessAlternateDirectly:cdk.booleanToCloudFormation(properties.accessAlternateDirectly),AddSupplementalLogging:cdk.booleanToCloudFormation(properties.addSupplementalLogging),AdditionalArchivedLogDestId:cdk.numberToCloudFormation(properties.additionalArchivedLogDestId),AllowSelectNestedTables:cdk.booleanToCloudFormation(properties.allowSelectNestedTables),ArchivedLogDestId:cdk.numberToCloudFormation(properties.archivedLogDestId),ArchivedLogsOnly:cdk.booleanToCloudFormation(properties.archivedLogsOnly),AsmPassword:cdk.stringToCloudFormation(properties.asmPassword),AsmServer:cdk.stringToCloudFormation(properties.asmServer),AsmUser:cdk.stringToCloudFormation(properties.asmUser),CharLengthSemantics:cdk.stringToCloudFormation(properties.charLengthSemantics),DirectPathNoLog:cdk.booleanToCloudFormation(properties.directPathNoLog),DirectPathParallelLoad:cdk.booleanToCloudFormation(properties.directPathParallelLoad),EnableHomogenousTablespace:cdk.booleanToCloudFormation(properties.enableHomogenousTablespace),ExtraArchivedLogDestIds:cdk.listMapper(cdk.numberToCloudFormation)(properties.extraArchivedLogDestIds),FailTasksOnLobTruncation:cdk.booleanToCloudFormation(properties.failTasksOnLobTruncation),NumberDatatypeScale:cdk.numberToCloudFormation(properties.numberDatatypeScale),OraclePathPrefix:cdk.stringToCloudFormation(properties.oraclePathPrefix),ParallelAsmReadThreads:cdk.numberToCloudFormation(properties.parallelAsmReadThreads),ReadAheadBlocks:cdk.numberToCloudFormation(properties.readAheadBlocks),ReadTableSpaceName:cdk.booleanToCloudFormation(properties.readTableSpaceName),ReplacePathPrefix:cdk.booleanToCloudFormation(properties.replacePathPrefix),RetryInterval:cdk.numberToCloudFormation(properties.retryInterval),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerOracleAsmAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerOracleAsmAccessRoleArn),SecretsManagerOracleAsmSecretId:cdk.stringToCloudFormation(properties.secretsManagerOracleAsmSecretId),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),SecurityDbEncryption:cdk.stringToCloudFormation(properties.securityDbEncryption),SecurityDbEncryptionName:cdk.stringToCloudFormation(properties.securityDbEncryptionName),SpatialDataOptionToGeoJsonFunctionName:cdk.stringToCloudFormation(properties.spatialDataOptionToGeoJsonFunctionName),StandbyDelayTime:cdk.numberToCloudFormation(properties.standbyDelayTime),UseAlternateFolderForOnline:cdk.booleanToCloudFormation(properties.useAlternateFolderForOnline),UseBFile:cdk.booleanToCloudFormation(properties.useBFile),UseDirectPathFullLoad:cdk.booleanToCloudFormation(properties.useDirectPathFullLoad),UseLogminerReader:cdk.booleanToCloudFormation(properties.useLogminerReader),UsePathPrefix:cdk.stringToCloudFormation(properties.usePathPrefix)}):properties}function CfnEndpointOracleSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessAlternateDirectly","AccessAlternateDirectly",properties.AccessAlternateDirectly!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AccessAlternateDirectly):void 0),ret.addPropertyResult("additionalArchivedLogDestId","AdditionalArchivedLogDestId",properties.AdditionalArchivedLogDestId!=null?cfn_parse.FromCloudFormation.getNumber(properties.AdditionalArchivedLogDestId):void 0),ret.addPropertyResult("addSupplementalLogging","AddSupplementalLogging",properties.AddSupplementalLogging!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AddSupplementalLogging):void 0),ret.addPropertyResult("allowSelectNestedTables","AllowSelectNestedTables",properties.AllowSelectNestedTables!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowSelectNestedTables):void 0),ret.addPropertyResult("archivedLogDestId","ArchivedLogDestId",properties.ArchivedLogDestId!=null?cfn_parse.FromCloudFormation.getNumber(properties.ArchivedLogDestId):void 0),ret.addPropertyResult("archivedLogsOnly","ArchivedLogsOnly",properties.ArchivedLogsOnly!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ArchivedLogsOnly):void 0),ret.addPropertyResult("asmPassword","AsmPassword",properties.AsmPassword!=null?cfn_parse.FromCloudFormation.getString(properties.AsmPassword):void 0),ret.addPropertyResult("asmServer","AsmServer",properties.AsmServer!=null?cfn_parse.FromCloudFormation.getString(properties.AsmServer):void 0),ret.addPropertyResult("asmUser","AsmUser",properties.AsmUser!=null?cfn_parse.FromCloudFormation.getString(properties.AsmUser):void 0),ret.addPropertyResult("charLengthSemantics","CharLengthSemantics",properties.CharLengthSemantics!=null?cfn_parse.FromCloudFormation.getString(properties.CharLengthSemantics):void 0),ret.addPropertyResult("directPathNoLog","DirectPathNoLog",properties.DirectPathNoLog!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DirectPathNoLog):void 0),ret.addPropertyResult("directPathParallelLoad","DirectPathParallelLoad",properties.DirectPathParallelLoad!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DirectPathParallelLoad):void 0),ret.addPropertyResult("enableHomogenousTablespace","EnableHomogenousTablespace",properties.EnableHomogenousTablespace!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableHomogenousTablespace):void 0),ret.addPropertyResult("extraArchivedLogDestIds","ExtraArchivedLogDestIds",properties.ExtraArchivedLogDestIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getNumber)(properties.ExtraArchivedLogDestIds):void 0),ret.addPropertyResult("failTasksOnLobTruncation","FailTasksOnLobTruncation",properties.FailTasksOnLobTruncation!=null?cfn_parse.FromCloudFormation.getBoolean(properties.FailTasksOnLobTruncation):void 0),ret.addPropertyResult("numberDatatypeScale","NumberDatatypeScale",properties.NumberDatatypeScale!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberDatatypeScale):void 0),ret.addPropertyResult("oraclePathPrefix","OraclePathPrefix",properties.OraclePathPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.OraclePathPrefix):void 0),ret.addPropertyResult("parallelAsmReadThreads","ParallelAsmReadThreads",properties.ParallelAsmReadThreads!=null?cfn_parse.FromCloudFormation.getNumber(properties.ParallelAsmReadThreads):void 0),ret.addPropertyResult("readAheadBlocks","ReadAheadBlocks",properties.ReadAheadBlocks!=null?cfn_parse.FromCloudFormation.getNumber(properties.ReadAheadBlocks):void 0),ret.addPropertyResult("readTableSpaceName","ReadTableSpaceName",properties.ReadTableSpaceName!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ReadTableSpaceName):void 0),ret.addPropertyResult("replacePathPrefix","ReplacePathPrefix",properties.ReplacePathPrefix!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ReplacePathPrefix):void 0),ret.addPropertyResult("retryInterval","RetryInterval",properties.RetryInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.RetryInterval):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerOracleAsmAccessRoleArn","SecretsManagerOracleAsmAccessRoleArn",properties.SecretsManagerOracleAsmAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerOracleAsmAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerOracleAsmSecretId","SecretsManagerOracleAsmSecretId",properties.SecretsManagerOracleAsmSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerOracleAsmSecretId):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("securityDbEncryption","SecurityDbEncryption",properties.SecurityDbEncryption!=null?cfn_parse.FromCloudFormation.getString(properties.SecurityDbEncryption):void 0),ret.addPropertyResult("securityDbEncryptionName","SecurityDbEncryptionName",properties.SecurityDbEncryptionName!=null?cfn_parse.FromCloudFormation.getString(properties.SecurityDbEncryptionName):void 0),ret.addPropertyResult("spatialDataOptionToGeoJsonFunctionName","SpatialDataOptionToGeoJsonFunctionName",properties.SpatialDataOptionToGeoJsonFunctionName!=null?cfn_parse.FromCloudFormation.getString(properties.SpatialDataOptionToGeoJsonFunctionName):void 0),ret.addPropertyResult("standbyDelayTime","StandbyDelayTime",properties.StandbyDelayTime!=null?cfn_parse.FromCloudFormation.getNumber(properties.StandbyDelayTime):void 0),ret.addPropertyResult("useAlternateFolderForOnline","UseAlternateFolderForOnline",properties.UseAlternateFolderForOnline!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseAlternateFolderForOnline):void 0),ret.addPropertyResult("useBFile","UseBFile",properties.UseBFile!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseBFile):void 0),ret.addPropertyResult("useDirectPathFullLoad","UseDirectPathFullLoad",properties.UseDirectPathFullLoad!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseDirectPathFullLoad):void 0),ret.addPropertyResult("useLogminerReader","UseLogminerReader",properties.UseLogminerReader!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseLogminerReader):void 0),ret.addPropertyResult("usePathPrefix","UsePathPrefix",properties.UsePathPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.UsePathPrefix):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointKafkaSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("broker",cdk.validateString)(properties.broker)),errors.collect(cdk.propertyValidator("includeControlDetails",cdk.validateBoolean)(properties.includeControlDetails)),errors.collect(cdk.propertyValidator("includeNullAndEmpty",cdk.validateBoolean)(properties.includeNullAndEmpty)),errors.collect(cdk.propertyValidator("includePartitionValue",cdk.validateBoolean)(properties.includePartitionValue)),errors.collect(cdk.propertyValidator("includeTableAlterOperations",cdk.validateBoolean)(properties.includeTableAlterOperations)),errors.collect(cdk.propertyValidator("includeTransactionDetails",cdk.validateBoolean)(properties.includeTransactionDetails)),errors.collect(cdk.propertyValidator("messageFormat",cdk.validateString)(properties.messageFormat)),errors.collect(cdk.propertyValidator("messageMaxBytes",cdk.validateNumber)(properties.messageMaxBytes)),errors.collect(cdk.propertyValidator("noHexPrefix",cdk.validateBoolean)(properties.noHexPrefix)),errors.collect(cdk.propertyValidator("partitionIncludeSchemaTable",cdk.validateBoolean)(properties.partitionIncludeSchemaTable)),errors.collect(cdk.propertyValidator("saslPassword",cdk.validateString)(properties.saslPassword)),errors.collect(cdk.propertyValidator("saslUserName",cdk.validateString)(properties.saslUserName)),errors.collect(cdk.propertyValidator("securityProtocol",cdk.validateString)(properties.securityProtocol)),errors.collect(cdk.propertyValidator("sslCaCertificateArn",cdk.validateString)(properties.sslCaCertificateArn)),errors.collect(cdk.propertyValidator("sslClientCertificateArn",cdk.validateString)(properties.sslClientCertificateArn)),errors.collect(cdk.propertyValidator("sslClientKeyArn",cdk.validateString)(properties.sslClientKeyArn)),errors.collect(cdk.propertyValidator("sslClientKeyPassword",cdk.validateString)(properties.sslClientKeyPassword)),errors.collect(cdk.propertyValidator("topic",cdk.validateString)(properties.topic)),errors.wrap('supplied properties not correct for "KafkaSettingsProperty"')}function convertCfnEndpointKafkaSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointKafkaSettingsPropertyValidator(properties).assertSuccess(),{Broker:cdk.stringToCloudFormation(properties.broker),IncludeControlDetails:cdk.booleanToCloudFormation(properties.includeControlDetails),IncludeNullAndEmpty:cdk.booleanToCloudFormation(properties.includeNullAndEmpty),IncludePartitionValue:cdk.booleanToCloudFormation(properties.includePartitionValue),IncludeTableAlterOperations:cdk.booleanToCloudFormation(properties.includeTableAlterOperations),IncludeTransactionDetails:cdk.booleanToCloudFormation(properties.includeTransactionDetails),MessageFormat:cdk.stringToCloudFormation(properties.messageFormat),MessageMaxBytes:cdk.numberToCloudFormation(properties.messageMaxBytes),NoHexPrefix:cdk.booleanToCloudFormation(properties.noHexPrefix),PartitionIncludeSchemaTable:cdk.booleanToCloudFormation(properties.partitionIncludeSchemaTable),SaslPassword:cdk.stringToCloudFormation(properties.saslPassword),SaslUserName:cdk.stringToCloudFormation(properties.saslUserName),SecurityProtocol:cdk.stringToCloudFormation(properties.securityProtocol),SslCaCertificateArn:cdk.stringToCloudFormation(properties.sslCaCertificateArn),SslClientCertificateArn:cdk.stringToCloudFormation(properties.sslClientCertificateArn),SslClientKeyArn:cdk.stringToCloudFormation(properties.sslClientKeyArn),SslClientKeyPassword:cdk.stringToCloudFormation(properties.sslClientKeyPassword),Topic:cdk.stringToCloudFormation(properties.topic)}):properties}function CfnEndpointKafkaSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("broker","Broker",properties.Broker!=null?cfn_parse.FromCloudFormation.getString(properties.Broker):void 0),ret.addPropertyResult("includeControlDetails","IncludeControlDetails",properties.IncludeControlDetails!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeControlDetails):void 0),ret.addPropertyResult("includeNullAndEmpty","IncludeNullAndEmpty",properties.IncludeNullAndEmpty!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeNullAndEmpty):void 0),ret.addPropertyResult("includePartitionValue","IncludePartitionValue",properties.IncludePartitionValue!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludePartitionValue):void 0),ret.addPropertyResult("includeTableAlterOperations","IncludeTableAlterOperations",properties.IncludeTableAlterOperations!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTableAlterOperations):void 0),ret.addPropertyResult("includeTransactionDetails","IncludeTransactionDetails",properties.IncludeTransactionDetails!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTransactionDetails):void 0),ret.addPropertyResult("messageFormat","MessageFormat",properties.MessageFormat!=null?cfn_parse.FromCloudFormation.getString(properties.MessageFormat):void 0),ret.addPropertyResult("messageMaxBytes","MessageMaxBytes",properties.MessageMaxBytes!=null?cfn_parse.FromCloudFormation.getNumber(properties.MessageMaxBytes):void 0),ret.addPropertyResult("noHexPrefix","NoHexPrefix",properties.NoHexPrefix!=null?cfn_parse.FromCloudFormation.getBoolean(properties.NoHexPrefix):void 0),ret.addPropertyResult("partitionIncludeSchemaTable","PartitionIncludeSchemaTable",properties.PartitionIncludeSchemaTable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PartitionIncludeSchemaTable):void 0),ret.addPropertyResult("saslPassword","SaslPassword",properties.SaslPassword!=null?cfn_parse.FromCloudFormation.getString(properties.SaslPassword):void 0),ret.addPropertyResult("saslUserName","SaslUserName",properties.SaslUserName!=null?cfn_parse.FromCloudFormation.getString(properties.SaslUserName):void 0),ret.addPropertyResult("securityProtocol","SecurityProtocol",properties.SecurityProtocol!=null?cfn_parse.FromCloudFormation.getString(properties.SecurityProtocol):void 0),ret.addPropertyResult("sslCaCertificateArn","SslCaCertificateArn",properties.SslCaCertificateArn!=null?cfn_parse.FromCloudFormation.getString(properties.SslCaCertificateArn):void 0),ret.addPropertyResult("sslClientCertificateArn","SslClientCertificateArn",properties.SslClientCertificateArn!=null?cfn_parse.FromCloudFormation.getString(properties.SslClientCertificateArn):void 0),ret.addPropertyResult("sslClientKeyArn","SslClientKeyArn",properties.SslClientKeyArn!=null?cfn_parse.FromCloudFormation.getString(properties.SslClientKeyArn):void 0),ret.addPropertyResult("sslClientKeyPassword","SslClientKeyPassword",properties.SslClientKeyPassword!=null?cfn_parse.FromCloudFormation.getString(properties.SslClientKeyPassword):void 0),ret.addPropertyResult("topic","Topic",properties.Topic!=null?cfn_parse.FromCloudFormation.getString(properties.Topic):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointMySqlSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("afterConnectScript",cdk.validateString)(properties.afterConnectScript)),errors.collect(cdk.propertyValidator("cleanSourceMetadataOnMismatch",cdk.validateBoolean)(properties.cleanSourceMetadataOnMismatch)),errors.collect(cdk.propertyValidator("eventsPollInterval",cdk.validateNumber)(properties.eventsPollInterval)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("parallelLoadThreads",cdk.validateNumber)(properties.parallelLoadThreads)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("serverTimezone",cdk.validateString)(properties.serverTimezone)),errors.collect(cdk.propertyValidator("targetDbType",cdk.validateString)(properties.targetDbType)),errors.wrap('supplied properties not correct for "MySqlSettingsProperty"')}function convertCfnEndpointMySqlSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointMySqlSettingsPropertyValidator(properties).assertSuccess(),{AfterConnectScript:cdk.stringToCloudFormation(properties.afterConnectScript),CleanSourceMetadataOnMismatch:cdk.booleanToCloudFormation(properties.cleanSourceMetadataOnMismatch),EventsPollInterval:cdk.numberToCloudFormation(properties.eventsPollInterval),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),ParallelLoadThreads:cdk.numberToCloudFormation(properties.parallelLoadThreads),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),ServerTimezone:cdk.stringToCloudFormation(properties.serverTimezone),TargetDbType:cdk.stringToCloudFormation(properties.targetDbType)}):properties}function CfnEndpointMySqlSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("afterConnectScript","AfterConnectScript",properties.AfterConnectScript!=null?cfn_parse.FromCloudFormation.getString(properties.AfterConnectScript):void 0),ret.addPropertyResult("cleanSourceMetadataOnMismatch","CleanSourceMetadataOnMismatch",properties.CleanSourceMetadataOnMismatch!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CleanSourceMetadataOnMismatch):void 0),ret.addPropertyResult("eventsPollInterval","EventsPollInterval",properties.EventsPollInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.EventsPollInterval):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("parallelLoadThreads","ParallelLoadThreads",properties.ParallelLoadThreads!=null?cfn_parse.FromCloudFormation.getNumber(properties.ParallelLoadThreads):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("serverTimezone","ServerTimezone",properties.ServerTimezone!=null?cfn_parse.FromCloudFormation.getString(properties.ServerTimezone):void 0),ret.addPropertyResult("targetDbType","TargetDbType",properties.TargetDbType!=null?cfn_parse.FromCloudFormation.getString(properties.TargetDbType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointS3SettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addColumnName",cdk.validateBoolean)(properties.addColumnName)),errors.collect(cdk.propertyValidator("bucketFolder",cdk.validateString)(properties.bucketFolder)),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("cannedAclForObjects",cdk.validateString)(properties.cannedAclForObjects)),errors.collect(cdk.propertyValidator("cdcInsertsAndUpdates",cdk.validateBoolean)(properties.cdcInsertsAndUpdates)),errors.collect(cdk.propertyValidator("cdcInsertsOnly",cdk.validateBoolean)(properties.cdcInsertsOnly)),errors.collect(cdk.propertyValidator("cdcMaxBatchInterval",cdk.validateNumber)(properties.cdcMaxBatchInterval)),errors.collect(cdk.propertyValidator("cdcMinFileSize",cdk.validateNumber)(properties.cdcMinFileSize)),errors.collect(cdk.propertyValidator("cdcPath",cdk.validateString)(properties.cdcPath)),errors.collect(cdk.propertyValidator("compressionType",cdk.validateString)(properties.compressionType)),errors.collect(cdk.propertyValidator("csvDelimiter",cdk.validateString)(properties.csvDelimiter)),errors.collect(cdk.propertyValidator("csvNoSupValue",cdk.validateString)(properties.csvNoSupValue)),errors.collect(cdk.propertyValidator("csvNullValue",cdk.validateString)(properties.csvNullValue)),errors.collect(cdk.propertyValidator("csvRowDelimiter",cdk.validateString)(properties.csvRowDelimiter)),errors.collect(cdk.propertyValidator("dataFormat",cdk.validateString)(properties.dataFormat)),errors.collect(cdk.propertyValidator("dataPageSize",cdk.validateNumber)(properties.dataPageSize)),errors.collect(cdk.propertyValidator("datePartitionDelimiter",cdk.validateString)(properties.datePartitionDelimiter)),errors.collect(cdk.propertyValidator("datePartitionEnabled",cdk.validateBoolean)(properties.datePartitionEnabled)),errors.collect(cdk.propertyValidator("datePartitionSequence",cdk.validateString)(properties.datePartitionSequence)),errors.collect(cdk.propertyValidator("datePartitionTimezone",cdk.validateString)(properties.datePartitionTimezone)),errors.collect(cdk.propertyValidator("dictPageSizeLimit",cdk.validateNumber)(properties.dictPageSizeLimit)),errors.collect(cdk.propertyValidator("enableStatistics",cdk.validateBoolean)(properties.enableStatistics)),errors.collect(cdk.propertyValidator("encodingType",cdk.validateString)(properties.encodingType)),errors.collect(cdk.propertyValidator("encryptionMode",cdk.validateString)(properties.encryptionMode)),errors.collect(cdk.propertyValidator("externalTableDefinition",cdk.validateString)(properties.externalTableDefinition)),errors.collect(cdk.propertyValidator("ignoreHeaderRows",cdk.validateNumber)(properties.ignoreHeaderRows)),errors.collect(cdk.propertyValidator("includeOpForFullLoad",cdk.validateBoolean)(properties.includeOpForFullLoad)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("parquetTimestampInMillisecond",cdk.validateBoolean)(properties.parquetTimestampInMillisecond)),errors.collect(cdk.propertyValidator("parquetVersion",cdk.validateString)(properties.parquetVersion)),errors.collect(cdk.propertyValidator("preserveTransactions",cdk.validateBoolean)(properties.preserveTransactions)),errors.collect(cdk.propertyValidator("rfc4180",cdk.validateBoolean)(properties.rfc4180)),errors.collect(cdk.propertyValidator("rowGroupLength",cdk.validateNumber)(properties.rowGroupLength)),errors.collect(cdk.propertyValidator("serverSideEncryptionKmsKeyId",cdk.validateString)(properties.serverSideEncryptionKmsKeyId)),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.collect(cdk.propertyValidator("timestampColumnName",cdk.validateString)(properties.timestampColumnName)),errors.collect(cdk.propertyValidator("useCsvNoSupValue",cdk.validateBoolean)(properties.useCsvNoSupValue)),errors.collect(cdk.propertyValidator("useTaskStartTimeForFullLoadTimestamp",cdk.validateBoolean)(properties.useTaskStartTimeForFullLoadTimestamp)),errors.wrap('supplied properties not correct for "S3SettingsProperty"')}function convertCfnEndpointS3SettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointS3SettingsPropertyValidator(properties).assertSuccess(),{AddColumnName:cdk.booleanToCloudFormation(properties.addColumnName),BucketFolder:cdk.stringToCloudFormation(properties.bucketFolder),BucketName:cdk.stringToCloudFormation(properties.bucketName),CannedAclForObjects:cdk.stringToCloudFormation(properties.cannedAclForObjects),CdcInsertsAndUpdates:cdk.booleanToCloudFormation(properties.cdcInsertsAndUpdates),CdcInsertsOnly:cdk.booleanToCloudFormation(properties.cdcInsertsOnly),CdcMaxBatchInterval:cdk.numberToCloudFormation(properties.cdcMaxBatchInterval),CdcMinFileSize:cdk.numberToCloudFormation(properties.cdcMinFileSize),CdcPath:cdk.stringToCloudFormation(properties.cdcPath),CompressionType:cdk.stringToCloudFormation(properties.compressionType),CsvDelimiter:cdk.stringToCloudFormation(properties.csvDelimiter),CsvNoSupValue:cdk.stringToCloudFormation(properties.csvNoSupValue),CsvNullValue:cdk.stringToCloudFormation(properties.csvNullValue),CsvRowDelimiter:cdk.stringToCloudFormation(properties.csvRowDelimiter),DataFormat:cdk.stringToCloudFormation(properties.dataFormat),DataPageSize:cdk.numberToCloudFormation(properties.dataPageSize),DatePartitionDelimiter:cdk.stringToCloudFormation(properties.datePartitionDelimiter),DatePartitionEnabled:cdk.booleanToCloudFormation(properties.datePartitionEnabled),DatePartitionSequence:cdk.stringToCloudFormation(properties.datePartitionSequence),DatePartitionTimezone:cdk.stringToCloudFormation(properties.datePartitionTimezone),DictPageSizeLimit:cdk.numberToCloudFormation(properties.dictPageSizeLimit),EnableStatistics:cdk.booleanToCloudFormation(properties.enableStatistics),EncodingType:cdk.stringToCloudFormation(properties.encodingType),EncryptionMode:cdk.stringToCloudFormation(properties.encryptionMode),ExternalTableDefinition:cdk.stringToCloudFormation(properties.externalTableDefinition),IgnoreHeaderRows:cdk.numberToCloudFormation(properties.ignoreHeaderRows),IncludeOpForFullLoad:cdk.booleanToCloudFormation(properties.includeOpForFullLoad),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),ParquetTimestampInMillisecond:cdk.booleanToCloudFormation(properties.parquetTimestampInMillisecond),ParquetVersion:cdk.stringToCloudFormation(properties.parquetVersion),PreserveTransactions:cdk.booleanToCloudFormation(properties.preserveTransactions),Rfc4180:cdk.booleanToCloudFormation(properties.rfc4180),RowGroupLength:cdk.numberToCloudFormation(properties.rowGroupLength),ServerSideEncryptionKmsKeyId:cdk.stringToCloudFormation(properties.serverSideEncryptionKmsKeyId),ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn),TimestampColumnName:cdk.stringToCloudFormation(properties.timestampColumnName),UseCsvNoSupValue:cdk.booleanToCloudFormation(properties.useCsvNoSupValue),UseTaskStartTimeForFullLoadTimestamp:cdk.booleanToCloudFormation(properties.useTaskStartTimeForFullLoadTimestamp)}):properties}function CfnEndpointS3SettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addColumnName","AddColumnName",properties.AddColumnName!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AddColumnName):void 0),ret.addPropertyResult("bucketFolder","BucketFolder",properties.BucketFolder!=null?cfn_parse.FromCloudFormation.getString(properties.BucketFolder):void 0),ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("cannedAclForObjects","CannedAclForObjects",properties.CannedAclForObjects!=null?cfn_parse.FromCloudFormation.getString(properties.CannedAclForObjects):void 0),ret.addPropertyResult("cdcInsertsAndUpdates","CdcInsertsAndUpdates",properties.CdcInsertsAndUpdates!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CdcInsertsAndUpdates):void 0),ret.addPropertyResult("cdcInsertsOnly","CdcInsertsOnly",properties.CdcInsertsOnly!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CdcInsertsOnly):void 0),ret.addPropertyResult("cdcMaxBatchInterval","CdcMaxBatchInterval",properties.CdcMaxBatchInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.CdcMaxBatchInterval):void 0),ret.addPropertyResult("cdcMinFileSize","CdcMinFileSize",properties.CdcMinFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.CdcMinFileSize):void 0),ret.addPropertyResult("cdcPath","CdcPath",properties.CdcPath!=null?cfn_parse.FromCloudFormation.getString(properties.CdcPath):void 0),ret.addPropertyResult("compressionType","CompressionType",properties.CompressionType!=null?cfn_parse.FromCloudFormation.getString(properties.CompressionType):void 0),ret.addPropertyResult("csvDelimiter","CsvDelimiter",properties.CsvDelimiter!=null?cfn_parse.FromCloudFormation.getString(properties.CsvDelimiter):void 0),ret.addPropertyResult("csvNoSupValue","CsvNoSupValue",properties.CsvNoSupValue!=null?cfn_parse.FromCloudFormation.getString(properties.CsvNoSupValue):void 0),ret.addPropertyResult("csvNullValue","CsvNullValue",properties.CsvNullValue!=null?cfn_parse.FromCloudFormation.getString(properties.CsvNullValue):void 0),ret.addPropertyResult("csvRowDelimiter","CsvRowDelimiter",properties.CsvRowDelimiter!=null?cfn_parse.FromCloudFormation.getString(properties.CsvRowDelimiter):void 0),ret.addPropertyResult("dataFormat","DataFormat",properties.DataFormat!=null?cfn_parse.FromCloudFormation.getString(properties.DataFormat):void 0),ret.addPropertyResult("dataPageSize","DataPageSize",properties.DataPageSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.DataPageSize):void 0),ret.addPropertyResult("datePartitionDelimiter","DatePartitionDelimiter",properties.DatePartitionDelimiter!=null?cfn_parse.FromCloudFormation.getString(properties.DatePartitionDelimiter):void 0),ret.addPropertyResult("datePartitionEnabled","DatePartitionEnabled",properties.DatePartitionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DatePartitionEnabled):void 0),ret.addPropertyResult("datePartitionSequence","DatePartitionSequence",properties.DatePartitionSequence!=null?cfn_parse.FromCloudFormation.getString(properties.DatePartitionSequence):void 0),ret.addPropertyResult("datePartitionTimezone","DatePartitionTimezone",properties.DatePartitionTimezone!=null?cfn_parse.FromCloudFormation.getString(properties.DatePartitionTimezone):void 0),ret.addPropertyResult("dictPageSizeLimit","DictPageSizeLimit",properties.DictPageSizeLimit!=null?cfn_parse.FromCloudFormation.getNumber(properties.DictPageSizeLimit):void 0),ret.addPropertyResult("enableStatistics","EnableStatistics",properties.EnableStatistics!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableStatistics):void 0),ret.addPropertyResult("encodingType","EncodingType",properties.EncodingType!=null?cfn_parse.FromCloudFormation.getString(properties.EncodingType):void 0),ret.addPropertyResult("encryptionMode","EncryptionMode",properties.EncryptionMode!=null?cfn_parse.FromCloudFormation.getString(properties.EncryptionMode):void 0),ret.addPropertyResult("externalTableDefinition","ExternalTableDefinition",properties.ExternalTableDefinition!=null?cfn_parse.FromCloudFormation.getString(properties.ExternalTableDefinition):void 0),ret.addPropertyResult("ignoreHeaderRows","IgnoreHeaderRows",properties.IgnoreHeaderRows!=null?cfn_parse.FromCloudFormation.getNumber(properties.IgnoreHeaderRows):void 0),ret.addPropertyResult("includeOpForFullLoad","IncludeOpForFullLoad",properties.IncludeOpForFullLoad!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeOpForFullLoad):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("parquetTimestampInMillisecond","ParquetTimestampInMillisecond",properties.ParquetTimestampInMillisecond!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ParquetTimestampInMillisecond):void 0),ret.addPropertyResult("parquetVersion","ParquetVersion",properties.ParquetVersion!=null?cfn_parse.FromCloudFormation.getString(properties.ParquetVersion):void 0),ret.addPropertyResult("preserveTransactions","PreserveTransactions",properties.PreserveTransactions!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PreserveTransactions):void 0),ret.addPropertyResult("rfc4180","Rfc4180",properties.Rfc4180!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Rfc4180):void 0),ret.addPropertyResult("rowGroupLength","RowGroupLength",properties.RowGroupLength!=null?cfn_parse.FromCloudFormation.getNumber(properties.RowGroupLength):void 0),ret.addPropertyResult("serverSideEncryptionKmsKeyId","ServerSideEncryptionKmsKeyId",properties.ServerSideEncryptionKmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.ServerSideEncryptionKmsKeyId):void 0),ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addPropertyResult("timestampColumnName","TimestampColumnName",properties.TimestampColumnName!=null?cfn_parse.FromCloudFormation.getString(properties.TimestampColumnName):void 0),ret.addPropertyResult("useCsvNoSupValue","UseCsvNoSupValue",properties.UseCsvNoSupValue!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseCsvNoSupValue):void 0),ret.addPropertyResult("useTaskStartTimeForFullLoadTimestamp","UseTaskStartTimeForFullLoadTimestamp",properties.UseTaskStartTimeForFullLoadTimestamp!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseTaskStartTimeForFullLoadTimestamp):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointKinesisSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("includeControlDetails",cdk.validateBoolean)(properties.includeControlDetails)),errors.collect(cdk.propertyValidator("includeNullAndEmpty",cdk.validateBoolean)(properties.includeNullAndEmpty)),errors.collect(cdk.propertyValidator("includePartitionValue",cdk.validateBoolean)(properties.includePartitionValue)),errors.collect(cdk.propertyValidator("includeTableAlterOperations",cdk.validateBoolean)(properties.includeTableAlterOperations)),errors.collect(cdk.propertyValidator("includeTransactionDetails",cdk.validateBoolean)(properties.includeTransactionDetails)),errors.collect(cdk.propertyValidator("messageFormat",cdk.validateString)(properties.messageFormat)),errors.collect(cdk.propertyValidator("noHexPrefix",cdk.validateBoolean)(properties.noHexPrefix)),errors.collect(cdk.propertyValidator("partitionIncludeSchemaTable",cdk.validateBoolean)(properties.partitionIncludeSchemaTable)),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.collect(cdk.propertyValidator("streamArn",cdk.validateString)(properties.streamArn)),errors.wrap('supplied properties not correct for "KinesisSettingsProperty"')}function convertCfnEndpointKinesisSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointKinesisSettingsPropertyValidator(properties).assertSuccess(),{IncludeControlDetails:cdk.booleanToCloudFormation(properties.includeControlDetails),IncludeNullAndEmpty:cdk.booleanToCloudFormation(properties.includeNullAndEmpty),IncludePartitionValue:cdk.booleanToCloudFormation(properties.includePartitionValue),IncludeTableAlterOperations:cdk.booleanToCloudFormation(properties.includeTableAlterOperations),IncludeTransactionDetails:cdk.booleanToCloudFormation(properties.includeTransactionDetails),MessageFormat:cdk.stringToCloudFormation(properties.messageFormat),NoHexPrefix:cdk.booleanToCloudFormation(properties.noHexPrefix),PartitionIncludeSchemaTable:cdk.booleanToCloudFormation(properties.partitionIncludeSchemaTable),ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn),StreamArn:cdk.stringToCloudFormation(properties.streamArn)}):properties}function CfnEndpointKinesisSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("includeControlDetails","IncludeControlDetails",properties.IncludeControlDetails!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeControlDetails):void 0),ret.addPropertyResult("includeNullAndEmpty","IncludeNullAndEmpty",properties.IncludeNullAndEmpty!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeNullAndEmpty):void 0),ret.addPropertyResult("includePartitionValue","IncludePartitionValue",properties.IncludePartitionValue!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludePartitionValue):void 0),ret.addPropertyResult("includeTableAlterOperations","IncludeTableAlterOperations",properties.IncludeTableAlterOperations!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTableAlterOperations):void 0),ret.addPropertyResult("includeTransactionDetails","IncludeTransactionDetails",properties.IncludeTransactionDetails!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTransactionDetails):void 0),ret.addPropertyResult("messageFormat","MessageFormat",properties.MessageFormat!=null?cfn_parse.FromCloudFormation.getString(properties.MessageFormat):void 0),ret.addPropertyResult("noHexPrefix","NoHexPrefix",properties.NoHexPrefix!=null?cfn_parse.FromCloudFormation.getBoolean(properties.NoHexPrefix):void 0),ret.addPropertyResult("partitionIncludeSchemaTable","PartitionIncludeSchemaTable",properties.PartitionIncludeSchemaTable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PartitionIncludeSchemaTable):void 0),ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addPropertyResult("streamArn","StreamArn",properties.StreamArn!=null?cfn_parse.FromCloudFormation.getString(properties.StreamArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointRedshiftSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("acceptAnyDate",cdk.validateBoolean)(properties.acceptAnyDate)),errors.collect(cdk.propertyValidator("afterConnectScript",cdk.validateString)(properties.afterConnectScript)),errors.collect(cdk.propertyValidator("bucketFolder",cdk.validateString)(properties.bucketFolder)),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("caseSensitiveNames",cdk.validateBoolean)(properties.caseSensitiveNames)),errors.collect(cdk.propertyValidator("compUpdate",cdk.validateBoolean)(properties.compUpdate)),errors.collect(cdk.propertyValidator("connectionTimeout",cdk.validateNumber)(properties.connectionTimeout)),errors.collect(cdk.propertyValidator("dateFormat",cdk.validateString)(properties.dateFormat)),errors.collect(cdk.propertyValidator("emptyAsNull",cdk.validateBoolean)(properties.emptyAsNull)),errors.collect(cdk.propertyValidator("encryptionMode",cdk.validateString)(properties.encryptionMode)),errors.collect(cdk.propertyValidator("explicitIds",cdk.validateBoolean)(properties.explicitIds)),errors.collect(cdk.propertyValidator("fileTransferUploadStreams",cdk.validateNumber)(properties.fileTransferUploadStreams)),errors.collect(cdk.propertyValidator("loadTimeout",cdk.validateNumber)(properties.loadTimeout)),errors.collect(cdk.propertyValidator("mapBooleanAsBoolean",cdk.validateBoolean)(properties.mapBooleanAsBoolean)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("removeQuotes",cdk.validateBoolean)(properties.removeQuotes)),errors.collect(cdk.propertyValidator("replaceChars",cdk.validateString)(properties.replaceChars)),errors.collect(cdk.propertyValidator("replaceInvalidChars",cdk.validateString)(properties.replaceInvalidChars)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("serverSideEncryptionKmsKeyId",cdk.validateString)(properties.serverSideEncryptionKmsKeyId)),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.collect(cdk.propertyValidator("timeFormat",cdk.validateString)(properties.timeFormat)),errors.collect(cdk.propertyValidator("trimBlanks",cdk.validateBoolean)(properties.trimBlanks)),errors.collect(cdk.propertyValidator("truncateColumns",cdk.validateBoolean)(properties.truncateColumns)),errors.collect(cdk.propertyValidator("writeBufferSize",cdk.validateNumber)(properties.writeBufferSize)),errors.wrap('supplied properties not correct for "RedshiftSettingsProperty"')}function convertCfnEndpointRedshiftSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointRedshiftSettingsPropertyValidator(properties).assertSuccess(),{AcceptAnyDate:cdk.booleanToCloudFormation(properties.acceptAnyDate),AfterConnectScript:cdk.stringToCloudFormation(properties.afterConnectScript),BucketFolder:cdk.stringToCloudFormation(properties.bucketFolder),BucketName:cdk.stringToCloudFormation(properties.bucketName),CaseSensitiveNames:cdk.booleanToCloudFormation(properties.caseSensitiveNames),CompUpdate:cdk.booleanToCloudFormation(properties.compUpdate),ConnectionTimeout:cdk.numberToCloudFormation(properties.connectionTimeout),DateFormat:cdk.stringToCloudFormation(properties.dateFormat),EmptyAsNull:cdk.booleanToCloudFormation(properties.emptyAsNull),EncryptionMode:cdk.stringToCloudFormation(properties.encryptionMode),ExplicitIds:cdk.booleanToCloudFormation(properties.explicitIds),FileTransferUploadStreams:cdk.numberToCloudFormation(properties.fileTransferUploadStreams),LoadTimeout:cdk.numberToCloudFormation(properties.loadTimeout),MapBooleanAsBoolean:cdk.booleanToCloudFormation(properties.mapBooleanAsBoolean),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),RemoveQuotes:cdk.booleanToCloudFormation(properties.removeQuotes),ReplaceChars:cdk.stringToCloudFormation(properties.replaceChars),ReplaceInvalidChars:cdk.stringToCloudFormation(properties.replaceInvalidChars),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),ServerSideEncryptionKmsKeyId:cdk.stringToCloudFormation(properties.serverSideEncryptionKmsKeyId),ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn),TimeFormat:cdk.stringToCloudFormation(properties.timeFormat),TrimBlanks:cdk.booleanToCloudFormation(properties.trimBlanks),TruncateColumns:cdk.booleanToCloudFormation(properties.truncateColumns),WriteBufferSize:cdk.numberToCloudFormation(properties.writeBufferSize)}):properties}function CfnEndpointRedshiftSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("acceptAnyDate","AcceptAnyDate",properties.AcceptAnyDate!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AcceptAnyDate):void 0),ret.addPropertyResult("afterConnectScript","AfterConnectScript",properties.AfterConnectScript!=null?cfn_parse.FromCloudFormation.getString(properties.AfterConnectScript):void 0),ret.addPropertyResult("bucketFolder","BucketFolder",properties.BucketFolder!=null?cfn_parse.FromCloudFormation.getString(properties.BucketFolder):void 0),ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("caseSensitiveNames","CaseSensitiveNames",properties.CaseSensitiveNames!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CaseSensitiveNames):void 0),ret.addPropertyResult("compUpdate","CompUpdate",properties.CompUpdate!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CompUpdate):void 0),ret.addPropertyResult("connectionTimeout","ConnectionTimeout",properties.ConnectionTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ConnectionTimeout):void 0),ret.addPropertyResult("dateFormat","DateFormat",properties.DateFormat!=null?cfn_parse.FromCloudFormation.getString(properties.DateFormat):void 0),ret.addPropertyResult("emptyAsNull","EmptyAsNull",properties.EmptyAsNull!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EmptyAsNull):void 0),ret.addPropertyResult("encryptionMode","EncryptionMode",properties.EncryptionMode!=null?cfn_parse.FromCloudFormation.getString(properties.EncryptionMode):void 0),ret.addPropertyResult("explicitIds","ExplicitIds",properties.ExplicitIds!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ExplicitIds):void 0),ret.addPropertyResult("fileTransferUploadStreams","FileTransferUploadStreams",properties.FileTransferUploadStreams!=null?cfn_parse.FromCloudFormation.getNumber(properties.FileTransferUploadStreams):void 0),ret.addPropertyResult("loadTimeout","LoadTimeout",properties.LoadTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.LoadTimeout):void 0),ret.addPropertyResult("mapBooleanAsBoolean","MapBooleanAsBoolean",properties.MapBooleanAsBoolean!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MapBooleanAsBoolean):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("removeQuotes","RemoveQuotes",properties.RemoveQuotes!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RemoveQuotes):void 0),ret.addPropertyResult("replaceChars","ReplaceChars",properties.ReplaceChars!=null?cfn_parse.FromCloudFormation.getString(properties.ReplaceChars):void 0),ret.addPropertyResult("replaceInvalidChars","ReplaceInvalidChars",properties.ReplaceInvalidChars!=null?cfn_parse.FromCloudFormation.getString(properties.ReplaceInvalidChars):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("serverSideEncryptionKmsKeyId","ServerSideEncryptionKmsKeyId",properties.ServerSideEncryptionKmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.ServerSideEncryptionKmsKeyId):void 0),ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addPropertyResult("timeFormat","TimeFormat",properties.TimeFormat!=null?cfn_parse.FromCloudFormation.getString(properties.TimeFormat):void 0),ret.addPropertyResult("trimBlanks","TrimBlanks",properties.TrimBlanks!=null?cfn_parse.FromCloudFormation.getBoolean(properties.TrimBlanks):void 0),ret.addPropertyResult("truncateColumns","TruncateColumns",properties.TruncateColumns!=null?cfn_parse.FromCloudFormation.getBoolean(properties.TruncateColumns):void 0),ret.addPropertyResult("writeBufferSize","WriteBufferSize",properties.WriteBufferSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.WriteBufferSize):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointMongoDbSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authMechanism",cdk.validateString)(properties.authMechanism)),errors.collect(cdk.propertyValidator("authSource",cdk.validateString)(properties.authSource)),errors.collect(cdk.propertyValidator("authType",cdk.validateString)(properties.authType)),errors.collect(cdk.propertyValidator("databaseName",cdk.validateString)(properties.databaseName)),errors.collect(cdk.propertyValidator("docsToInvestigate",cdk.validateString)(properties.docsToInvestigate)),errors.collect(cdk.propertyValidator("extractDocId",cdk.validateString)(properties.extractDocId)),errors.collect(cdk.propertyValidator("nestingLevel",cdk.validateString)(properties.nestingLevel)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("serverName",cdk.validateString)(properties.serverName)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "MongoDbSettingsProperty"')}function convertCfnEndpointMongoDbSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointMongoDbSettingsPropertyValidator(properties).assertSuccess(),{AuthMechanism:cdk.stringToCloudFormation(properties.authMechanism),AuthSource:cdk.stringToCloudFormation(properties.authSource),AuthType:cdk.stringToCloudFormation(properties.authType),DatabaseName:cdk.stringToCloudFormation(properties.databaseName),DocsToInvestigate:cdk.stringToCloudFormation(properties.docsToInvestigate),ExtractDocId:cdk.stringToCloudFormation(properties.extractDocId),NestingLevel:cdk.stringToCloudFormation(properties.nestingLevel),Password:cdk.stringToCloudFormation(properties.password),Port:cdk.numberToCloudFormation(properties.port),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),ServerName:cdk.stringToCloudFormation(properties.serverName),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnEndpointMongoDbSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("authMechanism","AuthMechanism",properties.AuthMechanism!=null?cfn_parse.FromCloudFormation.getString(properties.AuthMechanism):void 0),ret.addPropertyResult("authSource","AuthSource",properties.AuthSource!=null?cfn_parse.FromCloudFormation.getString(properties.AuthSource):void 0),ret.addPropertyResult("authType","AuthType",properties.AuthType!=null?cfn_parse.FromCloudFormation.getString(properties.AuthType):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("docsToInvestigate","DocsToInvestigate",properties.DocsToInvestigate!=null?cfn_parse.FromCloudFormation.getString(properties.DocsToInvestigate):void 0),ret.addPropertyResult("extractDocId","ExtractDocId",properties.ExtractDocId!=null?cfn_parse.FromCloudFormation.getString(properties.ExtractDocId):void 0),ret.addPropertyResult("nestingLevel","NestingLevel",properties.NestingLevel!=null?cfn_parse.FromCloudFormation.getString(properties.NestingLevel):void 0),ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("serverName","ServerName",properties.ServerName!=null?cfn_parse.FromCloudFormation.getString(properties.ServerName):void 0),ret.addPropertyResult("username","Username",properties.Username!=null?cfn_parse.FromCloudFormation.getString(properties.Username):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointIbmDb2SettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("currentLsn",cdk.validateString)(properties.currentLsn)),errors.collect(cdk.propertyValidator("maxKBytesPerRead",cdk.validateNumber)(properties.maxKBytesPerRead)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("setDataCaptureChanges",cdk.validateBoolean)(properties.setDataCaptureChanges)),errors.wrap('supplied properties not correct for "IbmDb2SettingsProperty"')}function convertCfnEndpointIbmDb2SettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointIbmDb2SettingsPropertyValidator(properties).assertSuccess(),{CurrentLsn:cdk.stringToCloudFormation(properties.currentLsn),MaxKBytesPerRead:cdk.numberToCloudFormation(properties.maxKBytesPerRead),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),SetDataCaptureChanges:cdk.booleanToCloudFormation(properties.setDataCaptureChanges)}):properties}function CfnEndpointIbmDb2SettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("currentLsn","CurrentLsn",properties.CurrentLsn!=null?cfn_parse.FromCloudFormation.getString(properties.CurrentLsn):void 0),ret.addPropertyResult("maxKBytesPerRead","MaxKBytesPerRead",properties.MaxKBytesPerRead!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxKBytesPerRead):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("setDataCaptureChanges","SetDataCaptureChanges",properties.SetDataCaptureChanges!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SetDataCaptureChanges):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointNeptuneSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("errorRetryDuration",cdk.validateNumber)(properties.errorRetryDuration)),errors.collect(cdk.propertyValidator("iamAuthEnabled",cdk.validateBoolean)(properties.iamAuthEnabled)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("maxRetryCount",cdk.validateNumber)(properties.maxRetryCount)),errors.collect(cdk.propertyValidator("s3BucketFolder",cdk.validateString)(properties.s3BucketFolder)),errors.collect(cdk.propertyValidator("s3BucketName",cdk.validateString)(properties.s3BucketName)),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.wrap('supplied properties not correct for "NeptuneSettingsProperty"')}function convertCfnEndpointNeptuneSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointNeptuneSettingsPropertyValidator(properties).assertSuccess(),{ErrorRetryDuration:cdk.numberToCloudFormation(properties.errorRetryDuration),IamAuthEnabled:cdk.booleanToCloudFormation(properties.iamAuthEnabled),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),MaxRetryCount:cdk.numberToCloudFormation(properties.maxRetryCount),S3BucketFolder:cdk.stringToCloudFormation(properties.s3BucketFolder),S3BucketName:cdk.stringToCloudFormation(properties.s3BucketName),ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn)}):properties}function CfnEndpointNeptuneSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("errorRetryDuration","ErrorRetryDuration",properties.ErrorRetryDuration!=null?cfn_parse.FromCloudFormation.getNumber(properties.ErrorRetryDuration):void 0),ret.addPropertyResult("iamAuthEnabled","IamAuthEnabled",properties.IamAuthEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IamAuthEnabled):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("maxRetryCount","MaxRetryCount",properties.MaxRetryCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxRetryCount):void 0),ret.addPropertyResult("s3BucketFolder","S3BucketFolder",properties.S3BucketFolder!=null?cfn_parse.FromCloudFormation.getString(properties.S3BucketFolder):void 0),ret.addPropertyResult("s3BucketName","S3BucketName",properties.S3BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.S3BucketName):void 0),ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointElasticsearchSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("endpointUri",cdk.validateString)(properties.endpointUri)),errors.collect(cdk.propertyValidator("errorRetryDuration",cdk.validateNumber)(properties.errorRetryDuration)),errors.collect(cdk.propertyValidator("fullLoadErrorPercentage",cdk.validateNumber)(properties.fullLoadErrorPercentage)),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.wrap('supplied properties not correct for "ElasticsearchSettingsProperty"')}function convertCfnEndpointElasticsearchSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointElasticsearchSettingsPropertyValidator(properties).assertSuccess(),{EndpointUri:cdk.stringToCloudFormation(properties.endpointUri),ErrorRetryDuration:cdk.numberToCloudFormation(properties.errorRetryDuration),FullLoadErrorPercentage:cdk.numberToCloudFormation(properties.fullLoadErrorPercentage),ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn)}):properties}function CfnEndpointElasticsearchSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("endpointUri","EndpointUri",properties.EndpointUri!=null?cfn_parse.FromCloudFormation.getString(properties.EndpointUri):void 0),ret.addPropertyResult("errorRetryDuration","ErrorRetryDuration",properties.ErrorRetryDuration!=null?cfn_parse.FromCloudFormation.getNumber(properties.ErrorRetryDuration):void 0),ret.addPropertyResult("fullLoadErrorPercentage","FullLoadErrorPercentage",properties.FullLoadErrorPercentage!=null?cfn_parse.FromCloudFormation.getNumber(properties.FullLoadErrorPercentage):void 0),ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointDocDbSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("docsToInvestigate",cdk.validateNumber)(properties.docsToInvestigate)),errors.collect(cdk.propertyValidator("extractDocId",cdk.validateBoolean)(properties.extractDocId)),errors.collect(cdk.propertyValidator("nestingLevel",cdk.validateString)(properties.nestingLevel)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.wrap('supplied properties not correct for "DocDbSettingsProperty"')}function convertCfnEndpointDocDbSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointDocDbSettingsPropertyValidator(properties).assertSuccess(),{DocsToInvestigate:cdk.numberToCloudFormation(properties.docsToInvestigate),ExtractDocId:cdk.booleanToCloudFormation(properties.extractDocId),NestingLevel:cdk.stringToCloudFormation(properties.nestingLevel),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId)}):properties}function CfnEndpointDocDbSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("docsToInvestigate","DocsToInvestigate",properties.DocsToInvestigate!=null?cfn_parse.FromCloudFormation.getNumber(properties.DocsToInvestigate):void 0),ret.addPropertyResult("extractDocId","ExtractDocId",properties.ExtractDocId!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ExtractDocId):void 0),ret.addPropertyResult("nestingLevel","NestingLevel",properties.NestingLevel!=null?cfn_parse.FromCloudFormation.getString(properties.NestingLevel):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointDynamoDbSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("serviceAccessRoleArn",cdk.validateString)(properties.serviceAccessRoleArn)),errors.wrap('supplied properties not correct for "DynamoDbSettingsProperty"')}function convertCfnEndpointDynamoDbSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointDynamoDbSettingsPropertyValidator(properties).assertSuccess(),{ServiceAccessRoleArn:cdk.stringToCloudFormation(properties.serviceAccessRoleArn)}):properties}function CfnEndpointDynamoDbSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("serviceAccessRoleArn","ServiceAccessRoleArn",properties.ServiceAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointMicrosoftSqlServerSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bcpPacketSize",cdk.validateNumber)(properties.bcpPacketSize)),errors.collect(cdk.propertyValidator("controlTablesFileGroup",cdk.validateString)(properties.controlTablesFileGroup)),errors.collect(cdk.propertyValidator("querySingleAlwaysOnNode",cdk.validateBoolean)(properties.querySingleAlwaysOnNode)),errors.collect(cdk.propertyValidator("readBackupOnly",cdk.validateBoolean)(properties.readBackupOnly)),errors.collect(cdk.propertyValidator("safeguardPolicy",cdk.validateString)(properties.safeguardPolicy)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("useBcpFullLoad",cdk.validateBoolean)(properties.useBcpFullLoad)),errors.collect(cdk.propertyValidator("useThirdPartyBackupDevice",cdk.validateBoolean)(properties.useThirdPartyBackupDevice)),errors.wrap('supplied properties not correct for "MicrosoftSqlServerSettingsProperty"')}function convertCfnEndpointMicrosoftSqlServerSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointMicrosoftSqlServerSettingsPropertyValidator(properties).assertSuccess(),{BcpPacketSize:cdk.numberToCloudFormation(properties.bcpPacketSize),ControlTablesFileGroup:cdk.stringToCloudFormation(properties.controlTablesFileGroup),QuerySingleAlwaysOnNode:cdk.booleanToCloudFormation(properties.querySingleAlwaysOnNode),ReadBackupOnly:cdk.booleanToCloudFormation(properties.readBackupOnly),SafeguardPolicy:cdk.stringToCloudFormation(properties.safeguardPolicy),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),UseBcpFullLoad:cdk.booleanToCloudFormation(properties.useBcpFullLoad),UseThirdPartyBackupDevice:cdk.booleanToCloudFormation(properties.useThirdPartyBackupDevice)}):properties}function CfnEndpointMicrosoftSqlServerSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bcpPacketSize","BcpPacketSize",properties.BcpPacketSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.BcpPacketSize):void 0),ret.addPropertyResult("controlTablesFileGroup","ControlTablesFileGroup",properties.ControlTablesFileGroup!=null?cfn_parse.FromCloudFormation.getString(properties.ControlTablesFileGroup):void 0),ret.addPropertyResult("querySingleAlwaysOnNode","QuerySingleAlwaysOnNode",properties.QuerySingleAlwaysOnNode!=null?cfn_parse.FromCloudFormation.getBoolean(properties.QuerySingleAlwaysOnNode):void 0),ret.addPropertyResult("readBackupOnly","ReadBackupOnly",properties.ReadBackupOnly!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ReadBackupOnly):void 0),ret.addPropertyResult("safeguardPolicy","SafeguardPolicy",properties.SafeguardPolicy!=null?cfn_parse.FromCloudFormation.getString(properties.SafeguardPolicy):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("useBcpFullLoad","UseBcpFullLoad",properties.UseBcpFullLoad!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseBcpFullLoad):void 0),ret.addPropertyResult("useThirdPartyBackupDevice","UseThirdPartyBackupDevice",properties.UseThirdPartyBackupDevice!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseThirdPartyBackupDevice):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointGcpMySQLSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("afterConnectScript",cdk.validateString)(properties.afterConnectScript)),errors.collect(cdk.propertyValidator("cleanSourceMetadataOnMismatch",cdk.validateBoolean)(properties.cleanSourceMetadataOnMismatch)),errors.collect(cdk.propertyValidator("databaseName",cdk.validateString)(properties.databaseName)),errors.collect(cdk.propertyValidator("eventsPollInterval",cdk.validateNumber)(properties.eventsPollInterval)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("parallelLoadThreads",cdk.validateNumber)(properties.parallelLoadThreads)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("serverName",cdk.validateString)(properties.serverName)),errors.collect(cdk.propertyValidator("serverTimezone",cdk.validateString)(properties.serverTimezone)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "GcpMySQLSettingsProperty"')}function convertCfnEndpointGcpMySQLSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointGcpMySQLSettingsPropertyValidator(properties).assertSuccess(),{AfterConnectScript:cdk.stringToCloudFormation(properties.afterConnectScript),CleanSourceMetadataOnMismatch:cdk.booleanToCloudFormation(properties.cleanSourceMetadataOnMismatch),DatabaseName:cdk.stringToCloudFormation(properties.databaseName),EventsPollInterval:cdk.numberToCloudFormation(properties.eventsPollInterval),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),ParallelLoadThreads:cdk.numberToCloudFormation(properties.parallelLoadThreads),Password:cdk.stringToCloudFormation(properties.password),Port:cdk.numberToCloudFormation(properties.port),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),ServerName:cdk.stringToCloudFormation(properties.serverName),ServerTimezone:cdk.stringToCloudFormation(properties.serverTimezone),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnEndpointGcpMySQLSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("afterConnectScript","AfterConnectScript",properties.AfterConnectScript!=null?cfn_parse.FromCloudFormation.getString(properties.AfterConnectScript):void 0),ret.addPropertyResult("cleanSourceMetadataOnMismatch","CleanSourceMetadataOnMismatch",properties.CleanSourceMetadataOnMismatch!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CleanSourceMetadataOnMismatch):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("eventsPollInterval","EventsPollInterval",properties.EventsPollInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.EventsPollInterval):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("parallelLoadThreads","ParallelLoadThreads",properties.ParallelLoadThreads!=null?cfn_parse.FromCloudFormation.getNumber(properties.ParallelLoadThreads):void 0),ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("serverName","ServerName",properties.ServerName!=null?cfn_parse.FromCloudFormation.getString(properties.ServerName):void 0),ret.addPropertyResult("serverTimezone","ServerTimezone",properties.ServerTimezone!=null?cfn_parse.FromCloudFormation.getString(properties.ServerTimezone):void 0),ret.addPropertyResult("username","Username",properties.Username!=null?cfn_parse.FromCloudFormation.getString(properties.Username):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointPostgreSqlSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("afterConnectScript",cdk.validateString)(properties.afterConnectScript)),errors.collect(cdk.propertyValidator("captureDdls",cdk.validateBoolean)(properties.captureDdls)),errors.collect(cdk.propertyValidator("ddlArtifactsSchema",cdk.validateString)(properties.ddlArtifactsSchema)),errors.collect(cdk.propertyValidator("executeTimeout",cdk.validateNumber)(properties.executeTimeout)),errors.collect(cdk.propertyValidator("failTasksOnLobTruncation",cdk.validateBoolean)(properties.failTasksOnLobTruncation)),errors.collect(cdk.propertyValidator("heartbeatEnable",cdk.validateBoolean)(properties.heartbeatEnable)),errors.collect(cdk.propertyValidator("heartbeatFrequency",cdk.validateNumber)(properties.heartbeatFrequency)),errors.collect(cdk.propertyValidator("heartbeatSchema",cdk.validateString)(properties.heartbeatSchema)),errors.collect(cdk.propertyValidator("mapBooleanAsBoolean",cdk.validateBoolean)(properties.mapBooleanAsBoolean)),errors.collect(cdk.propertyValidator("maxFileSize",cdk.validateNumber)(properties.maxFileSize)),errors.collect(cdk.propertyValidator("pluginName",cdk.validateString)(properties.pluginName)),errors.collect(cdk.propertyValidator("secretsManagerAccessRoleArn",cdk.validateString)(properties.secretsManagerAccessRoleArn)),errors.collect(cdk.propertyValidator("secretsManagerSecretId",cdk.validateString)(properties.secretsManagerSecretId)),errors.collect(cdk.propertyValidator("slotName",cdk.validateString)(properties.slotName)),errors.wrap('supplied properties not correct for "PostgreSqlSettingsProperty"')}function convertCfnEndpointPostgreSqlSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointPostgreSqlSettingsPropertyValidator(properties).assertSuccess(),{AfterConnectScript:cdk.stringToCloudFormation(properties.afterConnectScript),CaptureDdls:cdk.booleanToCloudFormation(properties.captureDdls),DdlArtifactsSchema:cdk.stringToCloudFormation(properties.ddlArtifactsSchema),ExecuteTimeout:cdk.numberToCloudFormation(properties.executeTimeout),FailTasksOnLobTruncation:cdk.booleanToCloudFormation(properties.failTasksOnLobTruncation),HeartbeatEnable:cdk.booleanToCloudFormation(properties.heartbeatEnable),HeartbeatFrequency:cdk.numberToCloudFormation(properties.heartbeatFrequency),HeartbeatSchema:cdk.stringToCloudFormation(properties.heartbeatSchema),MapBooleanAsBoolean:cdk.booleanToCloudFormation(properties.mapBooleanAsBoolean),MaxFileSize:cdk.numberToCloudFormation(properties.maxFileSize),PluginName:cdk.stringToCloudFormation(properties.pluginName),SecretsManagerAccessRoleArn:cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),SecretsManagerSecretId:cdk.stringToCloudFormation(properties.secretsManagerSecretId),SlotName:cdk.stringToCloudFormation(properties.slotName)}):properties}function CfnEndpointPostgreSqlSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("afterConnectScript","AfterConnectScript",properties.AfterConnectScript!=null?cfn_parse.FromCloudFormation.getString(properties.AfterConnectScript):void 0),ret.addPropertyResult("captureDdls","CaptureDdls",properties.CaptureDdls!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CaptureDdls):void 0),ret.addPropertyResult("ddlArtifactsSchema","DdlArtifactsSchema",properties.DdlArtifactsSchema!=null?cfn_parse.FromCloudFormation.getString(properties.DdlArtifactsSchema):void 0),ret.addPropertyResult("executeTimeout","ExecuteTimeout",properties.ExecuteTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ExecuteTimeout):void 0),ret.addPropertyResult("failTasksOnLobTruncation","FailTasksOnLobTruncation",properties.FailTasksOnLobTruncation!=null?cfn_parse.FromCloudFormation.getBoolean(properties.FailTasksOnLobTruncation):void 0),ret.addPropertyResult("heartbeatEnable","HeartbeatEnable",properties.HeartbeatEnable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.HeartbeatEnable):void 0),ret.addPropertyResult("heartbeatFrequency","HeartbeatFrequency",properties.HeartbeatFrequency!=null?cfn_parse.FromCloudFormation.getNumber(properties.HeartbeatFrequency):void 0),ret.addPropertyResult("heartbeatSchema","HeartbeatSchema",properties.HeartbeatSchema!=null?cfn_parse.FromCloudFormation.getString(properties.HeartbeatSchema):void 0),ret.addPropertyResult("mapBooleanAsBoolean","MapBooleanAsBoolean",properties.MapBooleanAsBoolean!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MapBooleanAsBoolean):void 0),ret.addPropertyResult("maxFileSize","MaxFileSize",properties.MaxFileSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize):void 0),ret.addPropertyResult("pluginName","PluginName",properties.PluginName!=null?cfn_parse.FromCloudFormation.getString(properties.PluginName):void 0),ret.addPropertyResult("secretsManagerAccessRoleArn","SecretsManagerAccessRoleArn",properties.SecretsManagerAccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn):void 0),ret.addPropertyResult("secretsManagerSecretId","SecretsManagerSecretId",properties.SecretsManagerSecretId!=null?cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId):void 0),ret.addPropertyResult("slotName","SlotName",properties.SlotName!=null?cfn_parse.FromCloudFormation.getString(properties.SlotName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificateArn",cdk.validateString)(properties.certificateArn)),errors.collect(cdk.propertyValidator("databaseName",cdk.validateString)(properties.databaseName)),errors.collect(cdk.propertyValidator("docDbSettings",CfnEndpointDocDbSettingsPropertyValidator)(properties.docDbSettings)),errors.collect(cdk.propertyValidator("dynamoDbSettings",CfnEndpointDynamoDbSettingsPropertyValidator)(properties.dynamoDbSettings)),errors.collect(cdk.propertyValidator("elasticsearchSettings",CfnEndpointElasticsearchSettingsPropertyValidator)(properties.elasticsearchSettings)),errors.collect(cdk.propertyValidator("endpointIdentifier",cdk.validateString)(properties.endpointIdentifier)),errors.collect(cdk.propertyValidator("endpointType",cdk.requiredValidator)(properties.endpointType)),errors.collect(cdk.propertyValidator("endpointType",cdk.validateString)(properties.endpointType)),errors.collect(cdk.propertyValidator("engineName",cdk.requiredValidator)(properties.engineName)),errors.collect(cdk.propertyValidator("engineName",cdk.validateString)(properties.engineName)),errors.collect(cdk.propertyValidator("extraConnectionAttributes",cdk.validateString)(properties.extraConnectionAttributes)),errors.collect(cdk.propertyValidator("gcpMySqlSettings",CfnEndpointGcpMySQLSettingsPropertyValidator)(properties.gcpMySqlSettings)),errors.collect(cdk.propertyValidator("ibmDb2Settings",CfnEndpointIbmDb2SettingsPropertyValidator)(properties.ibmDb2Settings)),errors.collect(cdk.propertyValidator("kafkaSettings",CfnEndpointKafkaSettingsPropertyValidator)(properties.kafkaSettings)),errors.collect(cdk.propertyValidator("kinesisSettings",CfnEndpointKinesisSettingsPropertyValidator)(properties.kinesisSettings)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("microsoftSqlServerSettings",CfnEndpointMicrosoftSqlServerSettingsPropertyValidator)(properties.microsoftSqlServerSettings)),errors.collect(cdk.propertyValidator("mongoDbSettings",CfnEndpointMongoDbSettingsPropertyValidator)(properties.mongoDbSettings)),errors.collect(cdk.propertyValidator("mySqlSettings",CfnEndpointMySqlSettingsPropertyValidator)(properties.mySqlSettings)),errors.collect(cdk.propertyValidator("neptuneSettings",CfnEndpointNeptuneSettingsPropertyValidator)(properties.neptuneSettings)),errors.collect(cdk.propertyValidator("oracleSettings",CfnEndpointOracleSettingsPropertyValidator)(properties.oracleSettings)),errors.collect(cdk.propertyValidator("password",cdk.validateString)(properties.password)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("postgreSqlSettings",CfnEndpointPostgreSqlSettingsPropertyValidator)(properties.postgreSqlSettings)),errors.collect(cdk.propertyValidator("redisSettings",CfnEndpointRedisSettingsPropertyValidator)(properties.redisSettings)),errors.collect(cdk.propertyValidator("redshiftSettings",CfnEndpointRedshiftSettingsPropertyValidator)(properties.redshiftSettings)),errors.collect(cdk.propertyValidator("resourceIdentifier",cdk.validateString)(properties.resourceIdentifier)),errors.collect(cdk.propertyValidator("s3Settings",CfnEndpointS3SettingsPropertyValidator)(properties.s3Settings)),errors.collect(cdk.propertyValidator("serverName",cdk.validateString)(properties.serverName)),errors.collect(cdk.propertyValidator("sslMode",cdk.validateString)(properties.sslMode)),errors.collect(cdk.propertyValidator("sybaseSettings",CfnEndpointSybaseSettingsPropertyValidator)(properties.sybaseSettings)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("username",cdk.validateString)(properties.username)),errors.wrap('supplied properties not correct for "CfnEndpointProps"')}function convertCfnEndpointPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointPropsValidator(properties).assertSuccess(),{CertificateArn:cdk.stringToCloudFormation(properties.certificateArn),DatabaseName:cdk.stringToCloudFormation(properties.databaseName),DocDbSettings:convertCfnEndpointDocDbSettingsPropertyToCloudFormation(properties.docDbSettings),DynamoDbSettings:convertCfnEndpointDynamoDbSettingsPropertyToCloudFormation(properties.dynamoDbSettings),ElasticsearchSettings:convertCfnEndpointElasticsearchSettingsPropertyToCloudFormation(properties.elasticsearchSettings),EndpointIdentifier:cdk.stringToCloudFormation(properties.endpointIdentifier),EndpointType:cdk.stringToCloudFormation(properties.endpointType),EngineName:cdk.stringToCloudFormation(properties.engineName),ExtraConnectionAttributes:cdk.stringToCloudFormation(properties.extraConnectionAttributes),GcpMySQLSettings:convertCfnEndpointGcpMySQLSettingsPropertyToCloudFormation(properties.gcpMySqlSettings),IbmDb2Settings:convertCfnEndpointIbmDb2SettingsPropertyToCloudFormation(properties.ibmDb2Settings),KafkaSettings:convertCfnEndpointKafkaSettingsPropertyToCloudFormation(properties.kafkaSettings),KinesisSettings:convertCfnEndpointKinesisSettingsPropertyToCloudFormation(properties.kinesisSettings),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),MicrosoftSqlServerSettings:convertCfnEndpointMicrosoftSqlServerSettingsPropertyToCloudFormation(properties.microsoftSqlServerSettings),MongoDbSettings:convertCfnEndpointMongoDbSettingsPropertyToCloudFormation(properties.mongoDbSettings),MySqlSettings:convertCfnEndpointMySqlSettingsPropertyToCloudFormation(properties.mySqlSettings),NeptuneSettings:convertCfnEndpointNeptuneSettingsPropertyToCloudFormation(properties.neptuneSettings),OracleSettings:convertCfnEndpointOracleSettingsPropertyToCloudFormation(properties.oracleSettings),Password:cdk.stringToCloudFormation(properties.password),Port:cdk.numberToCloudFormation(properties.port),PostgreSqlSettings:convertCfnEndpointPostgreSqlSettingsPropertyToCloudFormation(properties.postgreSqlSettings),RedisSettings:convertCfnEndpointRedisSettingsPropertyToCloudFormation(properties.redisSettings),RedshiftSettings:convertCfnEndpointRedshiftSettingsPropertyToCloudFormation(properties.redshiftSettings),ResourceIdentifier:cdk.stringToCloudFormation(properties.resourceIdentifier),S3Settings:convertCfnEndpointS3SettingsPropertyToCloudFormation(properties.s3Settings),ServerName:cdk.stringToCloudFormation(properties.serverName),SslMode:cdk.stringToCloudFormation(properties.sslMode),SybaseSettings:convertCfnEndpointSybaseSettingsPropertyToCloudFormation(properties.sybaseSettings),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Username:cdk.stringToCloudFormation(properties.username)}):properties}function CfnEndpointPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateArn","CertificateArn",properties.CertificateArn!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateArn):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("docDbSettings","DocDbSettings",properties.DocDbSettings!=null?CfnEndpointDocDbSettingsPropertyFromCloudFormation(properties.DocDbSettings):void 0),ret.addPropertyResult("dynamoDbSettings","DynamoDbSettings",properties.DynamoDbSettings!=null?CfnEndpointDynamoDbSettingsPropertyFromCloudFormation(properties.DynamoDbSettings):void 0),ret.addPropertyResult("elasticsearchSettings","ElasticsearchSettings",properties.ElasticsearchSettings!=null?CfnEndpointElasticsearchSettingsPropertyFromCloudFormation(properties.ElasticsearchSettings):void 0),ret.addPropertyResult("endpointIdentifier","EndpointIdentifier",properties.EndpointIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.EndpointIdentifier):void 0),ret.addPropertyResult("endpointType","EndpointType",properties.EndpointType!=null?cfn_parse.FromCloudFormation.getString(properties.EndpointType):void 0),ret.addPropertyResult("engineName","EngineName",properties.EngineName!=null?cfn_parse.FromCloudFormation.getString(properties.EngineName):void 0),ret.addPropertyResult("extraConnectionAttributes","ExtraConnectionAttributes",properties.ExtraConnectionAttributes!=null?cfn_parse.FromCloudFormation.getString(properties.ExtraConnectionAttributes):void 0),ret.addPropertyResult("gcpMySqlSettings","GcpMySQLSettings",properties.GcpMySQLSettings!=null?CfnEndpointGcpMySQLSettingsPropertyFromCloudFormation(properties.GcpMySQLSettings):void 0),ret.addPropertyResult("ibmDb2Settings","IbmDb2Settings",properties.IbmDb2Settings!=null?CfnEndpointIbmDb2SettingsPropertyFromCloudFormation(properties.IbmDb2Settings):void 0),ret.addPropertyResult("kafkaSettings","KafkaSettings",properties.KafkaSettings!=null?CfnEndpointKafkaSettingsPropertyFromCloudFormation(properties.KafkaSettings):void 0),ret.addPropertyResult("kinesisSettings","KinesisSettings",properties.KinesisSettings!=null?CfnEndpointKinesisSettingsPropertyFromCloudFormation(properties.KinesisSettings):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("microsoftSqlServerSettings","MicrosoftSqlServerSettings",properties.MicrosoftSqlServerSettings!=null?CfnEndpointMicrosoftSqlServerSettingsPropertyFromCloudFormation(properties.MicrosoftSqlServerSettings):void 0),ret.addPropertyResult("mongoDbSettings","MongoDbSettings",properties.MongoDbSettings!=null?CfnEndpointMongoDbSettingsPropertyFromCloudFormation(properties.MongoDbSettings):void 0),ret.addPropertyResult("mySqlSettings","MySqlSettings",properties.MySqlSettings!=null?CfnEndpointMySqlSettingsPropertyFromCloudFormation(properties.MySqlSettings):void 0),ret.addPropertyResult("neptuneSettings","NeptuneSettings",properties.NeptuneSettings!=null?CfnEndpointNeptuneSettingsPropertyFromCloudFormation(properties.NeptuneSettings):void 0),ret.addPropertyResult("oracleSettings","OracleSettings",properties.OracleSettings!=null?CfnEndpointOracleSettingsPropertyFromCloudFormation(properties.OracleSettings):void 0),ret.addPropertyResult("password","Password",properties.Password!=null?cfn_parse.FromCloudFormation.getString(properties.Password):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("postgreSqlSettings","PostgreSqlSettings",properties.PostgreSqlSettings!=null?CfnEndpointPostgreSqlSettingsPropertyFromCloudFormation(properties.PostgreSqlSettings):void 0),ret.addPropertyResult("redisSettings","RedisSettings",properties.RedisSettings!=null?CfnEndpointRedisSettingsPropertyFromCloudFormation(properties.RedisSettings):void 0),ret.addPropertyResult("redshiftSettings","RedshiftSettings",properties.RedshiftSettings!=null?CfnEndpointRedshiftSettingsPropertyFromCloudFormation(properties.RedshiftSettings):void 0),ret.addPropertyResult("resourceIdentifier","ResourceIdentifier",properties.ResourceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier):void 0),ret.addPropertyResult("s3Settings","S3Settings",properties.S3Settings!=null?CfnEndpointS3SettingsPropertyFromCloudFormation(properties.S3Settings):void 0),ret.addPropertyResult("serverName","ServerName",properties.ServerName!=null?cfn_parse.FromCloudFormation.getString(properties.ServerName):void 0),ret.addPropertyResult("sslMode","SslMode",properties.SslMode!=null?cfn_parse.FromCloudFormation.getString(properties.SslMode):void 0),ret.addPropertyResult("sybaseSettings","SybaseSettings",properties.SybaseSettings!=null?CfnEndpointSybaseSettingsPropertyFromCloudFormation(properties.SybaseSettings):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("username","Username",properties.Username!=null?cfn_parse.FromCloudFormation.getString(properties.Username):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEventSubscription extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEventSubscriptionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEventSubscription(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEventSubscription.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnEventSubscriptionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEventSubscription),error}cdk.requireProperty(props,"snsTopicArn",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.enabled=props.enabled,this.eventCategories=props.eventCategories,this.snsTopicArn=props.snsTopicArn,this.sourceIds=props.sourceIds,this.sourceType=props.sourceType,this.subscriptionName=props.subscriptionName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DMS::EventSubscription",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{enabled:this.enabled,eventCategories:this.eventCategories,snsTopicArn:this.snsTopicArn,sourceIds:this.sourceIds,sourceType:this.sourceType,subscriptionName:this.subscriptionName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEventSubscription.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEventSubscriptionPropsToCloudFormation(props)}}exports.CfnEventSubscription=CfnEventSubscription,_c=JSII_RTTI_SYMBOL_1,CfnEventSubscription[_c]={fqn:"aws-cdk-lib.aws_dms.CfnEventSubscription",version:"2.94.0"},CfnEventSubscription.CFN_RESOURCE_TYPE_NAME="AWS::DMS::EventSubscription";function CfnEventSubscriptionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("enabled",cdk.validateBoolean)(properties.enabled)),errors.collect(cdk.propertyValidator("eventCategories",cdk.listValidator(cdk.validateString))(properties.eventCategories)),errors.collect(cdk.propertyValidator("snsTopicArn",cdk.requiredValidator)(properties.snsTopicArn)),errors.collect(cdk.propertyValidator("snsTopicArn",cdk.validateString)(properties.snsTopicArn)),errors.collect(cdk.propertyValidator("sourceIds",cdk.listValidator(cdk.validateString))(properties.sourceIds)),errors.collect(cdk.propertyValidator("sourceType",cdk.validateString)(properties.sourceType)),errors.collect(cdk.propertyValidator("subscriptionName",cdk.validateString)(properties.subscriptionName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnEventSubscriptionProps"')}function convertCfnEventSubscriptionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEventSubscriptionPropsValidator(properties).assertSuccess(),{Enabled:cdk.booleanToCloudFormation(properties.enabled),EventCategories:cdk.listMapper(cdk.stringToCloudFormation)(properties.eventCategories),SnsTopicArn:cdk.stringToCloudFormation(properties.snsTopicArn),SourceIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceIds),SourceType:cdk.stringToCloudFormation(properties.sourceType),SubscriptionName:cdk.stringToCloudFormation(properties.subscriptionName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnEventSubscriptionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("enabled","Enabled",properties.Enabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enabled):void 0),ret.addPropertyResult("eventCategories","EventCategories",properties.EventCategories!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EventCategories):void 0),ret.addPropertyResult("snsTopicArn","SnsTopicArn",properties.SnsTopicArn!=null?cfn_parse.FromCloudFormation.getString(properties.SnsTopicArn):void 0),ret.addPropertyResult("sourceIds","SourceIds",properties.SourceIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SourceIds):void 0),ret.addPropertyResult("sourceType","SourceType",properties.SourceType!=null?cfn_parse.FromCloudFormation.getString(properties.SourceType):void 0),ret.addPropertyResult("subscriptionName","SubscriptionName",properties.SubscriptionName!=null?cfn_parse.FromCloudFormation.getString(properties.SubscriptionName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationConfig extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationConfigPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationConfig(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnReplicationConfig.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnReplicationConfigProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationConfig),error}this.attrReplicationConfigArn=cdk.Token.asString(this.getAtt("ReplicationConfigArn",cdk.ResolutionTypeHint.STRING)),this.computeConfig=props.computeConfig,this.replicationConfigArn=props.replicationConfigArn,this.replicationConfigIdentifier=props.replicationConfigIdentifier,this.replicationSettings=props.replicationSettings,this.replicationType=props.replicationType,this.resourceIdentifier=props.resourceIdentifier,this.sourceEndpointArn=props.sourceEndpointArn,this.supplementalSettings=props.supplementalSettings,this.tableMappings=props.tableMappings,this.tags=props.tags,this.targetEndpointArn=props.targetEndpointArn}get cfnProperties(){return{computeConfig:this.computeConfig,replicationConfigArn:this.replicationConfigArn,replicationConfigIdentifier:this.replicationConfigIdentifier,replicationSettings:this.replicationSettings,replicationType:this.replicationType,resourceIdentifier:this.resourceIdentifier,sourceEndpointArn:this.sourceEndpointArn,supplementalSettings:this.supplementalSettings,tableMappings:this.tableMappings,tags:this.tags,targetEndpointArn:this.targetEndpointArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationConfig.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationConfigPropsToCloudFormation(props)}}exports.CfnReplicationConfig=CfnReplicationConfig,_d=JSII_RTTI_SYMBOL_1,CfnReplicationConfig[_d]={fqn:"aws-cdk-lib.aws_dms.CfnReplicationConfig",version:"2.94.0"},CfnReplicationConfig.CFN_RESOURCE_TYPE_NAME="AWS::DMS::ReplicationConfig";function CfnReplicationConfigComputeConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("dnsNameServers",cdk.validateString)(properties.dnsNameServers)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("maxCapacityUnits",cdk.requiredValidator)(properties.maxCapacityUnits)),errors.collect(cdk.propertyValidator("maxCapacityUnits",cdk.validateNumber)(properties.maxCapacityUnits)),errors.collect(cdk.propertyValidator("minCapacityUnits",cdk.validateNumber)(properties.minCapacityUnits)),errors.collect(cdk.propertyValidator("multiAz",cdk.validateBoolean)(properties.multiAz)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("replicationSubnetGroupId",cdk.validateString)(properties.replicationSubnetGroupId)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "ComputeConfigProperty"')}function convertCfnReplicationConfigComputeConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigComputeConfigPropertyValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),DnsNameServers:cdk.stringToCloudFormation(properties.dnsNameServers),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),MaxCapacityUnits:cdk.numberToCloudFormation(properties.maxCapacityUnits),MinCapacityUnits:cdk.numberToCloudFormation(properties.minCapacityUnits),MultiAZ:cdk.booleanToCloudFormation(properties.multiAz),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),ReplicationSubnetGroupId:cdk.stringToCloudFormation(properties.replicationSubnetGroupId),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnReplicationConfigComputeConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("dnsNameServers","DnsNameServers",properties.DnsNameServers!=null?cfn_parse.FromCloudFormation.getString(properties.DnsNameServers):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("maxCapacityUnits","MaxCapacityUnits",properties.MaxCapacityUnits!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacityUnits):void 0),ret.addPropertyResult("minCapacityUnits","MinCapacityUnits",properties.MinCapacityUnits!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinCapacityUnits):void 0),ret.addPropertyResult("multiAz","MultiAZ",properties.MultiAZ!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZ):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("replicationSubnetGroupId","ReplicationSubnetGroupId",properties.ReplicationSubnetGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupId):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfigPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("computeConfig",CfnReplicationConfigComputeConfigPropertyValidator)(properties.computeConfig)),errors.collect(cdk.propertyValidator("replicationConfigArn",cdk.validateString)(properties.replicationConfigArn)),errors.collect(cdk.propertyValidator("replicationConfigIdentifier",cdk.validateString)(properties.replicationConfigIdentifier)),errors.collect(cdk.propertyValidator("replicationSettings",cdk.validateObject)(properties.replicationSettings)),errors.collect(cdk.propertyValidator("replicationType",cdk.validateString)(properties.replicationType)),errors.collect(cdk.propertyValidator("resourceIdentifier",cdk.validateString)(properties.resourceIdentifier)),errors.collect(cdk.propertyValidator("sourceEndpointArn",cdk.validateString)(properties.sourceEndpointArn)),errors.collect(cdk.propertyValidator("supplementalSettings",cdk.validateObject)(properties.supplementalSettings)),errors.collect(cdk.propertyValidator("tableMappings",cdk.validateObject)(properties.tableMappings)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("targetEndpointArn",cdk.validateString)(properties.targetEndpointArn)),errors.wrap('supplied properties not correct for "CfnReplicationConfigProps"')}function convertCfnReplicationConfigPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigPropsValidator(properties).assertSuccess(),{ComputeConfig:convertCfnReplicationConfigComputeConfigPropertyToCloudFormation(properties.computeConfig),ReplicationConfigArn:cdk.stringToCloudFormation(properties.replicationConfigArn),ReplicationConfigIdentifier:cdk.stringToCloudFormation(properties.replicationConfigIdentifier),ReplicationSettings:cdk.objectToCloudFormation(properties.replicationSettings),ReplicationType:cdk.stringToCloudFormation(properties.replicationType),ResourceIdentifier:cdk.stringToCloudFormation(properties.resourceIdentifier),SourceEndpointArn:cdk.stringToCloudFormation(properties.sourceEndpointArn),SupplementalSettings:cdk.objectToCloudFormation(properties.supplementalSettings),TableMappings:cdk.objectToCloudFormation(properties.tableMappings),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TargetEndpointArn:cdk.stringToCloudFormation(properties.targetEndpointArn)}):properties}function CfnReplicationConfigPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("computeConfig","ComputeConfig",properties.ComputeConfig!=null?CfnReplicationConfigComputeConfigPropertyFromCloudFormation(properties.ComputeConfig):void 0),ret.addPropertyResult("replicationConfigArn","ReplicationConfigArn",properties.ReplicationConfigArn!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationConfigArn):void 0),ret.addPropertyResult("replicationConfigIdentifier","ReplicationConfigIdentifier",properties.ReplicationConfigIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationConfigIdentifier):void 0),ret.addPropertyResult("replicationSettings","ReplicationSettings",properties.ReplicationSettings!=null?cfn_parse.FromCloudFormation.getAny(properties.ReplicationSettings):void 0),ret.addPropertyResult("replicationType","ReplicationType",properties.ReplicationType!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationType):void 0),ret.addPropertyResult("resourceIdentifier","ResourceIdentifier",properties.ResourceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier):void 0),ret.addPropertyResult("sourceEndpointArn","SourceEndpointArn",properties.SourceEndpointArn!=null?cfn_parse.FromCloudFormation.getString(properties.SourceEndpointArn):void 0),ret.addPropertyResult("supplementalSettings","SupplementalSettings",properties.SupplementalSettings!=null?cfn_parse.FromCloudFormation.getAny(properties.SupplementalSettings):void 0),ret.addPropertyResult("tableMappings","TableMappings",properties.TableMappings!=null?cfn_parse.FromCloudFormation.getAny(properties.TableMappings):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("targetEndpointArn","TargetEndpointArn",properties.TargetEndpointArn!=null?cfn_parse.FromCloudFormation.getString(properties.TargetEndpointArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationInstance extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationInstancePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationInstance(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReplicationInstance.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnReplicationInstanceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationInstance),error}cdk.requireProperty(props,"replicationInstanceClass",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrReplicationInstancePrivateIpAddresses=cdk.Token.asString(this.getAtt("ReplicationInstancePrivateIpAddresses",cdk.ResolutionTypeHint.STRING)),this.attrReplicationInstancePublicIpAddresses=cdk.Token.asString(this.getAtt("ReplicationInstancePublicIpAddresses",cdk.ResolutionTypeHint.STRING)),this.allocatedStorage=props.allocatedStorage,this.allowMajorVersionUpgrade=props.allowMajorVersionUpgrade,this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.availabilityZone=props.availabilityZone,this.engineVersion=props.engineVersion,this.kmsKeyId=props.kmsKeyId,this.multiAz=props.multiAz,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.publiclyAccessible=props.publiclyAccessible,this.replicationInstanceClass=props.replicationInstanceClass,this.replicationInstanceIdentifier=props.replicationInstanceIdentifier,this.replicationSubnetGroupIdentifier=props.replicationSubnetGroupIdentifier,this.resourceIdentifier=props.resourceIdentifier,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DMS::ReplicationInstance",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds}get cfnProperties(){return{allocatedStorage:this.allocatedStorage,allowMajorVersionUpgrade:this.allowMajorVersionUpgrade,autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,availabilityZone:this.availabilityZone,engineVersion:this.engineVersion,kmsKeyId:this.kmsKeyId,multiAz:this.multiAz,preferredMaintenanceWindow:this.preferredMaintenanceWindow,publiclyAccessible:this.publiclyAccessible,replicationInstanceClass:this.replicationInstanceClass,replicationInstanceIdentifier:this.replicationInstanceIdentifier,replicationSubnetGroupIdentifier:this.replicationSubnetGroupIdentifier,resourceIdentifier:this.resourceIdentifier,tags:this.tags.renderTags(),vpcSecurityGroupIds:this.vpcSecurityGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationInstance.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationInstancePropsToCloudFormation(props)}}exports.CfnReplicationInstance=CfnReplicationInstance,_e=JSII_RTTI_SYMBOL_1,CfnReplicationInstance[_e]={fqn:"aws-cdk-lib.aws_dms.CfnReplicationInstance",version:"2.94.0"},CfnReplicationInstance.CFN_RESOURCE_TYPE_NAME="AWS::DMS::ReplicationInstance";function CfnReplicationInstancePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allocatedStorage",cdk.validateNumber)(properties.allocatedStorage)),errors.collect(cdk.propertyValidator("allowMajorVersionUpgrade",cdk.validateBoolean)(properties.allowMajorVersionUpgrade)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("multiAz",cdk.validateBoolean)(properties.multiAz)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("replicationInstanceClass",cdk.requiredValidator)(properties.replicationInstanceClass)),errors.collect(cdk.propertyValidator("replicationInstanceClass",cdk.validateString)(properties.replicationInstanceClass)),errors.collect(cdk.propertyValidator("replicationInstanceIdentifier",cdk.validateString)(properties.replicationInstanceIdentifier)),errors.collect(cdk.propertyValidator("replicationSubnetGroupIdentifier",cdk.validateString)(properties.replicationSubnetGroupIdentifier)),errors.collect(cdk.propertyValidator("resourceIdentifier",cdk.validateString)(properties.resourceIdentifier)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnReplicationInstanceProps"')}function convertCfnReplicationInstancePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationInstancePropsValidator(properties).assertSuccess(),{AllocatedStorage:cdk.numberToCloudFormation(properties.allocatedStorage),AllowMajorVersionUpgrade:cdk.booleanToCloudFormation(properties.allowMajorVersionUpgrade),AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),MultiAZ:cdk.booleanToCloudFormation(properties.multiAz),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),ReplicationInstanceClass:cdk.stringToCloudFormation(properties.replicationInstanceClass),ReplicationInstanceIdentifier:cdk.stringToCloudFormation(properties.replicationInstanceIdentifier),ReplicationSubnetGroupIdentifier:cdk.stringToCloudFormation(properties.replicationSubnetGroupIdentifier),ResourceIdentifier:cdk.stringToCloudFormation(properties.resourceIdentifier),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnReplicationInstancePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allocatedStorage","AllocatedStorage",properties.AllocatedStorage!=null?cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage):void 0),ret.addPropertyResult("allowMajorVersionUpgrade","AllowMajorVersionUpgrade",properties.AllowMajorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowMajorVersionUpgrade):void 0),ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",properties.AutoMinorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("multiAz","MultiAZ",properties.MultiAZ!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZ):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",properties.PubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible):void 0),ret.addPropertyResult("replicationInstanceClass","ReplicationInstanceClass",properties.ReplicationInstanceClass!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceClass):void 0),ret.addPropertyResult("replicationInstanceIdentifier","ReplicationInstanceIdentifier",properties.ReplicationInstanceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceIdentifier):void 0),ret.addPropertyResult("replicationSubnetGroupIdentifier","ReplicationSubnetGroupIdentifier",properties.ReplicationSubnetGroupIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupIdentifier):void 0),ret.addPropertyResult("resourceIdentifier","ResourceIdentifier",properties.ResourceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationSubnetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationSubnetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationSubnetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReplicationSubnetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnReplicationSubnetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationSubnetGroup),error}cdk.requireProperty(props,"replicationSubnetGroupDescription",this),cdk.requireProperty(props,"subnetIds",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.replicationSubnetGroupDescription=props.replicationSubnetGroupDescription,this.replicationSubnetGroupIdentifier=props.replicationSubnetGroupIdentifier,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DMS::ReplicationSubnetGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{replicationSubnetGroupDescription:this.replicationSubnetGroupDescription,replicationSubnetGroupIdentifier:this.replicationSubnetGroupIdentifier,subnetIds:this.subnetIds,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationSubnetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationSubnetGroupPropsToCloudFormation(props)}}exports.CfnReplicationSubnetGroup=CfnReplicationSubnetGroup,_f=JSII_RTTI_SYMBOL_1,CfnReplicationSubnetGroup[_f]={fqn:"aws-cdk-lib.aws_dms.CfnReplicationSubnetGroup",version:"2.94.0"},CfnReplicationSubnetGroup.CFN_RESOURCE_TYPE_NAME="AWS::DMS::ReplicationSubnetGroup";function CfnReplicationSubnetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("replicationSubnetGroupDescription",cdk.requiredValidator)(properties.replicationSubnetGroupDescription)),errors.collect(cdk.propertyValidator("replicationSubnetGroupDescription",cdk.validateString)(properties.replicationSubnetGroupDescription)),errors.collect(cdk.propertyValidator("replicationSubnetGroupIdentifier",cdk.validateString)(properties.replicationSubnetGroupIdentifier)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnReplicationSubnetGroupProps"')}function convertCfnReplicationSubnetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationSubnetGroupPropsValidator(properties).assertSuccess(),{ReplicationSubnetGroupDescription:cdk.stringToCloudFormation(properties.replicationSubnetGroupDescription),ReplicationSubnetGroupIdentifier:cdk.stringToCloudFormation(properties.replicationSubnetGroupIdentifier),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnReplicationSubnetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("replicationSubnetGroupDescription","ReplicationSubnetGroupDescription",properties.ReplicationSubnetGroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupDescription):void 0),ret.addPropertyResult("replicationSubnetGroupIdentifier","ReplicationSubnetGroupIdentifier",properties.ReplicationSubnetGroupIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupIdentifier):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationTask extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationTaskPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationTask(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReplicationTask.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_dms_CfnReplicationTaskProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationTask),error}cdk.requireProperty(props,"migrationType",this),cdk.requireProperty(props,"replicationInstanceArn",this),cdk.requireProperty(props,"sourceEndpointArn",this),cdk.requireProperty(props,"tableMappings",this),cdk.requireProperty(props,"targetEndpointArn",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.cdcStartPosition=props.cdcStartPosition,this.cdcStartTime=props.cdcStartTime,this.cdcStopPosition=props.cdcStopPosition,this.migrationType=props.migrationType,this.replicationInstanceArn=props.replicationInstanceArn,this.replicationTaskIdentifier=props.replicationTaskIdentifier,this.replicationTaskSettings=props.replicationTaskSettings,this.resourceIdentifier=props.resourceIdentifier,this.sourceEndpointArn=props.sourceEndpointArn,this.tableMappings=props.tableMappings,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DMS::ReplicationTask",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.targetEndpointArn=props.targetEndpointArn,this.taskData=props.taskData}get cfnProperties(){return{cdcStartPosition:this.cdcStartPosition,cdcStartTime:this.cdcStartTime,cdcStopPosition:this.cdcStopPosition,migrationType:this.migrationType,replicationInstanceArn:this.replicationInstanceArn,replicationTaskIdentifier:this.replicationTaskIdentifier,replicationTaskSettings:this.replicationTaskSettings,resourceIdentifier:this.resourceIdentifier,sourceEndpointArn:this.sourceEndpointArn,tableMappings:this.tableMappings,tags:this.tags.renderTags(),targetEndpointArn:this.targetEndpointArn,taskData:this.taskData}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationTask.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationTaskPropsToCloudFormation(props)}}exports.CfnReplicationTask=CfnReplicationTask,_g=JSII_RTTI_SYMBOL_1,CfnReplicationTask[_g]={fqn:"aws-cdk-lib.aws_dms.CfnReplicationTask",version:"2.94.0"},CfnReplicationTask.CFN_RESOURCE_TYPE_NAME="AWS::DMS::ReplicationTask";function CfnReplicationTaskPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cdcStartPosition",cdk.validateString)(properties.cdcStartPosition)),errors.collect(cdk.propertyValidator("cdcStartTime",cdk.validateNumber)(properties.cdcStartTime)),errors.collect(cdk.propertyValidator("cdcStopPosition",cdk.validateString)(properties.cdcStopPosition)),errors.collect(cdk.propertyValidator("migrationType",cdk.requiredValidator)(properties.migrationType)),errors.collect(cdk.propertyValidator("migrationType",cdk.validateString)(properties.migrationType)),errors.collect(cdk.propertyValidator("replicationInstanceArn",cdk.requiredValidator)(properties.replicationInstanceArn)),errors.collect(cdk.propertyValidator("replicationInstanceArn",cdk.validateString)(properties.replicationInstanceArn)),errors.collect(cdk.propertyValidator("replicationTaskIdentifier",cdk.validateString)(properties.replicationTaskIdentifier)),errors.collect(cdk.propertyValidator("replicationTaskSettings",cdk.validateString)(properties.replicationTaskSettings)),errors.collect(cdk.propertyValidator("resourceIdentifier",cdk.validateString)(properties.resourceIdentifier)),errors.collect(cdk.propertyValidator("sourceEndpointArn",cdk.requiredValidator)(properties.sourceEndpointArn)),errors.collect(cdk.propertyValidator("sourceEndpointArn",cdk.validateString)(properties.sourceEndpointArn)),errors.collect(cdk.propertyValidator("tableMappings",cdk.requiredValidator)(properties.tableMappings)),errors.collect(cdk.propertyValidator("tableMappings",cdk.validateString)(properties.tableMappings)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("targetEndpointArn",cdk.requiredValidator)(properties.targetEndpointArn)),errors.collect(cdk.propertyValidator("targetEndpointArn",cdk.validateString)(properties.targetEndpointArn)),errors.collect(cdk.propertyValidator("taskData",cdk.validateString)(properties.taskData)),errors.wrap('supplied properties not correct for "CfnReplicationTaskProps"')}function convertCfnReplicationTaskPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationTaskPropsValidator(properties).assertSuccess(),{CdcStartPosition:cdk.stringToCloudFormation(properties.cdcStartPosition),CdcStartTime:cdk.numberToCloudFormation(properties.cdcStartTime),CdcStopPosition:cdk.stringToCloudFormation(properties.cdcStopPosition),MigrationType:cdk.stringToCloudFormation(properties.migrationType),ReplicationInstanceArn:cdk.stringToCloudFormation(properties.replicationInstanceArn),ReplicationTaskIdentifier:cdk.stringToCloudFormation(properties.replicationTaskIdentifier),ReplicationTaskSettings:cdk.stringToCloudFormation(properties.replicationTaskSettings),ResourceIdentifier:cdk.stringToCloudFormation(properties.resourceIdentifier),SourceEndpointArn:cdk.stringToCloudFormation(properties.sourceEndpointArn),TableMappings:cdk.stringToCloudFormation(properties.tableMappings),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TargetEndpointArn:cdk.stringToCloudFormation(properties.targetEndpointArn),TaskData:cdk.stringToCloudFormation(properties.taskData)}):properties}function CfnReplicationTaskPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cdcStartPosition","CdcStartPosition",properties.CdcStartPosition!=null?cfn_parse.FromCloudFormation.getString(properties.CdcStartPosition):void 0),ret.addPropertyResult("cdcStartTime","CdcStartTime",properties.CdcStartTime!=null?cfn_parse.FromCloudFormation.getNumber(properties.CdcStartTime):void 0),ret.addPropertyResult("cdcStopPosition","CdcStopPosition",properties.CdcStopPosition!=null?cfn_parse.FromCloudFormation.getString(properties.CdcStopPosition):void 0),ret.addPropertyResult("migrationType","MigrationType",properties.MigrationType!=null?cfn_parse.FromCloudFormation.getString(properties.MigrationType):void 0),ret.addPropertyResult("replicationInstanceArn","ReplicationInstanceArn",properties.ReplicationInstanceArn!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceArn):void 0),ret.addPropertyResult("replicationTaskIdentifier","ReplicationTaskIdentifier",properties.ReplicationTaskIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationTaskIdentifier):void 0),ret.addPropertyResult("replicationTaskSettings","ReplicationTaskSettings",properties.ReplicationTaskSettings!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationTaskSettings):void 0),ret.addPropertyResult("resourceIdentifier","ResourceIdentifier",properties.ResourceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier):void 0),ret.addPropertyResult("sourceEndpointArn","SourceEndpointArn",properties.SourceEndpointArn!=null?cfn_parse.FromCloudFormation.getString(properties.SourceEndpointArn):void 0),ret.addPropertyResult("tableMappings","TableMappings",properties.TableMappings!=null?cfn_parse.FromCloudFormation.getString(properties.TableMappings):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("targetEndpointArn","TargetEndpointArn",properties.TargetEndpointArn!=null?cfn_parse.FromCloudFormation.getString(properties.TargetEndpointArn):void 0),ret.addPropertyResult("taskData","TaskData",properties.TaskData!=null?cfn_parse.FromCloudFormation.getString(properties.TaskData):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
