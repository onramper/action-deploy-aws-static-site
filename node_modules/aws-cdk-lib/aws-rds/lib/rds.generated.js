"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnOptionGroup=exports.CfnGlobalCluster=exports.CfnEventSubscription=exports.CfnDBSubnetGroup=exports.CfnDBSecurityGroupIngress=exports.CfnDBSecurityGroup=exports.CfnDBProxyTargetGroup=exports.CfnDBProxyEndpoint=exports.CfnDBProxy=exports.CfnDBParameterGroup=exports.CfnDBInstance=exports.CfnDBClusterParameterGroup=exports.CfnDBCluster=exports.CfnCustomDBEngineVersion=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCustomDBEngineVersion extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCustomDBEngineVersionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCustomDBEngineVersion(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCustomDBEngineVersion.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnCustomDBEngineVersionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCustomDBEngineVersion),error}cdk.requireProperty(props,"databaseInstallationFilesS3BucketName",this),cdk.requireProperty(props,"engine",this),cdk.requireProperty(props,"engineVersion",this),this.attrDbEngineVersionArn=cdk.Token.asString(this.getAtt("DBEngineVersionArn",cdk.ResolutionTypeHint.STRING)),this.databaseInstallationFilesS3BucketName=props.databaseInstallationFilesS3BucketName,this.databaseInstallationFilesS3Prefix=props.databaseInstallationFilesS3Prefix,this.description=props.description,this.engine=props.engine,this.engineVersion=props.engineVersion,this.kmsKeyId=props.kmsKeyId,this.manifest=props.manifest,this.status=props.status,this.tags=props.tags}get cfnProperties(){return{databaseInstallationFilesS3BucketName:this.databaseInstallationFilesS3BucketName,databaseInstallationFilesS3Prefix:this.databaseInstallationFilesS3Prefix,description:this.description,engine:this.engine,engineVersion:this.engineVersion,kmsKeyId:this.kmsKeyId,manifest:this.manifest,status:this.status,tags:this.tags}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCustomDBEngineVersion.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCustomDBEngineVersionPropsToCloudFormation(props)}}exports.CfnCustomDBEngineVersion=CfnCustomDBEngineVersion,_a=JSII_RTTI_SYMBOL_1,CfnCustomDBEngineVersion[_a]={fqn:"aws-cdk-lib.aws_rds.CfnCustomDBEngineVersion",version:"2.94.0"},CfnCustomDBEngineVersion.CFN_RESOURCE_TYPE_NAME="AWS::RDS::CustomDBEngineVersion";function CfnCustomDBEngineVersionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("databaseInstallationFilesS3BucketName",cdk.requiredValidator)(properties.databaseInstallationFilesS3BucketName)),errors.collect(cdk.propertyValidator("databaseInstallationFilesS3BucketName",cdk.validateString)(properties.databaseInstallationFilesS3BucketName)),errors.collect(cdk.propertyValidator("databaseInstallationFilesS3Prefix",cdk.validateString)(properties.databaseInstallationFilesS3Prefix)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("engine",cdk.requiredValidator)(properties.engine)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineVersion",cdk.requiredValidator)(properties.engineVersion)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("manifest",cdk.validateString)(properties.manifest)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnCustomDBEngineVersionProps"')}function convertCfnCustomDBEngineVersionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCustomDBEngineVersionPropsValidator(properties).assertSuccess(),{DatabaseInstallationFilesS3BucketName:cdk.stringToCloudFormation(properties.databaseInstallationFilesS3BucketName),DatabaseInstallationFilesS3Prefix:cdk.stringToCloudFormation(properties.databaseInstallationFilesS3Prefix),Description:cdk.stringToCloudFormation(properties.description),Engine:cdk.stringToCloudFormation(properties.engine),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),KMSKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),Manifest:cdk.stringToCloudFormation(properties.manifest),Status:cdk.stringToCloudFormation(properties.status),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnCustomDBEngineVersionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("databaseInstallationFilesS3BucketName","DatabaseInstallationFilesS3BucketName",properties.DatabaseInstallationFilesS3BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseInstallationFilesS3BucketName):void 0),ret.addPropertyResult("databaseInstallationFilesS3Prefix","DatabaseInstallationFilesS3Prefix",properties.DatabaseInstallationFilesS3Prefix!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseInstallationFilesS3Prefix):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("kmsKeyId","KMSKeyId",properties.KMSKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KMSKeyId):void 0),ret.addPropertyResult("manifest","Manifest",properties.Manifest!=null?cfn_parse.FromCloudFormation.getString(properties.Manifest):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBClusterPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnDBCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBCluster),error}this.attrDbClusterArn=cdk.Token.asString(this.getAtt("DBClusterArn",cdk.ResolutionTypeHint.STRING)),this.attrDbClusterResourceId=cdk.Token.asString(this.getAtt("DBClusterResourceId",cdk.ResolutionTypeHint.STRING)),this.attrEndpoint=this.getAtt("Endpoint"),this.attrEndpointAddress=cdk.Token.asString(this.getAtt("Endpoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrEndpointPort=cdk.Token.asString(this.getAtt("Endpoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrMasterUserSecretSecretArn=cdk.Token.asString(this.getAtt("MasterUserSecret.SecretArn",cdk.ResolutionTypeHint.STRING)),this.attrReadEndpoint=this.getAtt("ReadEndpoint"),this.attrReadEndpointAddress=cdk.Token.asString(this.getAtt("ReadEndpoint.Address",cdk.ResolutionTypeHint.STRING)),this.allocatedStorage=props.allocatedStorage,this.associatedRoles=props.associatedRoles,this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.availabilityZones=props.availabilityZones,this.backtrackWindow=props.backtrackWindow,this.backupRetentionPeriod=props.backupRetentionPeriod,this.copyTagsToSnapshot=props.copyTagsToSnapshot,this.databaseName=props.databaseName,this.dbClusterIdentifier=props.dbClusterIdentifier,this.dbClusterInstanceClass=props.dbClusterInstanceClass,this.dbClusterParameterGroupName=props.dbClusterParameterGroupName,this.dbInstanceParameterGroupName=props.dbInstanceParameterGroupName,this.dbSubnetGroupName=props.dbSubnetGroupName,this.dbSystemId=props.dbSystemId,this.deletionProtection=props.deletionProtection,this.domain=props.domain,this.domainIamRoleName=props.domainIamRoleName,this.enableCloudwatchLogsExports=props.enableCloudwatchLogsExports,this.enableHttpEndpoint=props.enableHttpEndpoint,this.enableIamDatabaseAuthentication=props.enableIamDatabaseAuthentication,this.engine=props.engine,this.engineMode=props.engineMode,this.engineVersion=props.engineVersion,this.globalClusterIdentifier=props.globalClusterIdentifier,this.iops=props.iops,this.kmsKeyId=props.kmsKeyId,this.manageMasterUserPassword=props.manageMasterUserPassword,this.masterUsername=props.masterUsername,this.masterUserPassword=props.masterUserPassword,this.masterUserSecret=props.masterUserSecret,this.monitoringInterval=props.monitoringInterval,this.monitoringRoleArn=props.monitoringRoleArn,this.networkType=props.networkType,this.performanceInsightsEnabled=props.performanceInsightsEnabled,this.performanceInsightsKmsKeyId=props.performanceInsightsKmsKeyId,this.performanceInsightsRetentionPeriod=props.performanceInsightsRetentionPeriod,this.port=props.port,this.preferredBackupWindow=props.preferredBackupWindow,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.publiclyAccessible=props.publiclyAccessible,this.replicationSourceIdentifier=props.replicationSourceIdentifier,this.restoreToTime=props.restoreToTime,this.restoreType=props.restoreType,this.scalingConfiguration=props.scalingConfiguration,this.serverlessV2ScalingConfiguration=props.serverlessV2ScalingConfiguration,this.snapshotIdentifier=props.snapshotIdentifier,this.sourceDbClusterIdentifier=props.sourceDbClusterIdentifier,this.sourceRegion=props.sourceRegion,this.storageEncrypted=props.storageEncrypted,this.storageType=props.storageType,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBCluster",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.useLatestRestorableTime=props.useLatestRestorableTime,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds,this.node.scope!=null&&cdk.Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::RDS::DBCluster' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{allocatedStorage:this.allocatedStorage,associatedRoles:this.associatedRoles,autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,availabilityZones:this.availabilityZones,backtrackWindow:this.backtrackWindow,backupRetentionPeriod:this.backupRetentionPeriod,copyTagsToSnapshot:this.copyTagsToSnapshot,databaseName:this.databaseName,dbClusterIdentifier:this.dbClusterIdentifier,dbClusterInstanceClass:this.dbClusterInstanceClass,dbClusterParameterGroupName:this.dbClusterParameterGroupName,dbInstanceParameterGroupName:this.dbInstanceParameterGroupName,dbSubnetGroupName:this.dbSubnetGroupName,dbSystemId:this.dbSystemId,deletionProtection:this.deletionProtection,domain:this.domain,domainIamRoleName:this.domainIamRoleName,enableCloudwatchLogsExports:this.enableCloudwatchLogsExports,enableHttpEndpoint:this.enableHttpEndpoint,enableIamDatabaseAuthentication:this.enableIamDatabaseAuthentication,engine:this.engine,engineMode:this.engineMode,engineVersion:this.engineVersion,globalClusterIdentifier:this.globalClusterIdentifier,iops:this.iops,kmsKeyId:this.kmsKeyId,manageMasterUserPassword:this.manageMasterUserPassword,masterUsername:this.masterUsername,masterUserPassword:this.masterUserPassword,masterUserSecret:this.masterUserSecret,monitoringInterval:this.monitoringInterval,monitoringRoleArn:this.monitoringRoleArn,networkType:this.networkType,performanceInsightsEnabled:this.performanceInsightsEnabled,performanceInsightsKmsKeyId:this.performanceInsightsKmsKeyId,performanceInsightsRetentionPeriod:this.performanceInsightsRetentionPeriod,port:this.port,preferredBackupWindow:this.preferredBackupWindow,preferredMaintenanceWindow:this.preferredMaintenanceWindow,publiclyAccessible:this.publiclyAccessible,replicationSourceIdentifier:this.replicationSourceIdentifier,restoreToTime:this.restoreToTime,restoreType:this.restoreType,scalingConfiguration:this.scalingConfiguration,serverlessV2ScalingConfiguration:this.serverlessV2ScalingConfiguration,snapshotIdentifier:this.snapshotIdentifier,sourceDbClusterIdentifier:this.sourceDbClusterIdentifier,sourceRegion:this.sourceRegion,storageEncrypted:this.storageEncrypted,storageType:this.storageType,tags:this.tags.renderTags(),useLatestRestorableTime:this.useLatestRestorableTime,vpcSecurityGroupIds:this.vpcSecurityGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBClusterPropsToCloudFormation(props)}}exports.CfnDBCluster=CfnDBCluster,_b=JSII_RTTI_SYMBOL_1,CfnDBCluster[_b]={fqn:"aws-cdk-lib.aws_rds.CfnDBCluster",version:"2.94.0"},CfnDBCluster.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBCluster";function CfnDBClusterDBClusterRolePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("featureName",cdk.validateString)(properties.featureName)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.wrap('supplied properties not correct for "DBClusterRoleProperty"')}function convertCfnDBClusterDBClusterRolePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterDBClusterRolePropertyValidator(properties).assertSuccess(),{FeatureName:cdk.stringToCloudFormation(properties.featureName),RoleArn:cdk.stringToCloudFormation(properties.roleArn)}):properties}function CfnDBClusterDBClusterRolePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("featureName","FeatureName",properties.FeatureName!=null?cfn_parse.FromCloudFormation.getString(properties.FeatureName):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterMasterUserSecretPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.wrap('supplied properties not correct for "MasterUserSecretProperty"')}function convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterMasterUserSecretPropertyValidator(properties).assertSuccess(),{KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),SecretArn:cdk.stringToCloudFormation(properties.secretArn)}):properties}function CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("maxCapacity",cdk.validateNumber)(properties.maxCapacity)),errors.collect(cdk.propertyValidator("minCapacity",cdk.validateNumber)(properties.minCapacity)),errors.wrap('supplied properties not correct for "ServerlessV2ScalingConfigurationProperty"')}function convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator(properties).assertSuccess(),{MaxCapacity:cdk.numberToCloudFormation(properties.maxCapacity),MinCapacity:cdk.numberToCloudFormation(properties.minCapacity)}):properties}function CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("maxCapacity","MaxCapacity",properties.MaxCapacity!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacity):void 0),ret.addPropertyResult("minCapacity","MinCapacity",properties.MinCapacity!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinCapacity):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterScalingConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autoPause",cdk.validateBoolean)(properties.autoPause)),errors.collect(cdk.propertyValidator("maxCapacity",cdk.validateNumber)(properties.maxCapacity)),errors.collect(cdk.propertyValidator("minCapacity",cdk.validateNumber)(properties.minCapacity)),errors.collect(cdk.propertyValidator("secondsBeforeTimeout",cdk.validateNumber)(properties.secondsBeforeTimeout)),errors.collect(cdk.propertyValidator("secondsUntilAutoPause",cdk.validateNumber)(properties.secondsUntilAutoPause)),errors.collect(cdk.propertyValidator("timeoutAction",cdk.validateString)(properties.timeoutAction)),errors.wrap('supplied properties not correct for "ScalingConfigurationProperty"')}function convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterScalingConfigurationPropertyValidator(properties).assertSuccess(),{AutoPause:cdk.booleanToCloudFormation(properties.autoPause),MaxCapacity:cdk.numberToCloudFormation(properties.maxCapacity),MinCapacity:cdk.numberToCloudFormation(properties.minCapacity),SecondsBeforeTimeout:cdk.numberToCloudFormation(properties.secondsBeforeTimeout),SecondsUntilAutoPause:cdk.numberToCloudFormation(properties.secondsUntilAutoPause),TimeoutAction:cdk.stringToCloudFormation(properties.timeoutAction)}):properties}function CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoPause","AutoPause",properties.AutoPause!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoPause):void 0),ret.addPropertyResult("maxCapacity","MaxCapacity",properties.MaxCapacity!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxCapacity):void 0),ret.addPropertyResult("minCapacity","MinCapacity",properties.MinCapacity!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinCapacity):void 0),ret.addPropertyResult("secondsBeforeTimeout","SecondsBeforeTimeout",properties.SecondsBeforeTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.SecondsBeforeTimeout):void 0),ret.addPropertyResult("secondsUntilAutoPause","SecondsUntilAutoPause",properties.SecondsUntilAutoPause!=null?cfn_parse.FromCloudFormation.getNumber(properties.SecondsUntilAutoPause):void 0),ret.addPropertyResult("timeoutAction","TimeoutAction",properties.TimeoutAction!=null?cfn_parse.FromCloudFormation.getString(properties.TimeoutAction):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.wrap('supplied properties not correct for "EndpointProperty"')}function convertCfnDBClusterEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterEndpointPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Port:cdk.stringToCloudFormation(properties.port)}):properties}function CfnDBClusterEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterReadEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.wrap('supplied properties not correct for "ReadEndpointProperty"')}function convertCfnDBClusterReadEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterReadEndpointPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address)}):properties}function CfnDBClusterReadEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allocatedStorage",cdk.validateNumber)(properties.allocatedStorage)),errors.collect(cdk.propertyValidator("associatedRoles",cdk.listValidator(CfnDBClusterDBClusterRolePropertyValidator))(properties.associatedRoles)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("availabilityZones",cdk.listValidator(cdk.validateString))(properties.availabilityZones)),errors.collect(cdk.propertyValidator("backtrackWindow",cdk.validateNumber)(properties.backtrackWindow)),errors.collect(cdk.propertyValidator("backupRetentionPeriod",cdk.validateNumber)(properties.backupRetentionPeriod)),errors.collect(cdk.propertyValidator("copyTagsToSnapshot",cdk.validateBoolean)(properties.copyTagsToSnapshot)),errors.collect(cdk.propertyValidator("dbClusterIdentifier",cdk.validateString)(properties.dbClusterIdentifier)),errors.collect(cdk.propertyValidator("dbClusterInstanceClass",cdk.validateString)(properties.dbClusterInstanceClass)),errors.collect(cdk.propertyValidator("dbClusterParameterGroupName",cdk.validateString)(properties.dbClusterParameterGroupName)),errors.collect(cdk.propertyValidator("dbInstanceParameterGroupName",cdk.validateString)(properties.dbInstanceParameterGroupName)),errors.collect(cdk.propertyValidator("dbSubnetGroupName",cdk.validateString)(properties.dbSubnetGroupName)),errors.collect(cdk.propertyValidator("dbSystemId",cdk.validateString)(properties.dbSystemId)),errors.collect(cdk.propertyValidator("databaseName",cdk.validateString)(properties.databaseName)),errors.collect(cdk.propertyValidator("deletionProtection",cdk.validateBoolean)(properties.deletionProtection)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("domainIamRoleName",cdk.validateString)(properties.domainIamRoleName)),errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports",cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports)),errors.collect(cdk.propertyValidator("enableHttpEndpoint",cdk.validateBoolean)(properties.enableHttpEndpoint)),errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication",cdk.validateBoolean)(properties.enableIamDatabaseAuthentication)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineMode",cdk.validateString)(properties.engineMode)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("globalClusterIdentifier",cdk.validateString)(properties.globalClusterIdentifier)),errors.collect(cdk.propertyValidator("iops",cdk.validateNumber)(properties.iops)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("manageMasterUserPassword",cdk.validateBoolean)(properties.manageMasterUserPassword)),errors.collect(cdk.propertyValidator("masterUserPassword",cdk.validateString)(properties.masterUserPassword)),errors.collect(cdk.propertyValidator("masterUserSecret",CfnDBClusterMasterUserSecretPropertyValidator)(properties.masterUserSecret)),errors.collect(cdk.propertyValidator("masterUsername",cdk.validateString)(properties.masterUsername)),errors.collect(cdk.propertyValidator("monitoringInterval",cdk.validateNumber)(properties.monitoringInterval)),errors.collect(cdk.propertyValidator("monitoringRoleArn",cdk.validateString)(properties.monitoringRoleArn)),errors.collect(cdk.propertyValidator("networkType",cdk.validateString)(properties.networkType)),errors.collect(cdk.propertyValidator("performanceInsightsEnabled",cdk.validateBoolean)(properties.performanceInsightsEnabled)),errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId",cdk.validateString)(properties.performanceInsightsKmsKeyId)),errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod",cdk.validateNumber)(properties.performanceInsightsRetentionPeriod)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("preferredBackupWindow",cdk.validateString)(properties.preferredBackupWindow)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("replicationSourceIdentifier",cdk.validateString)(properties.replicationSourceIdentifier)),errors.collect(cdk.propertyValidator("restoreToTime",cdk.validateString)(properties.restoreToTime)),errors.collect(cdk.propertyValidator("restoreType",cdk.validateString)(properties.restoreType)),errors.collect(cdk.propertyValidator("scalingConfiguration",CfnDBClusterScalingConfigurationPropertyValidator)(properties.scalingConfiguration)),errors.collect(cdk.propertyValidator("serverlessV2ScalingConfiguration",CfnDBClusterServerlessV2ScalingConfigurationPropertyValidator)(properties.serverlessV2ScalingConfiguration)),errors.collect(cdk.propertyValidator("snapshotIdentifier",cdk.validateString)(properties.snapshotIdentifier)),errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier",cdk.validateString)(properties.sourceDbClusterIdentifier)),errors.collect(cdk.propertyValidator("sourceRegion",cdk.validateString)(properties.sourceRegion)),errors.collect(cdk.propertyValidator("storageEncrypted",cdk.validateBoolean)(properties.storageEncrypted)),errors.collect(cdk.propertyValidator("storageType",cdk.validateString)(properties.storageType)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("useLatestRestorableTime",cdk.validateBoolean)(properties.useLatestRestorableTime)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnDBClusterProps"')}function convertCfnDBClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterPropsValidator(properties).assertSuccess(),{AllocatedStorage:cdk.numberToCloudFormation(properties.allocatedStorage),AssociatedRoles:cdk.listMapper(convertCfnDBClusterDBClusterRolePropertyToCloudFormation)(properties.associatedRoles),AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),AvailabilityZones:cdk.listMapper(cdk.stringToCloudFormation)(properties.availabilityZones),BacktrackWindow:cdk.numberToCloudFormation(properties.backtrackWindow),BackupRetentionPeriod:cdk.numberToCloudFormation(properties.backupRetentionPeriod),CopyTagsToSnapshot:cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),DBClusterIdentifier:cdk.stringToCloudFormation(properties.dbClusterIdentifier),DBClusterInstanceClass:cdk.stringToCloudFormation(properties.dbClusterInstanceClass),DBClusterParameterGroupName:cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),DBInstanceParameterGroupName:cdk.stringToCloudFormation(properties.dbInstanceParameterGroupName),DBSubnetGroupName:cdk.stringToCloudFormation(properties.dbSubnetGroupName),DBSystemId:cdk.stringToCloudFormation(properties.dbSystemId),DatabaseName:cdk.stringToCloudFormation(properties.databaseName),DeletionProtection:cdk.booleanToCloudFormation(properties.deletionProtection),Domain:cdk.stringToCloudFormation(properties.domain),DomainIAMRoleName:cdk.stringToCloudFormation(properties.domainIamRoleName),EnableCloudwatchLogsExports:cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),EnableHttpEndpoint:cdk.booleanToCloudFormation(properties.enableHttpEndpoint),EnableIAMDatabaseAuthentication:cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),Engine:cdk.stringToCloudFormation(properties.engine),EngineMode:cdk.stringToCloudFormation(properties.engineMode),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),GlobalClusterIdentifier:cdk.stringToCloudFormation(properties.globalClusterIdentifier),Iops:cdk.numberToCloudFormation(properties.iops),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),ManageMasterUserPassword:cdk.booleanToCloudFormation(properties.manageMasterUserPassword),MasterUserPassword:cdk.stringToCloudFormation(properties.masterUserPassword),MasterUserSecret:convertCfnDBClusterMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),MasterUsername:cdk.stringToCloudFormation(properties.masterUsername),MonitoringInterval:cdk.numberToCloudFormation(properties.monitoringInterval),MonitoringRoleArn:cdk.stringToCloudFormation(properties.monitoringRoleArn),NetworkType:cdk.stringToCloudFormation(properties.networkType),PerformanceInsightsEnabled:cdk.booleanToCloudFormation(properties.performanceInsightsEnabled),PerformanceInsightsKmsKeyId:cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),PerformanceInsightsRetentionPeriod:cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),Port:cdk.numberToCloudFormation(properties.port),PreferredBackupWindow:cdk.stringToCloudFormation(properties.preferredBackupWindow),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),ReplicationSourceIdentifier:cdk.stringToCloudFormation(properties.replicationSourceIdentifier),RestoreToTime:cdk.stringToCloudFormation(properties.restoreToTime),RestoreType:cdk.stringToCloudFormation(properties.restoreType),ScalingConfiguration:convertCfnDBClusterScalingConfigurationPropertyToCloudFormation(properties.scalingConfiguration),ServerlessV2ScalingConfiguration:convertCfnDBClusterServerlessV2ScalingConfigurationPropertyToCloudFormation(properties.serverlessV2ScalingConfiguration),SnapshotIdentifier:cdk.stringToCloudFormation(properties.snapshotIdentifier),SourceDBClusterIdentifier:cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),SourceRegion:cdk.stringToCloudFormation(properties.sourceRegion),StorageEncrypted:cdk.booleanToCloudFormation(properties.storageEncrypted),StorageType:cdk.stringToCloudFormation(properties.storageType),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UseLatestRestorableTime:cdk.booleanToCloudFormation(properties.useLatestRestorableTime),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnDBClusterPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allocatedStorage","AllocatedStorage",properties.AllocatedStorage!=null?cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage):void 0),ret.addPropertyResult("associatedRoles","AssociatedRoles",properties.AssociatedRoles!=null?cfn_parse.FromCloudFormation.getArray(CfnDBClusterDBClusterRolePropertyFromCloudFormation)(properties.AssociatedRoles):void 0),ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",properties.AutoMinorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade):void 0),ret.addPropertyResult("availabilityZones","AvailabilityZones",properties.AvailabilityZones!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AvailabilityZones):void 0),ret.addPropertyResult("backtrackWindow","BacktrackWindow",properties.BacktrackWindow!=null?cfn_parse.FromCloudFormation.getNumber(properties.BacktrackWindow):void 0),ret.addPropertyResult("backupRetentionPeriod","BackupRetentionPeriod",properties.BackupRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod):void 0),ret.addPropertyResult("copyTagsToSnapshot","CopyTagsToSnapshot",properties.CopyTagsToSnapshot!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("dbClusterIdentifier","DBClusterIdentifier",properties.DBClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier):void 0),ret.addPropertyResult("dbClusterInstanceClass","DBClusterInstanceClass",properties.DBClusterInstanceClass!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterInstanceClass):void 0),ret.addPropertyResult("dbClusterParameterGroupName","DBClusterParameterGroupName",properties.DBClusterParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName):void 0),ret.addPropertyResult("dbInstanceParameterGroupName","DBInstanceParameterGroupName",properties.DBInstanceParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBInstanceParameterGroupName):void 0),ret.addPropertyResult("dbSubnetGroupName","DBSubnetGroupName",properties.DBSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName):void 0),ret.addPropertyResult("dbSystemId","DBSystemId",properties.DBSystemId!=null?cfn_parse.FromCloudFormation.getString(properties.DBSystemId):void 0),ret.addPropertyResult("deletionProtection","DeletionProtection",properties.DeletionProtection!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection):void 0),ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse.FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("domainIamRoleName","DomainIAMRoleName",properties.DomainIAMRoleName!=null?cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName):void 0),ret.addPropertyResult("enableCloudwatchLogsExports","EnableCloudwatchLogsExports",properties.EnableCloudwatchLogsExports!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports):void 0),ret.addPropertyResult("enableHttpEndpoint","EnableHttpEndpoint",properties.EnableHttpEndpoint!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableHttpEndpoint):void 0),ret.addPropertyResult("enableIamDatabaseAuthentication","EnableIAMDatabaseAuthentication",properties.EnableIAMDatabaseAuthentication!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineMode","EngineMode",properties.EngineMode!=null?cfn_parse.FromCloudFormation.getString(properties.EngineMode):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("globalClusterIdentifier","GlobalClusterIdentifier",properties.GlobalClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier):void 0),ret.addPropertyResult("iops","Iops",properties.Iops!=null?cfn_parse.FromCloudFormation.getNumber(properties.Iops):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("manageMasterUserPassword","ManageMasterUserPassword",properties.ManageMasterUserPassword!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword):void 0),ret.addPropertyResult("masterUsername","MasterUsername",properties.MasterUsername!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUsername):void 0),ret.addPropertyResult("masterUserPassword","MasterUserPassword",properties.MasterUserPassword!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword):void 0),ret.addPropertyResult("masterUserSecret","MasterUserSecret",properties.MasterUserSecret!=null?CfnDBClusterMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret):void 0),ret.addPropertyResult("monitoringInterval","MonitoringInterval",properties.MonitoringInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval):void 0),ret.addPropertyResult("monitoringRoleArn","MonitoringRoleArn",properties.MonitoringRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn):void 0),ret.addPropertyResult("networkType","NetworkType",properties.NetworkType!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkType):void 0),ret.addPropertyResult("performanceInsightsEnabled","PerformanceInsightsEnabled",properties.PerformanceInsightsEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PerformanceInsightsEnabled):void 0),ret.addPropertyResult("performanceInsightsKmsKeyId","PerformanceInsightsKmsKeyId",properties.PerformanceInsightsKmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKmsKeyId):void 0),ret.addPropertyResult("performanceInsightsRetentionPeriod","PerformanceInsightsRetentionPeriod",properties.PerformanceInsightsRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("preferredBackupWindow","PreferredBackupWindow",properties.PreferredBackupWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",properties.PubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible):void 0),ret.addPropertyResult("replicationSourceIdentifier","ReplicationSourceIdentifier",properties.ReplicationSourceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationSourceIdentifier):void 0),ret.addPropertyResult("restoreToTime","RestoreToTime",properties.RestoreToTime!=null?cfn_parse.FromCloudFormation.getString(properties.RestoreToTime):void 0),ret.addPropertyResult("restoreType","RestoreType",properties.RestoreType!=null?cfn_parse.FromCloudFormation.getString(properties.RestoreType):void 0),ret.addPropertyResult("scalingConfiguration","ScalingConfiguration",properties.ScalingConfiguration!=null?CfnDBClusterScalingConfigurationPropertyFromCloudFormation(properties.ScalingConfiguration):void 0),ret.addPropertyResult("serverlessV2ScalingConfiguration","ServerlessV2ScalingConfiguration",properties.ServerlessV2ScalingConfiguration!=null?CfnDBClusterServerlessV2ScalingConfigurationPropertyFromCloudFormation(properties.ServerlessV2ScalingConfiguration):void 0),ret.addPropertyResult("snapshotIdentifier","SnapshotIdentifier",properties.SnapshotIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier):void 0),ret.addPropertyResult("sourceDbClusterIdentifier","SourceDBClusterIdentifier",properties.SourceDBClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier):void 0),ret.addPropertyResult("sourceRegion","SourceRegion",properties.SourceRegion!=null?cfn_parse.FromCloudFormation.getString(properties.SourceRegion):void 0),ret.addPropertyResult("storageEncrypted","StorageEncrypted",properties.StorageEncrypted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted):void 0),ret.addPropertyResult("storageType","StorageType",properties.StorageType!=null?cfn_parse.FromCloudFormation.getString(properties.StorageType):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("useLatestRestorableTime","UseLatestRestorableTime",properties.UseLatestRestorableTime!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBClusterParameterGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBClusterParameterGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBClusterParameterGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBClusterParameterGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBClusterParameterGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBClusterParameterGroup),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"family",this),cdk.requireProperty(props,"parameters",this),this.dbClusterParameterGroupName=props.dbClusterParameterGroupName,this.description=props.description,this.family=props.family,this.parameters=props.parameters,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBClusterParameterGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{dbClusterParameterGroupName:this.dbClusterParameterGroupName,description:this.description,family:this.family,parameters:this.parameters,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBClusterParameterGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBClusterParameterGroupPropsToCloudFormation(props)}}exports.CfnDBClusterParameterGroup=CfnDBClusterParameterGroup,_c=JSII_RTTI_SYMBOL_1,CfnDBClusterParameterGroup[_c]={fqn:"aws-cdk-lib.aws_rds.CfnDBClusterParameterGroup",version:"2.94.0"},CfnDBClusterParameterGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBClusterParameterGroup";function CfnDBClusterParameterGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbClusterParameterGroupName",cdk.validateString)(properties.dbClusterParameterGroupName)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("family",cdk.requiredValidator)(properties.family)),errors.collect(cdk.propertyValidator("family",cdk.validateString)(properties.family)),errors.collect(cdk.propertyValidator("parameters",cdk.requiredValidator)(properties.parameters)),errors.collect(cdk.propertyValidator("parameters",cdk.validateObject)(properties.parameters)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDBClusterParameterGroupProps"')}function convertCfnDBClusterParameterGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBClusterParameterGroupPropsValidator(properties).assertSuccess(),{DBClusterParameterGroupName:cdk.stringToCloudFormation(properties.dbClusterParameterGroupName),Description:cdk.stringToCloudFormation(properties.description),Family:cdk.stringToCloudFormation(properties.family),Parameters:cdk.objectToCloudFormation(properties.parameters),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDBClusterParameterGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbClusterParameterGroupName","DBClusterParameterGroupName",properties.DBClusterParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterParameterGroupName):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("family","Family",properties.Family!=null?cfn_parse.FromCloudFormation.getString(properties.Family):void 0),ret.addPropertyResult("parameters","Parameters",properties.Parameters!=null?cfn_parse.FromCloudFormation.getAny(properties.Parameters):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBInstance extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBInstancePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBInstance(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnDBInstance.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBInstanceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBInstance),error}this.attrCertificateDetailsCaIdentifier=cdk.Token.asString(this.getAtt("CertificateDetails.CAIdentifier",cdk.ResolutionTypeHint.STRING)),this.attrCertificateDetailsValidTill=cdk.Token.asString(this.getAtt("CertificateDetails.ValidTill",cdk.ResolutionTypeHint.STRING)),this.attrDbInstanceArn=cdk.Token.asString(this.getAtt("DBInstanceArn",cdk.ResolutionTypeHint.STRING)),this.attrDbiResourceId=cdk.Token.asString(this.getAtt("DbiResourceId",cdk.ResolutionTypeHint.STRING)),this.attrDbSystemId=cdk.Token.asString(this.getAtt("DBSystemId",cdk.ResolutionTypeHint.STRING)),this.attrEndpointAddress=cdk.Token.asString(this.getAtt("Endpoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrEndpointHostedZoneId=cdk.Token.asString(this.getAtt("Endpoint.HostedZoneId",cdk.ResolutionTypeHint.STRING)),this.attrEndpointPort=cdk.Token.asString(this.getAtt("Endpoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrMasterUserSecretSecretArn=cdk.Token.asString(this.getAtt("MasterUserSecret.SecretArn",cdk.ResolutionTypeHint.STRING)),this.allocatedStorage=props.allocatedStorage,this.allowMajorVersionUpgrade=props.allowMajorVersionUpgrade,this.associatedRoles=props.associatedRoles,this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.availabilityZone=props.availabilityZone,this.backupRetentionPeriod=props.backupRetentionPeriod,this.caCertificateIdentifier=props.caCertificateIdentifier,this.certificateDetails=props.certificateDetails,this.certificateRotationRestart=props.certificateRotationRestart,this.characterSetName=props.characterSetName,this.copyTagsToSnapshot=props.copyTagsToSnapshot,this.customIamInstanceProfile=props.customIamInstanceProfile,this.dbClusterIdentifier=props.dbClusterIdentifier,this.dbClusterSnapshotIdentifier=props.dbClusterSnapshotIdentifier,this.dbInstanceClass=props.dbInstanceClass,this.dbInstanceIdentifier=props.dbInstanceIdentifier,this.dbName=props.dbName,this.dbParameterGroupName=props.dbParameterGroupName,this.dbSecurityGroups=props.dbSecurityGroups,this.dbSnapshotIdentifier=props.dbSnapshotIdentifier,this.dbSubnetGroupName=props.dbSubnetGroupName,this.deleteAutomatedBackups=props.deleteAutomatedBackups,this.deletionProtection=props.deletionProtection,this.domain=props.domain,this.domainIamRoleName=props.domainIamRoleName,this.enableCloudwatchLogsExports=props.enableCloudwatchLogsExports,this.enableIamDatabaseAuthentication=props.enableIamDatabaseAuthentication,this.enablePerformanceInsights=props.enablePerformanceInsights,this.endpoint=props.endpoint,this.engine=props.engine,this.engineVersion=props.engineVersion,this.iops=props.iops,this.kmsKeyId=props.kmsKeyId,this.licenseModel=props.licenseModel,this.manageMasterUserPassword=props.manageMasterUserPassword,this.masterUsername=props.masterUsername,this.masterUserPassword=props.masterUserPassword,this.masterUserSecret=props.masterUserSecret,this.maxAllocatedStorage=props.maxAllocatedStorage,this.monitoringInterval=props.monitoringInterval,this.monitoringRoleArn=props.monitoringRoleArn,this.multiAz=props.multiAz,this.ncharCharacterSetName=props.ncharCharacterSetName,this.networkType=props.networkType,this.optionGroupName=props.optionGroupName,this.performanceInsightsKmsKeyId=props.performanceInsightsKmsKeyId,this.performanceInsightsRetentionPeriod=props.performanceInsightsRetentionPeriod,this.port=props.port,this.preferredBackupWindow=props.preferredBackupWindow,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.processorFeatures=props.processorFeatures,this.promotionTier=props.promotionTier,this.publiclyAccessible=props.publiclyAccessible,this.replicaMode=props.replicaMode,this.restoreTime=props.restoreTime,this.sourceDbClusterIdentifier=props.sourceDbClusterIdentifier,this.sourceDbInstanceAutomatedBackupsArn=props.sourceDbInstanceAutomatedBackupsArn,this.sourceDbInstanceIdentifier=props.sourceDbInstanceIdentifier,this.sourceDbiResourceId=props.sourceDbiResourceId,this.sourceRegion=props.sourceRegion,this.storageEncrypted=props.storageEncrypted,this.storageThroughput=props.storageThroughput,this.storageType=props.storageType,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBInstance",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.tdeCredentialArn=props.tdeCredentialArn,this.tdeCredentialPassword=props.tdeCredentialPassword,this.timezone=props.timezone,this.useDefaultProcessorFeatures=props.useDefaultProcessorFeatures,this.useLatestRestorableTime=props.useLatestRestorableTime,this.vpcSecurityGroups=props.vpcSecurityGroups,this.node.scope!=null&&cdk.Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::RDS::DBInstance' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{allocatedStorage:this.allocatedStorage,allowMajorVersionUpgrade:this.allowMajorVersionUpgrade,associatedRoles:this.associatedRoles,autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,availabilityZone:this.availabilityZone,backupRetentionPeriod:this.backupRetentionPeriod,caCertificateIdentifier:this.caCertificateIdentifier,certificateDetails:this.certificateDetails,certificateRotationRestart:this.certificateRotationRestart,characterSetName:this.characterSetName,copyTagsToSnapshot:this.copyTagsToSnapshot,customIamInstanceProfile:this.customIamInstanceProfile,dbClusterIdentifier:this.dbClusterIdentifier,dbClusterSnapshotIdentifier:this.dbClusterSnapshotIdentifier,dbInstanceClass:this.dbInstanceClass,dbInstanceIdentifier:this.dbInstanceIdentifier,dbName:this.dbName,dbParameterGroupName:this.dbParameterGroupName,dbSecurityGroups:this.dbSecurityGroups,dbSnapshotIdentifier:this.dbSnapshotIdentifier,dbSubnetGroupName:this.dbSubnetGroupName,deleteAutomatedBackups:this.deleteAutomatedBackups,deletionProtection:this.deletionProtection,domain:this.domain,domainIamRoleName:this.domainIamRoleName,enableCloudwatchLogsExports:this.enableCloudwatchLogsExports,enableIamDatabaseAuthentication:this.enableIamDatabaseAuthentication,enablePerformanceInsights:this.enablePerformanceInsights,endpoint:this.endpoint,engine:this.engine,engineVersion:this.engineVersion,iops:this.iops,kmsKeyId:this.kmsKeyId,licenseModel:this.licenseModel,manageMasterUserPassword:this.manageMasterUserPassword,masterUsername:this.masterUsername,masterUserPassword:this.masterUserPassword,masterUserSecret:this.masterUserSecret,maxAllocatedStorage:this.maxAllocatedStorage,monitoringInterval:this.monitoringInterval,monitoringRoleArn:this.monitoringRoleArn,multiAz:this.multiAz,ncharCharacterSetName:this.ncharCharacterSetName,networkType:this.networkType,optionGroupName:this.optionGroupName,performanceInsightsKmsKeyId:this.performanceInsightsKmsKeyId,performanceInsightsRetentionPeriod:this.performanceInsightsRetentionPeriod,port:this.port,preferredBackupWindow:this.preferredBackupWindow,preferredMaintenanceWindow:this.preferredMaintenanceWindow,processorFeatures:this.processorFeatures,promotionTier:this.promotionTier,publiclyAccessible:this.publiclyAccessible,replicaMode:this.replicaMode,restoreTime:this.restoreTime,sourceDbClusterIdentifier:this.sourceDbClusterIdentifier,sourceDbInstanceAutomatedBackupsArn:this.sourceDbInstanceAutomatedBackupsArn,sourceDbInstanceIdentifier:this.sourceDbInstanceIdentifier,sourceDbiResourceId:this.sourceDbiResourceId,sourceRegion:this.sourceRegion,storageEncrypted:this.storageEncrypted,storageThroughput:this.storageThroughput,storageType:this.storageType,tags:this.tags.renderTags(),tdeCredentialArn:this.tdeCredentialArn,tdeCredentialPassword:this.tdeCredentialPassword,timezone:this.timezone,useDefaultProcessorFeatures:this.useDefaultProcessorFeatures,useLatestRestorableTime:this.useLatestRestorableTime,vpcSecurityGroups:this.vpcSecurityGroups}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBInstance.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBInstancePropsToCloudFormation(props)}}exports.CfnDBInstance=CfnDBInstance,_d=JSII_RTTI_SYMBOL_1,CfnDBInstance[_d]={fqn:"aws-cdk-lib.aws_rds.CfnDBInstance",version:"2.94.0"},CfnDBInstance.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBInstance";function CfnDBInstanceDBInstanceRolePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("featureName",cdk.requiredValidator)(properties.featureName)),errors.collect(cdk.propertyValidator("featureName",cdk.validateString)(properties.featureName)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.wrap('supplied properties not correct for "DBInstanceRoleProperty"')}function convertCfnDBInstanceDBInstanceRolePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstanceDBInstanceRolePropertyValidator(properties).assertSuccess(),{FeatureName:cdk.stringToCloudFormation(properties.featureName),RoleArn:cdk.stringToCloudFormation(properties.roleArn)}):properties}function CfnDBInstanceDBInstanceRolePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("featureName","FeatureName",properties.FeatureName!=null?cfn_parse.FromCloudFormation.getString(properties.FeatureName):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBInstanceCertificateDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("caIdentifier",cdk.validateString)(properties.caIdentifier)),errors.collect(cdk.propertyValidator("validTill",cdk.validateString)(properties.validTill)),errors.wrap('supplied properties not correct for "CertificateDetailsProperty"')}function convertCfnDBInstanceCertificateDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstanceCertificateDetailsPropertyValidator(properties).assertSuccess(),{CAIdentifier:cdk.stringToCloudFormation(properties.caIdentifier),ValidTill:cdk.stringToCloudFormation(properties.validTill)}):properties}function CfnDBInstanceCertificateDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("caIdentifier","CAIdentifier",properties.CAIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.CAIdentifier):void 0),ret.addPropertyResult("validTill","ValidTill",properties.ValidTill!=null?cfn_parse.FromCloudFormation.getString(properties.ValidTill):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBInstanceEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("hostedZoneId",cdk.validateString)(properties.hostedZoneId)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.wrap('supplied properties not correct for "EndpointProperty"')}function convertCfnDBInstanceEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstanceEndpointPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),HostedZoneId:cdk.stringToCloudFormation(properties.hostedZoneId),Port:cdk.stringToCloudFormation(properties.port)}):properties}function CfnDBInstanceEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("hostedZoneId","HostedZoneId",properties.HostedZoneId!=null?cfn_parse.FromCloudFormation.getString(properties.HostedZoneId):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBInstanceMasterUserSecretPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.wrap('supplied properties not correct for "MasterUserSecretProperty"')}function convertCfnDBInstanceMasterUserSecretPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstanceMasterUserSecretPropertyValidator(properties).assertSuccess(),{KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),SecretArn:cdk.stringToCloudFormation(properties.secretArn)}):properties}function CfnDBInstanceMasterUserSecretPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBInstanceProcessorFeaturePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "ProcessorFeatureProperty"')}function convertCfnDBInstanceProcessorFeaturePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstanceProcessorFeaturePropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnDBInstanceProcessorFeaturePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBInstancePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allocatedStorage",cdk.validateString)(properties.allocatedStorage)),errors.collect(cdk.propertyValidator("allowMajorVersionUpgrade",cdk.validateBoolean)(properties.allowMajorVersionUpgrade)),errors.collect(cdk.propertyValidator("associatedRoles",cdk.listValidator(CfnDBInstanceDBInstanceRolePropertyValidator))(properties.associatedRoles)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("backupRetentionPeriod",cdk.validateNumber)(properties.backupRetentionPeriod)),errors.collect(cdk.propertyValidator("caCertificateIdentifier",cdk.validateString)(properties.caCertificateIdentifier)),errors.collect(cdk.propertyValidator("certificateDetails",CfnDBInstanceCertificateDetailsPropertyValidator)(properties.certificateDetails)),errors.collect(cdk.propertyValidator("certificateRotationRestart",cdk.validateBoolean)(properties.certificateRotationRestart)),errors.collect(cdk.propertyValidator("characterSetName",cdk.validateString)(properties.characterSetName)),errors.collect(cdk.propertyValidator("copyTagsToSnapshot",cdk.validateBoolean)(properties.copyTagsToSnapshot)),errors.collect(cdk.propertyValidator("customIamInstanceProfile",cdk.validateString)(properties.customIamInstanceProfile)),errors.collect(cdk.propertyValidator("dbClusterIdentifier",cdk.validateString)(properties.dbClusterIdentifier)),errors.collect(cdk.propertyValidator("dbClusterSnapshotIdentifier",cdk.validateString)(properties.dbClusterSnapshotIdentifier)),errors.collect(cdk.propertyValidator("dbInstanceClass",cdk.validateString)(properties.dbInstanceClass)),errors.collect(cdk.propertyValidator("dbInstanceIdentifier",cdk.validateString)(properties.dbInstanceIdentifier)),errors.collect(cdk.propertyValidator("dbName",cdk.validateString)(properties.dbName)),errors.collect(cdk.propertyValidator("dbParameterGroupName",cdk.validateString)(properties.dbParameterGroupName)),errors.collect(cdk.propertyValidator("dbSecurityGroups",cdk.listValidator(cdk.validateString))(properties.dbSecurityGroups)),errors.collect(cdk.propertyValidator("dbSnapshotIdentifier",cdk.validateString)(properties.dbSnapshotIdentifier)),errors.collect(cdk.propertyValidator("dbSubnetGroupName",cdk.validateString)(properties.dbSubnetGroupName)),errors.collect(cdk.propertyValidator("deleteAutomatedBackups",cdk.validateBoolean)(properties.deleteAutomatedBackups)),errors.collect(cdk.propertyValidator("deletionProtection",cdk.validateBoolean)(properties.deletionProtection)),errors.collect(cdk.propertyValidator("domain",cdk.validateString)(properties.domain)),errors.collect(cdk.propertyValidator("domainIamRoleName",cdk.validateString)(properties.domainIamRoleName)),errors.collect(cdk.propertyValidator("enableCloudwatchLogsExports",cdk.listValidator(cdk.validateString))(properties.enableCloudwatchLogsExports)),errors.collect(cdk.propertyValidator("enableIamDatabaseAuthentication",cdk.validateBoolean)(properties.enableIamDatabaseAuthentication)),errors.collect(cdk.propertyValidator("enablePerformanceInsights",cdk.validateBoolean)(properties.enablePerformanceInsights)),errors.collect(cdk.propertyValidator("endpoint",CfnDBInstanceEndpointPropertyValidator)(properties.endpoint)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("iops",cdk.validateNumber)(properties.iops)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("licenseModel",cdk.validateString)(properties.licenseModel)),errors.collect(cdk.propertyValidator("manageMasterUserPassword",cdk.validateBoolean)(properties.manageMasterUserPassword)),errors.collect(cdk.propertyValidator("masterUserPassword",cdk.validateString)(properties.masterUserPassword)),errors.collect(cdk.propertyValidator("masterUserSecret",CfnDBInstanceMasterUserSecretPropertyValidator)(properties.masterUserSecret)),errors.collect(cdk.propertyValidator("masterUsername",cdk.validateString)(properties.masterUsername)),errors.collect(cdk.propertyValidator("maxAllocatedStorage",cdk.validateNumber)(properties.maxAllocatedStorage)),errors.collect(cdk.propertyValidator("monitoringInterval",cdk.validateNumber)(properties.monitoringInterval)),errors.collect(cdk.propertyValidator("monitoringRoleArn",cdk.validateString)(properties.monitoringRoleArn)),errors.collect(cdk.propertyValidator("multiAz",cdk.validateBoolean)(properties.multiAz)),errors.collect(cdk.propertyValidator("ncharCharacterSetName",cdk.validateString)(properties.ncharCharacterSetName)),errors.collect(cdk.propertyValidator("networkType",cdk.validateString)(properties.networkType)),errors.collect(cdk.propertyValidator("optionGroupName",cdk.validateString)(properties.optionGroupName)),errors.collect(cdk.propertyValidator("performanceInsightsKmsKeyId",cdk.validateString)(properties.performanceInsightsKmsKeyId)),errors.collect(cdk.propertyValidator("performanceInsightsRetentionPeriod",cdk.validateNumber)(properties.performanceInsightsRetentionPeriod)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("preferredBackupWindow",cdk.validateString)(properties.preferredBackupWindow)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("processorFeatures",cdk.listValidator(CfnDBInstanceProcessorFeaturePropertyValidator))(properties.processorFeatures)),errors.collect(cdk.propertyValidator("promotionTier",cdk.validateNumber)(properties.promotionTier)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("replicaMode",cdk.validateString)(properties.replicaMode)),errors.collect(cdk.propertyValidator("restoreTime",cdk.validateString)(properties.restoreTime)),errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier",cdk.validateString)(properties.sourceDbClusterIdentifier)),errors.collect(cdk.propertyValidator("sourceDbInstanceAutomatedBackupsArn",cdk.validateString)(properties.sourceDbInstanceAutomatedBackupsArn)),errors.collect(cdk.propertyValidator("sourceDbInstanceIdentifier",cdk.validateString)(properties.sourceDbInstanceIdentifier)),errors.collect(cdk.propertyValidator("sourceDbiResourceId",cdk.validateString)(properties.sourceDbiResourceId)),errors.collect(cdk.propertyValidator("sourceRegion",cdk.validateString)(properties.sourceRegion)),errors.collect(cdk.propertyValidator("storageEncrypted",cdk.validateBoolean)(properties.storageEncrypted)),errors.collect(cdk.propertyValidator("storageThroughput",cdk.validateNumber)(properties.storageThroughput)),errors.collect(cdk.propertyValidator("storageType",cdk.validateString)(properties.storageType)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("tdeCredentialArn",cdk.validateString)(properties.tdeCredentialArn)),errors.collect(cdk.propertyValidator("tdeCredentialPassword",cdk.validateString)(properties.tdeCredentialPassword)),errors.collect(cdk.propertyValidator("timezone",cdk.validateString)(properties.timezone)),errors.collect(cdk.propertyValidator("useDefaultProcessorFeatures",cdk.validateBoolean)(properties.useDefaultProcessorFeatures)),errors.collect(cdk.propertyValidator("useLatestRestorableTime",cdk.validateBoolean)(properties.useLatestRestorableTime)),errors.collect(cdk.propertyValidator("vpcSecurityGroups",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroups)),errors.wrap('supplied properties not correct for "CfnDBInstanceProps"')}function convertCfnDBInstancePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBInstancePropsValidator(properties).assertSuccess(),{AllocatedStorage:cdk.stringToCloudFormation(properties.allocatedStorage),AllowMajorVersionUpgrade:cdk.booleanToCloudFormation(properties.allowMajorVersionUpgrade),AssociatedRoles:cdk.listMapper(convertCfnDBInstanceDBInstanceRolePropertyToCloudFormation)(properties.associatedRoles),AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),BackupRetentionPeriod:cdk.numberToCloudFormation(properties.backupRetentionPeriod),CACertificateIdentifier:cdk.stringToCloudFormation(properties.caCertificateIdentifier),CertificateDetails:convertCfnDBInstanceCertificateDetailsPropertyToCloudFormation(properties.certificateDetails),CertificateRotationRestart:cdk.booleanToCloudFormation(properties.certificateRotationRestart),CharacterSetName:cdk.stringToCloudFormation(properties.characterSetName),CopyTagsToSnapshot:cdk.booleanToCloudFormation(properties.copyTagsToSnapshot),CustomIAMInstanceProfile:cdk.stringToCloudFormation(properties.customIamInstanceProfile),DBClusterIdentifier:cdk.stringToCloudFormation(properties.dbClusterIdentifier),DBClusterSnapshotIdentifier:cdk.stringToCloudFormation(properties.dbClusterSnapshotIdentifier),DBInstanceClass:cdk.stringToCloudFormation(properties.dbInstanceClass),DBInstanceIdentifier:cdk.stringToCloudFormation(properties.dbInstanceIdentifier),DBName:cdk.stringToCloudFormation(properties.dbName),DBParameterGroupName:cdk.stringToCloudFormation(properties.dbParameterGroupName),DBSecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.dbSecurityGroups),DBSnapshotIdentifier:cdk.stringToCloudFormation(properties.dbSnapshotIdentifier),DBSubnetGroupName:cdk.stringToCloudFormation(properties.dbSubnetGroupName),DeleteAutomatedBackups:cdk.booleanToCloudFormation(properties.deleteAutomatedBackups),DeletionProtection:cdk.booleanToCloudFormation(properties.deletionProtection),Domain:cdk.stringToCloudFormation(properties.domain),DomainIAMRoleName:cdk.stringToCloudFormation(properties.domainIamRoleName),EnableCloudwatchLogsExports:cdk.listMapper(cdk.stringToCloudFormation)(properties.enableCloudwatchLogsExports),EnableIAMDatabaseAuthentication:cdk.booleanToCloudFormation(properties.enableIamDatabaseAuthentication),EnablePerformanceInsights:cdk.booleanToCloudFormation(properties.enablePerformanceInsights),Endpoint:convertCfnDBInstanceEndpointPropertyToCloudFormation(properties.endpoint),Engine:cdk.stringToCloudFormation(properties.engine),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),Iops:cdk.numberToCloudFormation(properties.iops),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),LicenseModel:cdk.stringToCloudFormation(properties.licenseModel),ManageMasterUserPassword:cdk.booleanToCloudFormation(properties.manageMasterUserPassword),MasterUserPassword:cdk.stringToCloudFormation(properties.masterUserPassword),MasterUserSecret:convertCfnDBInstanceMasterUserSecretPropertyToCloudFormation(properties.masterUserSecret),MasterUsername:cdk.stringToCloudFormation(properties.masterUsername),MaxAllocatedStorage:cdk.numberToCloudFormation(properties.maxAllocatedStorage),MonitoringInterval:cdk.numberToCloudFormation(properties.monitoringInterval),MonitoringRoleArn:cdk.stringToCloudFormation(properties.monitoringRoleArn),MultiAZ:cdk.booleanToCloudFormation(properties.multiAz),NcharCharacterSetName:cdk.stringToCloudFormation(properties.ncharCharacterSetName),NetworkType:cdk.stringToCloudFormation(properties.networkType),OptionGroupName:cdk.stringToCloudFormation(properties.optionGroupName),PerformanceInsightsKMSKeyId:cdk.stringToCloudFormation(properties.performanceInsightsKmsKeyId),PerformanceInsightsRetentionPeriod:cdk.numberToCloudFormation(properties.performanceInsightsRetentionPeriod),Port:cdk.stringToCloudFormation(properties.port),PreferredBackupWindow:cdk.stringToCloudFormation(properties.preferredBackupWindow),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),ProcessorFeatures:cdk.listMapper(convertCfnDBInstanceProcessorFeaturePropertyToCloudFormation)(properties.processorFeatures),PromotionTier:cdk.numberToCloudFormation(properties.promotionTier),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),ReplicaMode:cdk.stringToCloudFormation(properties.replicaMode),RestoreTime:cdk.stringToCloudFormation(properties.restoreTime),SourceDBClusterIdentifier:cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),SourceDBInstanceAutomatedBackupsArn:cdk.stringToCloudFormation(properties.sourceDbInstanceAutomatedBackupsArn),SourceDBInstanceIdentifier:cdk.stringToCloudFormation(properties.sourceDbInstanceIdentifier),SourceDbiResourceId:cdk.stringToCloudFormation(properties.sourceDbiResourceId),SourceRegion:cdk.stringToCloudFormation(properties.sourceRegion),StorageEncrypted:cdk.booleanToCloudFormation(properties.storageEncrypted),StorageThroughput:cdk.numberToCloudFormation(properties.storageThroughput),StorageType:cdk.stringToCloudFormation(properties.storageType),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TdeCredentialArn:cdk.stringToCloudFormation(properties.tdeCredentialArn),TdeCredentialPassword:cdk.stringToCloudFormation(properties.tdeCredentialPassword),Timezone:cdk.stringToCloudFormation(properties.timezone),UseDefaultProcessorFeatures:cdk.booleanToCloudFormation(properties.useDefaultProcessorFeatures),UseLatestRestorableTime:cdk.booleanToCloudFormation(properties.useLatestRestorableTime),VPCSecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroups)}):properties}function CfnDBInstancePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allocatedStorage","AllocatedStorage",properties.AllocatedStorage!=null?cfn_parse.FromCloudFormation.getString(properties.AllocatedStorage):void 0),ret.addPropertyResult("allowMajorVersionUpgrade","AllowMajorVersionUpgrade",properties.AllowMajorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowMajorVersionUpgrade):void 0),ret.addPropertyResult("associatedRoles","AssociatedRoles",properties.AssociatedRoles!=null?cfn_parse.FromCloudFormation.getArray(CfnDBInstanceDBInstanceRolePropertyFromCloudFormation)(properties.AssociatedRoles):void 0),ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",properties.AutoMinorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("backupRetentionPeriod","BackupRetentionPeriod",properties.BackupRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.BackupRetentionPeriod):void 0),ret.addPropertyResult("caCertificateIdentifier","CACertificateIdentifier",properties.CACertificateIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.CACertificateIdentifier):void 0),ret.addPropertyResult("certificateDetails","CertificateDetails",properties.CertificateDetails!=null?CfnDBInstanceCertificateDetailsPropertyFromCloudFormation(properties.CertificateDetails):void 0),ret.addPropertyResult("certificateRotationRestart","CertificateRotationRestart",properties.CertificateRotationRestart!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CertificateRotationRestart):void 0),ret.addPropertyResult("characterSetName","CharacterSetName",properties.CharacterSetName!=null?cfn_parse.FromCloudFormation.getString(properties.CharacterSetName):void 0),ret.addPropertyResult("copyTagsToSnapshot","CopyTagsToSnapshot",properties.CopyTagsToSnapshot!=null?cfn_parse.FromCloudFormation.getBoolean(properties.CopyTagsToSnapshot):void 0),ret.addPropertyResult("customIamInstanceProfile","CustomIAMInstanceProfile",properties.CustomIAMInstanceProfile!=null?cfn_parse.FromCloudFormation.getString(properties.CustomIAMInstanceProfile):void 0),ret.addPropertyResult("dbClusterIdentifier","DBClusterIdentifier",properties.DBClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterIdentifier):void 0),ret.addPropertyResult("dbClusterSnapshotIdentifier","DBClusterSnapshotIdentifier",properties.DBClusterSnapshotIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.DBClusterSnapshotIdentifier):void 0),ret.addPropertyResult("dbInstanceClass","DBInstanceClass",properties.DBInstanceClass!=null?cfn_parse.FromCloudFormation.getString(properties.DBInstanceClass):void 0),ret.addPropertyResult("dbInstanceIdentifier","DBInstanceIdentifier",properties.DBInstanceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.DBInstanceIdentifier):void 0),ret.addPropertyResult("dbName","DBName",properties.DBName!=null?cfn_parse.FromCloudFormation.getString(properties.DBName):void 0),ret.addPropertyResult("dbParameterGroupName","DBParameterGroupName",properties.DBParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBParameterGroupName):void 0),ret.addPropertyResult("dbSecurityGroups","DBSecurityGroups",properties.DBSecurityGroups!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DBSecurityGroups):void 0),ret.addPropertyResult("dbSnapshotIdentifier","DBSnapshotIdentifier",properties.DBSnapshotIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.DBSnapshotIdentifier):void 0),ret.addPropertyResult("dbSubnetGroupName","DBSubnetGroupName",properties.DBSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName):void 0),ret.addPropertyResult("deleteAutomatedBackups","DeleteAutomatedBackups",properties.DeleteAutomatedBackups!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeleteAutomatedBackups):void 0),ret.addPropertyResult("deletionProtection","DeletionProtection",properties.DeletionProtection!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection):void 0),ret.addPropertyResult("domain","Domain",properties.Domain!=null?cfn_parse.FromCloudFormation.getString(properties.Domain):void 0),ret.addPropertyResult("domainIamRoleName","DomainIAMRoleName",properties.DomainIAMRoleName!=null?cfn_parse.FromCloudFormation.getString(properties.DomainIAMRoleName):void 0),ret.addPropertyResult("enableCloudwatchLogsExports","EnableCloudwatchLogsExports",properties.EnableCloudwatchLogsExports!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EnableCloudwatchLogsExports):void 0),ret.addPropertyResult("enableIamDatabaseAuthentication","EnableIAMDatabaseAuthentication",properties.EnableIAMDatabaseAuthentication!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnableIAMDatabaseAuthentication):void 0),ret.addPropertyResult("enablePerformanceInsights","EnablePerformanceInsights",properties.EnablePerformanceInsights!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnablePerformanceInsights):void 0),ret.addPropertyResult("endpoint","Endpoint",properties.Endpoint!=null?CfnDBInstanceEndpointPropertyFromCloudFormation(properties.Endpoint):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("iops","Iops",properties.Iops!=null?cfn_parse.FromCloudFormation.getNumber(properties.Iops):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("licenseModel","LicenseModel",properties.LicenseModel!=null?cfn_parse.FromCloudFormation.getString(properties.LicenseModel):void 0),ret.addPropertyResult("manageMasterUserPassword","ManageMasterUserPassword",properties.ManageMasterUserPassword!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ManageMasterUserPassword):void 0),ret.addPropertyResult("masterUsername","MasterUsername",properties.MasterUsername!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUsername):void 0),ret.addPropertyResult("masterUserPassword","MasterUserPassword",properties.MasterUserPassword!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword):void 0),ret.addPropertyResult("masterUserSecret","MasterUserSecret",properties.MasterUserSecret!=null?CfnDBInstanceMasterUserSecretPropertyFromCloudFormation(properties.MasterUserSecret):void 0),ret.addPropertyResult("maxAllocatedStorage","MaxAllocatedStorage",properties.MaxAllocatedStorage!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxAllocatedStorage):void 0),ret.addPropertyResult("monitoringInterval","MonitoringInterval",properties.MonitoringInterval!=null?cfn_parse.FromCloudFormation.getNumber(properties.MonitoringInterval):void 0),ret.addPropertyResult("monitoringRoleArn","MonitoringRoleArn",properties.MonitoringRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.MonitoringRoleArn):void 0),ret.addPropertyResult("multiAz","MultiAZ",properties.MultiAZ!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZ):void 0),ret.addPropertyResult("ncharCharacterSetName","NcharCharacterSetName",properties.NcharCharacterSetName!=null?cfn_parse.FromCloudFormation.getString(properties.NcharCharacterSetName):void 0),ret.addPropertyResult("networkType","NetworkType",properties.NetworkType!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkType):void 0),ret.addPropertyResult("optionGroupName","OptionGroupName",properties.OptionGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.OptionGroupName):void 0),ret.addPropertyResult("performanceInsightsKmsKeyId","PerformanceInsightsKMSKeyId",properties.PerformanceInsightsKMSKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.PerformanceInsightsKMSKeyId):void 0),ret.addPropertyResult("performanceInsightsRetentionPeriod","PerformanceInsightsRetentionPeriod",properties.PerformanceInsightsRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.PerformanceInsightsRetentionPeriod):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("preferredBackupWindow","PreferredBackupWindow",properties.PreferredBackupWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("processorFeatures","ProcessorFeatures",properties.ProcessorFeatures!=null?cfn_parse.FromCloudFormation.getArray(CfnDBInstanceProcessorFeaturePropertyFromCloudFormation)(properties.ProcessorFeatures):void 0),ret.addPropertyResult("promotionTier","PromotionTier",properties.PromotionTier!=null?cfn_parse.FromCloudFormation.getNumber(properties.PromotionTier):void 0),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",properties.PubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible):void 0),ret.addPropertyResult("replicaMode","ReplicaMode",properties.ReplicaMode!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicaMode):void 0),ret.addPropertyResult("restoreTime","RestoreTime",properties.RestoreTime!=null?cfn_parse.FromCloudFormation.getString(properties.RestoreTime):void 0),ret.addPropertyResult("sourceDbClusterIdentifier","SourceDBClusterIdentifier",properties.SourceDBClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier):void 0),ret.addPropertyResult("sourceDbInstanceAutomatedBackupsArn","SourceDBInstanceAutomatedBackupsArn",properties.SourceDBInstanceAutomatedBackupsArn!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDBInstanceAutomatedBackupsArn):void 0),ret.addPropertyResult("sourceDbInstanceIdentifier","SourceDBInstanceIdentifier",properties.SourceDBInstanceIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDBInstanceIdentifier):void 0),ret.addPropertyResult("sourceDbiResourceId","SourceDbiResourceId",properties.SourceDbiResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDbiResourceId):void 0),ret.addPropertyResult("sourceRegion","SourceRegion",properties.SourceRegion!=null?cfn_parse.FromCloudFormation.getString(properties.SourceRegion):void 0),ret.addPropertyResult("storageEncrypted","StorageEncrypted",properties.StorageEncrypted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted):void 0),ret.addPropertyResult("storageThroughput","StorageThroughput",properties.StorageThroughput!=null?cfn_parse.FromCloudFormation.getNumber(properties.StorageThroughput):void 0),ret.addPropertyResult("storageType","StorageType",properties.StorageType!=null?cfn_parse.FromCloudFormation.getString(properties.StorageType):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("tdeCredentialArn","TdeCredentialArn",properties.TdeCredentialArn!=null?cfn_parse.FromCloudFormation.getString(properties.TdeCredentialArn):void 0),ret.addPropertyResult("tdeCredentialPassword","TdeCredentialPassword",properties.TdeCredentialPassword!=null?cfn_parse.FromCloudFormation.getString(properties.TdeCredentialPassword):void 0),ret.addPropertyResult("timezone","Timezone",properties.Timezone!=null?cfn_parse.FromCloudFormation.getString(properties.Timezone):void 0),ret.addPropertyResult("useDefaultProcessorFeatures","UseDefaultProcessorFeatures",properties.UseDefaultProcessorFeatures!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseDefaultProcessorFeatures):void 0),ret.addPropertyResult("useLatestRestorableTime","UseLatestRestorableTime",properties.UseLatestRestorableTime!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UseLatestRestorableTime):void 0),ret.addPropertyResult("vpcSecurityGroups","VPCSecurityGroups",properties.VPCSecurityGroups!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VPCSecurityGroups):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBParameterGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBParameterGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBParameterGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBParameterGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBParameterGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBParameterGroup),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"family",this),this.attrDbParameterGroupName=cdk.Token.asString(this.getAtt("DBParameterGroupName",cdk.ResolutionTypeHint.STRING)),this.dbParameterGroupName=props.dbParameterGroupName,this.description=props.description,this.family=props.family,this.parameters=props.parameters,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBParameterGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{dbParameterGroupName:this.dbParameterGroupName,description:this.description,family:this.family,parameters:this.parameters,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBParameterGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBParameterGroupPropsToCloudFormation(props)}}exports.CfnDBParameterGroup=CfnDBParameterGroup,_e=JSII_RTTI_SYMBOL_1,CfnDBParameterGroup[_e]={fqn:"aws-cdk-lib.aws_rds.CfnDBParameterGroup",version:"2.94.0"},CfnDBParameterGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBParameterGroup";function CfnDBParameterGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbParameterGroupName",cdk.validateString)(properties.dbParameterGroupName)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("family",cdk.requiredValidator)(properties.family)),errors.collect(cdk.propertyValidator("family",cdk.validateString)(properties.family)),errors.collect(cdk.propertyValidator("parameters",cdk.validateObject)(properties.parameters)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDBParameterGroupProps"')}function convertCfnDBParameterGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBParameterGroupPropsValidator(properties).assertSuccess(),{DBParameterGroupName:cdk.stringToCloudFormation(properties.dbParameterGroupName),Description:cdk.stringToCloudFormation(properties.description),Family:cdk.stringToCloudFormation(properties.family),Parameters:cdk.objectToCloudFormation(properties.parameters),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDBParameterGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbParameterGroupName","DBParameterGroupName",properties.DBParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBParameterGroupName):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("family","Family",properties.Family!=null?cfn_parse.FromCloudFormation.getString(properties.Family):void 0),ret.addPropertyResult("parameters","Parameters",properties.Parameters!=null?cfn_parse.FromCloudFormation.getAny(properties.Parameters):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBProxy extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBProxyPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBProxy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBProxy.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBProxyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBProxy),error}cdk.requireProperty(props,"auth",this),cdk.requireProperty(props,"dbProxyName",this),cdk.requireProperty(props,"engineFamily",this),cdk.requireProperty(props,"roleArn",this),cdk.requireProperty(props,"vpcSubnetIds",this),this.attrDbProxyArn=cdk.Token.asString(this.getAtt("DBProxyArn",cdk.ResolutionTypeHint.STRING)),this.attrEndpoint=cdk.Token.asString(this.getAtt("Endpoint",cdk.ResolutionTypeHint.STRING)),this.attrVpcId=cdk.Token.asString(this.getAtt("VpcId",cdk.ResolutionTypeHint.STRING)),this.auth=props.auth,this.dbProxyName=props.dbProxyName,this.debugLogging=props.debugLogging,this.engineFamily=props.engineFamily,this.idleClientTimeout=props.idleClientTimeout,this.requireTls=props.requireTls,this.roleArn=props.roleArn,this.tags=props.tags,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds,this.vpcSubnetIds=props.vpcSubnetIds}get cfnProperties(){return{auth:this.auth,dbProxyName:this.dbProxyName,debugLogging:this.debugLogging,engineFamily:this.engineFamily,idleClientTimeout:this.idleClientTimeout,requireTls:this.requireTls,roleArn:this.roleArn,tags:this.tags,vpcSecurityGroupIds:this.vpcSecurityGroupIds,vpcSubnetIds:this.vpcSubnetIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBProxy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBProxyPropsToCloudFormation(props)}}exports.CfnDBProxy=CfnDBProxy,_f=JSII_RTTI_SYMBOL_1,CfnDBProxy[_f]={fqn:"aws-cdk-lib.aws_rds.CfnDBProxy",version:"2.94.0"},CfnDBProxy.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBProxy";function CfnDBProxyAuthFormatPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authScheme",cdk.validateString)(properties.authScheme)),errors.collect(cdk.propertyValidator("clientPasswordAuthType",cdk.validateString)(properties.clientPasswordAuthType)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("iamAuth",cdk.validateString)(properties.iamAuth)),errors.collect(cdk.propertyValidator("secretArn",cdk.validateString)(properties.secretArn)),errors.wrap('supplied properties not correct for "AuthFormatProperty"')}function convertCfnDBProxyAuthFormatPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyAuthFormatPropertyValidator(properties).assertSuccess(),{AuthScheme:cdk.stringToCloudFormation(properties.authScheme),ClientPasswordAuthType:cdk.stringToCloudFormation(properties.clientPasswordAuthType),Description:cdk.stringToCloudFormation(properties.description),IAMAuth:cdk.stringToCloudFormation(properties.iamAuth),SecretArn:cdk.stringToCloudFormation(properties.secretArn)}):properties}function CfnDBProxyAuthFormatPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("authScheme","AuthScheme",properties.AuthScheme!=null?cfn_parse.FromCloudFormation.getString(properties.AuthScheme):void 0),ret.addPropertyResult("clientPasswordAuthType","ClientPasswordAuthType",properties.ClientPasswordAuthType!=null?cfn_parse.FromCloudFormation.getString(properties.ClientPasswordAuthType):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("iamAuth","IAMAuth",properties.IAMAuth!=null?cfn_parse.FromCloudFormation.getString(properties.IAMAuth):void 0),ret.addPropertyResult("secretArn","SecretArn",properties.SecretArn!=null?cfn_parse.FromCloudFormation.getString(properties.SecretArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBProxyTagFormatPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "TagFormatProperty"')}function convertCfnDBProxyTagFormatPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyTagFormatPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnDBProxyTagFormatPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBProxyPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("auth",cdk.requiredValidator)(properties.auth)),errors.collect(cdk.propertyValidator("auth",cdk.listValidator(CfnDBProxyAuthFormatPropertyValidator))(properties.auth)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.requiredValidator)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.validateString)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("debugLogging",cdk.validateBoolean)(properties.debugLogging)),errors.collect(cdk.propertyValidator("engineFamily",cdk.requiredValidator)(properties.engineFamily)),errors.collect(cdk.propertyValidator("engineFamily",cdk.validateString)(properties.engineFamily)),errors.collect(cdk.propertyValidator("idleClientTimeout",cdk.validateNumber)(properties.idleClientTimeout)),errors.collect(cdk.propertyValidator("requireTls",cdk.validateBoolean)(properties.requireTls)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(CfnDBProxyTagFormatPropertyValidator))(properties.tags)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.collect(cdk.propertyValidator("vpcSubnetIds",cdk.requiredValidator)(properties.vpcSubnetIds)),errors.collect(cdk.propertyValidator("vpcSubnetIds",cdk.listValidator(cdk.validateString))(properties.vpcSubnetIds)),errors.wrap('supplied properties not correct for "CfnDBProxyProps"')}function convertCfnDBProxyPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyPropsValidator(properties).assertSuccess(),{Auth:cdk.listMapper(convertCfnDBProxyAuthFormatPropertyToCloudFormation)(properties.auth),DBProxyName:cdk.stringToCloudFormation(properties.dbProxyName),DebugLogging:cdk.booleanToCloudFormation(properties.debugLogging),EngineFamily:cdk.stringToCloudFormation(properties.engineFamily),IdleClientTimeout:cdk.numberToCloudFormation(properties.idleClientTimeout),RequireTLS:cdk.booleanToCloudFormation(properties.requireTls),RoleArn:cdk.stringToCloudFormation(properties.roleArn),Tags:cdk.listMapper(convertCfnDBProxyTagFormatPropertyToCloudFormation)(properties.tags),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),VpcSubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSubnetIds)}):properties}function CfnDBProxyPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("auth","Auth",properties.Auth!=null?cfn_parse.FromCloudFormation.getArray(CfnDBProxyAuthFormatPropertyFromCloudFormation)(properties.Auth):void 0),ret.addPropertyResult("dbProxyName","DBProxyName",properties.DBProxyName!=null?cfn_parse.FromCloudFormation.getString(properties.DBProxyName):void 0),ret.addPropertyResult("debugLogging","DebugLogging",properties.DebugLogging!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DebugLogging):void 0),ret.addPropertyResult("engineFamily","EngineFamily",properties.EngineFamily!=null?cfn_parse.FromCloudFormation.getString(properties.EngineFamily):void 0),ret.addPropertyResult("idleClientTimeout","IdleClientTimeout",properties.IdleClientTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.IdleClientTimeout):void 0),ret.addPropertyResult("requireTls","RequireTLS",properties.RequireTLS!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RequireTLS):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(CfnDBProxyTagFormatPropertyFromCloudFormation)(properties.Tags):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addPropertyResult("vpcSubnetIds","VpcSubnetIds",properties.VpcSubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSubnetIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBProxyEndpoint extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBProxyEndpointPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBProxyEndpoint(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBProxyEndpoint.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBProxyEndpointProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBProxyEndpoint),error}cdk.requireProperty(props,"dbProxyEndpointName",this),cdk.requireProperty(props,"dbProxyName",this),cdk.requireProperty(props,"vpcSubnetIds",this),this.attrDbProxyEndpointArn=cdk.Token.asString(this.getAtt("DBProxyEndpointArn",cdk.ResolutionTypeHint.STRING)),this.attrEndpoint=cdk.Token.asString(this.getAtt("Endpoint",cdk.ResolutionTypeHint.STRING)),this.attrIsDefault=this.getAtt("IsDefault"),this.attrVpcId=cdk.Token.asString(this.getAtt("VpcId",cdk.ResolutionTypeHint.STRING)),this.dbProxyEndpointName=props.dbProxyEndpointName,this.dbProxyName=props.dbProxyName,this.tags=props.tags,this.targetRole=props.targetRole,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds,this.vpcSubnetIds=props.vpcSubnetIds}get cfnProperties(){return{dbProxyEndpointName:this.dbProxyEndpointName,dbProxyName:this.dbProxyName,tags:this.tags,targetRole:this.targetRole,vpcSecurityGroupIds:this.vpcSecurityGroupIds,vpcSubnetIds:this.vpcSubnetIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBProxyEndpoint.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBProxyEndpointPropsToCloudFormation(props)}}exports.CfnDBProxyEndpoint=CfnDBProxyEndpoint,_g=JSII_RTTI_SYMBOL_1,CfnDBProxyEndpoint[_g]={fqn:"aws-cdk-lib.aws_rds.CfnDBProxyEndpoint",version:"2.94.0"},CfnDBProxyEndpoint.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBProxyEndpoint";function CfnDBProxyEndpointTagFormatPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("key",cdk.validateString)(properties.key)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "TagFormatProperty"')}function convertCfnDBProxyEndpointTagFormatPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyEndpointTagFormatPropertyValidator(properties).assertSuccess(),{Key:cdk.stringToCloudFormation(properties.key),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnDBProxyEndpointTagFormatPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("key","Key",properties.Key!=null?cfn_parse.FromCloudFormation.getString(properties.Key):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBProxyEndpointPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbProxyEndpointName",cdk.requiredValidator)(properties.dbProxyEndpointName)),errors.collect(cdk.propertyValidator("dbProxyEndpointName",cdk.validateString)(properties.dbProxyEndpointName)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.requiredValidator)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.validateString)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(CfnDBProxyEndpointTagFormatPropertyValidator))(properties.tags)),errors.collect(cdk.propertyValidator("targetRole",cdk.validateString)(properties.targetRole)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.collect(cdk.propertyValidator("vpcSubnetIds",cdk.requiredValidator)(properties.vpcSubnetIds)),errors.collect(cdk.propertyValidator("vpcSubnetIds",cdk.listValidator(cdk.validateString))(properties.vpcSubnetIds)),errors.wrap('supplied properties not correct for "CfnDBProxyEndpointProps"')}function convertCfnDBProxyEndpointPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyEndpointPropsValidator(properties).assertSuccess(),{DBProxyEndpointName:cdk.stringToCloudFormation(properties.dbProxyEndpointName),DBProxyName:cdk.stringToCloudFormation(properties.dbProxyName),Tags:cdk.listMapper(convertCfnDBProxyEndpointTagFormatPropertyToCloudFormation)(properties.tags),TargetRole:cdk.stringToCloudFormation(properties.targetRole),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),VpcSubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSubnetIds)}):properties}function CfnDBProxyEndpointPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbProxyEndpointName","DBProxyEndpointName",properties.DBProxyEndpointName!=null?cfn_parse.FromCloudFormation.getString(properties.DBProxyEndpointName):void 0),ret.addPropertyResult("dbProxyName","DBProxyName",properties.DBProxyName!=null?cfn_parse.FromCloudFormation.getString(properties.DBProxyName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(CfnDBProxyEndpointTagFormatPropertyFromCloudFormation)(properties.Tags):void 0),ret.addPropertyResult("targetRole","TargetRole",properties.TargetRole!=null?cfn_parse.FromCloudFormation.getString(properties.TargetRole):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addPropertyResult("vpcSubnetIds","VpcSubnetIds",properties.VpcSubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSubnetIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBProxyTargetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBProxyTargetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBProxyTargetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBProxyTargetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBProxyTargetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBProxyTargetGroup),error}cdk.requireProperty(props,"dbProxyName",this),cdk.requireProperty(props,"targetGroupName",this),this.attrTargetGroupArn=cdk.Token.asString(this.getAtt("TargetGroupArn",cdk.ResolutionTypeHint.STRING)),this.connectionPoolConfigurationInfo=props.connectionPoolConfigurationInfo,this.dbClusterIdentifiers=props.dbClusterIdentifiers,this.dbInstanceIdentifiers=props.dbInstanceIdentifiers,this.dbProxyName=props.dbProxyName,this.targetGroupName=props.targetGroupName}get cfnProperties(){return{connectionPoolConfigurationInfo:this.connectionPoolConfigurationInfo,dbClusterIdentifiers:this.dbClusterIdentifiers,dbInstanceIdentifiers:this.dbInstanceIdentifiers,dbProxyName:this.dbProxyName,targetGroupName:this.targetGroupName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBProxyTargetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBProxyTargetGroupPropsToCloudFormation(props)}}exports.CfnDBProxyTargetGroup=CfnDBProxyTargetGroup,_h=JSII_RTTI_SYMBOL_1,CfnDBProxyTargetGroup[_h]={fqn:"aws-cdk-lib.aws_rds.CfnDBProxyTargetGroup",version:"2.94.0"},CfnDBProxyTargetGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBProxyTargetGroup";function CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("connectionBorrowTimeout",cdk.validateNumber)(properties.connectionBorrowTimeout)),errors.collect(cdk.propertyValidator("initQuery",cdk.validateString)(properties.initQuery)),errors.collect(cdk.propertyValidator("maxConnectionsPercent",cdk.validateNumber)(properties.maxConnectionsPercent)),errors.collect(cdk.propertyValidator("maxIdleConnectionsPercent",cdk.validateNumber)(properties.maxIdleConnectionsPercent)),errors.collect(cdk.propertyValidator("sessionPinningFilters",cdk.listValidator(cdk.validateString))(properties.sessionPinningFilters)),errors.wrap('supplied properties not correct for "ConnectionPoolConfigurationInfoFormatProperty"')}function convertCfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyValidator(properties).assertSuccess(),{ConnectionBorrowTimeout:cdk.numberToCloudFormation(properties.connectionBorrowTimeout),InitQuery:cdk.stringToCloudFormation(properties.initQuery),MaxConnectionsPercent:cdk.numberToCloudFormation(properties.maxConnectionsPercent),MaxIdleConnectionsPercent:cdk.numberToCloudFormation(properties.maxIdleConnectionsPercent),SessionPinningFilters:cdk.listMapper(cdk.stringToCloudFormation)(properties.sessionPinningFilters)}):properties}function CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("connectionBorrowTimeout","ConnectionBorrowTimeout",properties.ConnectionBorrowTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ConnectionBorrowTimeout):void 0),ret.addPropertyResult("initQuery","InitQuery",properties.InitQuery!=null?cfn_parse.FromCloudFormation.getString(properties.InitQuery):void 0),ret.addPropertyResult("maxConnectionsPercent","MaxConnectionsPercent",properties.MaxConnectionsPercent!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxConnectionsPercent):void 0),ret.addPropertyResult("maxIdleConnectionsPercent","MaxIdleConnectionsPercent",properties.MaxIdleConnectionsPercent!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxIdleConnectionsPercent):void 0),ret.addPropertyResult("sessionPinningFilters","SessionPinningFilters",properties.SessionPinningFilters!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SessionPinningFilters):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBProxyTargetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("connectionPoolConfigurationInfo",CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyValidator)(properties.connectionPoolConfigurationInfo)),errors.collect(cdk.propertyValidator("dbClusterIdentifiers",cdk.listValidator(cdk.validateString))(properties.dbClusterIdentifiers)),errors.collect(cdk.propertyValidator("dbInstanceIdentifiers",cdk.listValidator(cdk.validateString))(properties.dbInstanceIdentifiers)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.requiredValidator)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("dbProxyName",cdk.validateString)(properties.dbProxyName)),errors.collect(cdk.propertyValidator("targetGroupName",cdk.requiredValidator)(properties.targetGroupName)),errors.collect(cdk.propertyValidator("targetGroupName",cdk.validateString)(properties.targetGroupName)),errors.wrap('supplied properties not correct for "CfnDBProxyTargetGroupProps"')}function convertCfnDBProxyTargetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBProxyTargetGroupPropsValidator(properties).assertSuccess(),{ConnectionPoolConfigurationInfo:convertCfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyToCloudFormation(properties.connectionPoolConfigurationInfo),DBClusterIdentifiers:cdk.listMapper(cdk.stringToCloudFormation)(properties.dbClusterIdentifiers),DBInstanceIdentifiers:cdk.listMapper(cdk.stringToCloudFormation)(properties.dbInstanceIdentifiers),DBProxyName:cdk.stringToCloudFormation(properties.dbProxyName),TargetGroupName:cdk.stringToCloudFormation(properties.targetGroupName)}):properties}function CfnDBProxyTargetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("connectionPoolConfigurationInfo","ConnectionPoolConfigurationInfo",properties.ConnectionPoolConfigurationInfo!=null?CfnDBProxyTargetGroupConnectionPoolConfigurationInfoFormatPropertyFromCloudFormation(properties.ConnectionPoolConfigurationInfo):void 0),ret.addPropertyResult("dbClusterIdentifiers","DBClusterIdentifiers",properties.DBClusterIdentifiers!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DBClusterIdentifiers):void 0),ret.addPropertyResult("dbInstanceIdentifiers","DBInstanceIdentifiers",properties.DBInstanceIdentifiers!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DBInstanceIdentifiers):void 0),ret.addPropertyResult("dbProxyName","DBProxyName",properties.DBProxyName!=null?cfn_parse.FromCloudFormation.getString(properties.DBProxyName):void 0),ret.addPropertyResult("targetGroupName","TargetGroupName",properties.TargetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.TargetGroupName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBSecurityGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBSecurityGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBSecurityGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBSecurityGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBSecurityGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBSecurityGroup),error}cdk.requireProperty(props,"dbSecurityGroupIngress",this),cdk.requireProperty(props,"groupDescription",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.dbSecurityGroupIngress=props.dbSecurityGroupIngress,this.ec2VpcId=props.ec2VpcId,this.groupDescription=props.groupDescription,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBSecurityGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{dbSecurityGroupIngress:this.dbSecurityGroupIngress,ec2VpcId:this.ec2VpcId,groupDescription:this.groupDescription,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBSecurityGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBSecurityGroupPropsToCloudFormation(props)}}exports.CfnDBSecurityGroup=CfnDBSecurityGroup,_j=JSII_RTTI_SYMBOL_1,CfnDBSecurityGroup[_j]={fqn:"aws-cdk-lib.aws_rds.CfnDBSecurityGroup",version:"2.94.0"},CfnDBSecurityGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBSecurityGroup";function CfnDBSecurityGroupIngressPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrip",cdk.validateString)(properties.cidrip)),errors.collect(cdk.propertyValidator("ec2SecurityGroupId",cdk.validateString)(properties.ec2SecurityGroupId)),errors.collect(cdk.propertyValidator("ec2SecurityGroupName",cdk.validateString)(properties.ec2SecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupOwnerId",cdk.validateString)(properties.ec2SecurityGroupOwnerId)),errors.wrap('supplied properties not correct for "IngressProperty"')}function convertCfnDBSecurityGroupIngressPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBSecurityGroupIngressPropertyValidator(properties).assertSuccess(),{CIDRIP:cdk.stringToCloudFormation(properties.cidrip),EC2SecurityGroupId:cdk.stringToCloudFormation(properties.ec2SecurityGroupId),EC2SecurityGroupName:cdk.stringToCloudFormation(properties.ec2SecurityGroupName),EC2SecurityGroupOwnerId:cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId)}):properties}function CfnDBSecurityGroupIngressPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrip","CIDRIP",properties.CIDRIP!=null?cfn_parse.FromCloudFormation.getString(properties.CIDRIP):void 0),ret.addPropertyResult("ec2SecurityGroupId","EC2SecurityGroupId",properties.EC2SecurityGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupId):void 0),ret.addPropertyResult("ec2SecurityGroupName","EC2SecurityGroupName",properties.EC2SecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupOwnerId","EC2SecurityGroupOwnerId",properties.EC2SecurityGroupOwnerId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDBSecurityGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbSecurityGroupIngress",cdk.requiredValidator)(properties.dbSecurityGroupIngress)),errors.collect(cdk.propertyValidator("dbSecurityGroupIngress",cdk.listValidator(CfnDBSecurityGroupIngressPropertyValidator))(properties.dbSecurityGroupIngress)),errors.collect(cdk.propertyValidator("ec2VpcId",cdk.validateString)(properties.ec2VpcId)),errors.collect(cdk.propertyValidator("groupDescription",cdk.requiredValidator)(properties.groupDescription)),errors.collect(cdk.propertyValidator("groupDescription",cdk.validateString)(properties.groupDescription)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDBSecurityGroupProps"')}function convertCfnDBSecurityGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBSecurityGroupPropsValidator(properties).assertSuccess(),{DBSecurityGroupIngress:cdk.listMapper(convertCfnDBSecurityGroupIngressPropertyToCloudFormation)(properties.dbSecurityGroupIngress),EC2VpcId:cdk.stringToCloudFormation(properties.ec2VpcId),GroupDescription:cdk.stringToCloudFormation(properties.groupDescription),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDBSecurityGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbSecurityGroupIngress","DBSecurityGroupIngress",properties.DBSecurityGroupIngress!=null?cfn_parse.FromCloudFormation.getArray(CfnDBSecurityGroupIngressPropertyFromCloudFormation)(properties.DBSecurityGroupIngress):void 0),ret.addPropertyResult("ec2VpcId","EC2VpcId",properties.EC2VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2VpcId):void 0),ret.addPropertyResult("groupDescription","GroupDescription",properties.GroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.GroupDescription):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBSecurityGroupIngress extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBSecurityGroupIngressPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBSecurityGroupIngress(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBSecurityGroupIngressProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBSecurityGroupIngress),error}cdk.requireProperty(props,"dbSecurityGroupName",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.cidrip=props.cidrip,this.dbSecurityGroupName=props.dbSecurityGroupName,this.ec2SecurityGroupId=props.ec2SecurityGroupId,this.ec2SecurityGroupName=props.ec2SecurityGroupName,this.ec2SecurityGroupOwnerId=props.ec2SecurityGroupOwnerId}get cfnProperties(){return{cidrip:this.cidrip,dbSecurityGroupName:this.dbSecurityGroupName,ec2SecurityGroupId:this.ec2SecurityGroupId,ec2SecurityGroupName:this.ec2SecurityGroupName,ec2SecurityGroupOwnerId:this.ec2SecurityGroupOwnerId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBSecurityGroupIngressPropsToCloudFormation(props)}}exports.CfnDBSecurityGroupIngress=CfnDBSecurityGroupIngress,_k=JSII_RTTI_SYMBOL_1,CfnDBSecurityGroupIngress[_k]={fqn:"aws-cdk-lib.aws_rds.CfnDBSecurityGroupIngress",version:"2.94.0"},CfnDBSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBSecurityGroupIngress";function CfnDBSecurityGroupIngressPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrip",cdk.validateString)(properties.cidrip)),errors.collect(cdk.propertyValidator("dbSecurityGroupName",cdk.requiredValidator)(properties.dbSecurityGroupName)),errors.collect(cdk.propertyValidator("dbSecurityGroupName",cdk.validateString)(properties.dbSecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupId",cdk.validateString)(properties.ec2SecurityGroupId)),errors.collect(cdk.propertyValidator("ec2SecurityGroupName",cdk.validateString)(properties.ec2SecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupOwnerId",cdk.validateString)(properties.ec2SecurityGroupOwnerId)),errors.wrap('supplied properties not correct for "CfnDBSecurityGroupIngressProps"')}function convertCfnDBSecurityGroupIngressPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBSecurityGroupIngressPropsValidator(properties).assertSuccess(),{CIDRIP:cdk.stringToCloudFormation(properties.cidrip),DBSecurityGroupName:cdk.stringToCloudFormation(properties.dbSecurityGroupName),EC2SecurityGroupId:cdk.stringToCloudFormation(properties.ec2SecurityGroupId),EC2SecurityGroupName:cdk.stringToCloudFormation(properties.ec2SecurityGroupName),EC2SecurityGroupOwnerId:cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId)}):properties}function CfnDBSecurityGroupIngressPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrip","CIDRIP",properties.CIDRIP!=null?cfn_parse.FromCloudFormation.getString(properties.CIDRIP):void 0),ret.addPropertyResult("dbSecurityGroupName","DBSecurityGroupName",properties.DBSecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBSecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupId","EC2SecurityGroupId",properties.EC2SecurityGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupId):void 0),ret.addPropertyResult("ec2SecurityGroupName","EC2SecurityGroupName",properties.EC2SecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupOwnerId","EC2SecurityGroupOwnerId",properties.EC2SecurityGroupOwnerId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDBSubnetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDBSubnetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDBSubnetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDBSubnetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnDBSubnetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDBSubnetGroup),error}cdk.requireProperty(props,"dbSubnetGroupDescription",this),cdk.requireProperty(props,"subnetIds",this),this.dbSubnetGroupDescription=props.dbSubnetGroupDescription,this.dbSubnetGroupName=props.dbSubnetGroupName,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::DBSubnetGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{dbSubnetGroupDescription:this.dbSubnetGroupDescription,dbSubnetGroupName:this.dbSubnetGroupName,subnetIds:this.subnetIds,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDBSubnetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDBSubnetGroupPropsToCloudFormation(props)}}exports.CfnDBSubnetGroup=CfnDBSubnetGroup,_l=JSII_RTTI_SYMBOL_1,CfnDBSubnetGroup[_l]={fqn:"aws-cdk-lib.aws_rds.CfnDBSubnetGroup",version:"2.94.0"},CfnDBSubnetGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::DBSubnetGroup";function CfnDBSubnetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbSubnetGroupDescription",cdk.requiredValidator)(properties.dbSubnetGroupDescription)),errors.collect(cdk.propertyValidator("dbSubnetGroupDescription",cdk.validateString)(properties.dbSubnetGroupDescription)),errors.collect(cdk.propertyValidator("dbSubnetGroupName",cdk.validateString)(properties.dbSubnetGroupName)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDBSubnetGroupProps"')}function convertCfnDBSubnetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDBSubnetGroupPropsValidator(properties).assertSuccess(),{DBSubnetGroupDescription:cdk.stringToCloudFormation(properties.dbSubnetGroupDescription),DBSubnetGroupName:cdk.stringToCloudFormation(properties.dbSubnetGroupName),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDBSubnetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbSubnetGroupDescription","DBSubnetGroupDescription",properties.DBSubnetGroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupDescription):void 0),ret.addPropertyResult("dbSubnetGroupName","DBSubnetGroupName",properties.DBSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.DBSubnetGroupName):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEventSubscription extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEventSubscriptionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEventSubscription(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEventSubscription.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnEventSubscriptionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEventSubscription),error}cdk.requireProperty(props,"snsTopicArn",this),this.enabled=props.enabled,this.eventCategories=props.eventCategories,this.snsTopicArn=props.snsTopicArn,this.sourceIds=props.sourceIds,this.sourceType=props.sourceType,this.subscriptionName=props.subscriptionName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::EventSubscription",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{enabled:this.enabled,eventCategories:this.eventCategories,snsTopicArn:this.snsTopicArn,sourceIds:this.sourceIds,sourceType:this.sourceType,subscriptionName:this.subscriptionName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEventSubscription.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEventSubscriptionPropsToCloudFormation(props)}}exports.CfnEventSubscription=CfnEventSubscription,_m=JSII_RTTI_SYMBOL_1,CfnEventSubscription[_m]={fqn:"aws-cdk-lib.aws_rds.CfnEventSubscription",version:"2.94.0"},CfnEventSubscription.CFN_RESOURCE_TYPE_NAME="AWS::RDS::EventSubscription";function CfnEventSubscriptionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("enabled",cdk.validateBoolean)(properties.enabled)),errors.collect(cdk.propertyValidator("eventCategories",cdk.listValidator(cdk.validateString))(properties.eventCategories)),errors.collect(cdk.propertyValidator("snsTopicArn",cdk.requiredValidator)(properties.snsTopicArn)),errors.collect(cdk.propertyValidator("snsTopicArn",cdk.validateString)(properties.snsTopicArn)),errors.collect(cdk.propertyValidator("sourceIds",cdk.listValidator(cdk.validateString))(properties.sourceIds)),errors.collect(cdk.propertyValidator("sourceType",cdk.validateString)(properties.sourceType)),errors.collect(cdk.propertyValidator("subscriptionName",cdk.validateString)(properties.subscriptionName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnEventSubscriptionProps"')}function convertCfnEventSubscriptionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEventSubscriptionPropsValidator(properties).assertSuccess(),{Enabled:cdk.booleanToCloudFormation(properties.enabled),EventCategories:cdk.listMapper(cdk.stringToCloudFormation)(properties.eventCategories),SnsTopicArn:cdk.stringToCloudFormation(properties.snsTopicArn),SourceIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceIds),SourceType:cdk.stringToCloudFormation(properties.sourceType),SubscriptionName:cdk.stringToCloudFormation(properties.subscriptionName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnEventSubscriptionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("enabled","Enabled",properties.Enabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enabled):void 0),ret.addPropertyResult("eventCategories","EventCategories",properties.EventCategories!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EventCategories):void 0),ret.addPropertyResult("snsTopicArn","SnsTopicArn",properties.SnsTopicArn!=null?cfn_parse.FromCloudFormation.getString(properties.SnsTopicArn):void 0),ret.addPropertyResult("sourceIds","SourceIds",properties.SourceIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SourceIds):void 0),ret.addPropertyResult("sourceType","SourceType",properties.SourceType!=null?cfn_parse.FromCloudFormation.getString(properties.SourceType):void 0),ret.addPropertyResult("subscriptionName","SubscriptionName",properties.SubscriptionName!=null?cfn_parse.FromCloudFormation.getString(properties.SubscriptionName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnGlobalCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGlobalClusterPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnGlobalCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnGlobalCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnGlobalClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnGlobalCluster),error}this.deletionProtection=props.deletionProtection,this.engine=props.engine,this.engineVersion=props.engineVersion,this.globalClusterIdentifier=props.globalClusterIdentifier,this.sourceDbClusterIdentifier=props.sourceDbClusterIdentifier,this.storageEncrypted=props.storageEncrypted}get cfnProperties(){return{deletionProtection:this.deletionProtection,engine:this.engine,engineVersion:this.engineVersion,globalClusterIdentifier:this.globalClusterIdentifier,sourceDbClusterIdentifier:this.sourceDbClusterIdentifier,storageEncrypted:this.storageEncrypted}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnGlobalCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnGlobalClusterPropsToCloudFormation(props)}}exports.CfnGlobalCluster=CfnGlobalCluster,_o=JSII_RTTI_SYMBOL_1,CfnGlobalCluster[_o]={fqn:"aws-cdk-lib.aws_rds.CfnGlobalCluster",version:"2.94.0"},CfnGlobalCluster.CFN_RESOURCE_TYPE_NAME="AWS::RDS::GlobalCluster";function CfnGlobalClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deletionProtection",cdk.validateBoolean)(properties.deletionProtection)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("globalClusterIdentifier",cdk.validateString)(properties.globalClusterIdentifier)),errors.collect(cdk.propertyValidator("sourceDbClusterIdentifier",cdk.validateString)(properties.sourceDbClusterIdentifier)),errors.collect(cdk.propertyValidator("storageEncrypted",cdk.validateBoolean)(properties.storageEncrypted)),errors.wrap('supplied properties not correct for "CfnGlobalClusterProps"')}function convertCfnGlobalClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalClusterPropsValidator(properties).assertSuccess(),{DeletionProtection:cdk.booleanToCloudFormation(properties.deletionProtection),Engine:cdk.stringToCloudFormation(properties.engine),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),GlobalClusterIdentifier:cdk.stringToCloudFormation(properties.globalClusterIdentifier),SourceDBClusterIdentifier:cdk.stringToCloudFormation(properties.sourceDbClusterIdentifier),StorageEncrypted:cdk.booleanToCloudFormation(properties.storageEncrypted)}):properties}function CfnGlobalClusterPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deletionProtection","DeletionProtection",properties.DeletionProtection!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeletionProtection):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("globalClusterIdentifier","GlobalClusterIdentifier",properties.GlobalClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalClusterIdentifier):void 0),ret.addPropertyResult("sourceDbClusterIdentifier","SourceDBClusterIdentifier",properties.SourceDBClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SourceDBClusterIdentifier):void 0),ret.addPropertyResult("storageEncrypted","StorageEncrypted",properties.StorageEncrypted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.StorageEncrypted):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnOptionGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnOptionGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnOptionGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnOptionGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_rds_CfnOptionGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnOptionGroup),error}cdk.requireProperty(props,"engineName",this),cdk.requireProperty(props,"majorEngineVersion",this),cdk.requireProperty(props,"optionGroupDescription",this),this.engineName=props.engineName,this.majorEngineVersion=props.majorEngineVersion,this.optionConfigurations=props.optionConfigurations,this.optionGroupDescription=props.optionGroupDescription,this.optionGroupName=props.optionGroupName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::RDS::OptionGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{engineName:this.engineName,majorEngineVersion:this.majorEngineVersion,optionConfigurations:this.optionConfigurations,optionGroupDescription:this.optionGroupDescription,optionGroupName:this.optionGroupName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnOptionGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnOptionGroupPropsToCloudFormation(props)}}exports.CfnOptionGroup=CfnOptionGroup,_p=JSII_RTTI_SYMBOL_1,CfnOptionGroup[_p]={fqn:"aws-cdk-lib.aws_rds.CfnOptionGroup",version:"2.94.0"},CfnOptionGroup.CFN_RESOURCE_TYPE_NAME="AWS::RDS::OptionGroup";function CfnOptionGroupOptionSettingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "OptionSettingProperty"')}function convertCfnOptionGroupOptionSettingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnOptionGroupOptionSettingPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnOptionGroupOptionSettingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnOptionGroupOptionConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dbSecurityGroupMemberships",cdk.listValidator(cdk.validateString))(properties.dbSecurityGroupMemberships)),errors.collect(cdk.propertyValidator("optionName",cdk.requiredValidator)(properties.optionName)),errors.collect(cdk.propertyValidator("optionName",cdk.validateString)(properties.optionName)),errors.collect(cdk.propertyValidator("optionSettings",cdk.listValidator(CfnOptionGroupOptionSettingPropertyValidator))(properties.optionSettings)),errors.collect(cdk.propertyValidator("optionVersion",cdk.validateString)(properties.optionVersion)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("vpcSecurityGroupMemberships",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupMemberships)),errors.wrap('supplied properties not correct for "OptionConfigurationProperty"')}function convertCfnOptionGroupOptionConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnOptionGroupOptionConfigurationPropertyValidator(properties).assertSuccess(),{DBSecurityGroupMemberships:cdk.listMapper(cdk.stringToCloudFormation)(properties.dbSecurityGroupMemberships),OptionName:cdk.stringToCloudFormation(properties.optionName),OptionSettings:cdk.listMapper(convertCfnOptionGroupOptionSettingPropertyToCloudFormation)(properties.optionSettings),OptionVersion:cdk.stringToCloudFormation(properties.optionVersion),Port:cdk.numberToCloudFormation(properties.port),VpcSecurityGroupMemberships:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupMemberships)}):properties}function CfnOptionGroupOptionConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dbSecurityGroupMemberships","DBSecurityGroupMemberships",properties.DBSecurityGroupMemberships!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DBSecurityGroupMemberships):void 0),ret.addPropertyResult("optionName","OptionName",properties.OptionName!=null?cfn_parse.FromCloudFormation.getString(properties.OptionName):void 0),ret.addPropertyResult("optionSettings","OptionSettings",properties.OptionSettings!=null?cfn_parse.FromCloudFormation.getArray(CfnOptionGroupOptionSettingPropertyFromCloudFormation)(properties.OptionSettings):void 0),ret.addPropertyResult("optionVersion","OptionVersion",properties.OptionVersion!=null?cfn_parse.FromCloudFormation.getString(properties.OptionVersion):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("vpcSecurityGroupMemberships","VpcSecurityGroupMemberships",properties.VpcSecurityGroupMemberships!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupMemberships):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnOptionGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("engineName",cdk.requiredValidator)(properties.engineName)),errors.collect(cdk.propertyValidator("engineName",cdk.validateString)(properties.engineName)),errors.collect(cdk.propertyValidator("majorEngineVersion",cdk.requiredValidator)(properties.majorEngineVersion)),errors.collect(cdk.propertyValidator("majorEngineVersion",cdk.validateString)(properties.majorEngineVersion)),errors.collect(cdk.propertyValidator("optionConfigurations",cdk.listValidator(CfnOptionGroupOptionConfigurationPropertyValidator))(properties.optionConfigurations)),errors.collect(cdk.propertyValidator("optionGroupDescription",cdk.requiredValidator)(properties.optionGroupDescription)),errors.collect(cdk.propertyValidator("optionGroupDescription",cdk.validateString)(properties.optionGroupDescription)),errors.collect(cdk.propertyValidator("optionGroupName",cdk.validateString)(properties.optionGroupName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnOptionGroupProps"')}function convertCfnOptionGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnOptionGroupPropsValidator(properties).assertSuccess(),{EngineName:cdk.stringToCloudFormation(properties.engineName),MajorEngineVersion:cdk.stringToCloudFormation(properties.majorEngineVersion),OptionConfigurations:cdk.listMapper(convertCfnOptionGroupOptionConfigurationPropertyToCloudFormation)(properties.optionConfigurations),OptionGroupDescription:cdk.stringToCloudFormation(properties.optionGroupDescription),OptionGroupName:cdk.stringToCloudFormation(properties.optionGroupName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnOptionGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("engineName","EngineName",properties.EngineName!=null?cfn_parse.FromCloudFormation.getString(properties.EngineName):void 0),ret.addPropertyResult("majorEngineVersion","MajorEngineVersion",properties.MajorEngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.MajorEngineVersion):void 0),ret.addPropertyResult("optionConfigurations","OptionConfigurations",properties.OptionConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnOptionGroupOptionConfigurationPropertyFromCloudFormation)(properties.OptionConfigurations):void 0),ret.addPropertyResult("optionGroupDescription","OptionGroupDescription",properties.OptionGroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.OptionGroupDescription):void 0),ret.addPropertyResult("optionGroupName","OptionGroupName",properties.OptionGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.OptionGroupName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
