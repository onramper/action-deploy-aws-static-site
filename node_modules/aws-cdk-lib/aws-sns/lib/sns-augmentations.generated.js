"use strict";Object.defineProperty(exports,"__esModule",{value:!0});const cw=require("../../aws-cloudwatch"),topic_base_1=require("./topic-base");topic_base_1.TopicBase.prototype.metric=function(metricName,props){return new cw.Metric({namespace:"AWS/SNS",metricName,dimensionsMap:{TopicName:this.topicName},...props}).attachTo(this)},topic_base_1.TopicBase.prototype.metricPublishSize=function(props){return this.metric("PublishSize",{statistic:"Average",...props})},topic_base_1.TopicBase.prototype.metricNumberOfMessagesPublished=function(props){return this.metric("NumberOfMessagesPublished",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricNumberOfNotificationsDelivered=function(props){return this.metric("NumberOfNotificationsDelivered",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricNumberOfNotificationsFailed=function(props){return this.metric("NumberOfNotificationsFailed",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricNumberOfNotificationsFilteredOut=function(props){return this.metric("NumberOfNotificationsFilteredOut",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricNumberOfNotificationsFilteredOutNoMessageAttributes=function(props){return this.metric("NumberOfNotificationsFilteredOut-NoMessageAttributes",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricNumberOfNotificationsFilteredOutInvalidAttributes=function(props){return this.metric("NumberOfNotificationsFilteredOut-InvalidAttributes",{statistic:"Sum",...props})},topic_base_1.TopicBase.prototype.metricSMSMonthToDateSpentUSD=function(props){return this.metric("SMSMonthToDateSpentUSD",{statistic:"Maximum",...props})},topic_base_1.TopicBase.prototype.metricSMSSuccessRate=function(props){return this.metric("SMSSuccessRate",{statistic:"Sum",...props})};
