"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnEnvironment=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnEnvironment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEnvironmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEnvironment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEnvironment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_mwaa_CfnEnvironmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEnvironment),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrLoggingConfigurationDagProcessingLogsCloudWatchLogGroupArn=cdk.Token.asString(this.getAtt("LoggingConfiguration.DagProcessingLogs.CloudWatchLogGroupArn",cdk.ResolutionTypeHint.STRING)),this.attrLoggingConfigurationSchedulerLogsCloudWatchLogGroupArn=cdk.Token.asString(this.getAtt("LoggingConfiguration.SchedulerLogs.CloudWatchLogGroupArn",cdk.ResolutionTypeHint.STRING)),this.attrLoggingConfigurationTaskLogsCloudWatchLogGroupArn=cdk.Token.asString(this.getAtt("LoggingConfiguration.TaskLogs.CloudWatchLogGroupArn",cdk.ResolutionTypeHint.STRING)),this.attrLoggingConfigurationWebserverLogsCloudWatchLogGroupArn=cdk.Token.asString(this.getAtt("LoggingConfiguration.WebserverLogs.CloudWatchLogGroupArn",cdk.ResolutionTypeHint.STRING)),this.attrLoggingConfigurationWorkerLogsCloudWatchLogGroupArn=cdk.Token.asString(this.getAtt("LoggingConfiguration.WorkerLogs.CloudWatchLogGroupArn",cdk.ResolutionTypeHint.STRING)),this.attrWebserverUrl=cdk.Token.asString(this.getAtt("WebserverUrl",cdk.ResolutionTypeHint.STRING)),this.airflowConfigurationOptions=props.airflowConfigurationOptions,this.airflowVersion=props.airflowVersion,this.dagS3Path=props.dagS3Path,this.environmentClass=props.environmentClass,this.executionRoleArn=props.executionRoleArn,this.kmsKey=props.kmsKey,this.loggingConfiguration=props.loggingConfiguration,this.maxWorkers=props.maxWorkers,this.minWorkers=props.minWorkers,this.name=props.name,this.networkConfiguration=props.networkConfiguration,this.pluginsS3ObjectVersion=props.pluginsS3ObjectVersion,this.pluginsS3Path=props.pluginsS3Path,this.requirementsS3ObjectVersion=props.requirementsS3ObjectVersion,this.requirementsS3Path=props.requirementsS3Path,this.schedulers=props.schedulers,this.sourceBucketArn=props.sourceBucketArn,this.startupScriptS3ObjectVersion=props.startupScriptS3ObjectVersion,this.startupScriptS3Path=props.startupScriptS3Path,this.tags=new cdk.TagManager(cdk.TagType.MAP,"AWS::MWAA::Environment",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.webserverAccessMode=props.webserverAccessMode,this.weeklyMaintenanceWindowStart=props.weeklyMaintenanceWindowStart}get cfnProperties(){return{airflowConfigurationOptions:this.airflowConfigurationOptions,airflowVersion:this.airflowVersion,dagS3Path:this.dagS3Path,environmentClass:this.environmentClass,executionRoleArn:this.executionRoleArn,kmsKey:this.kmsKey,loggingConfiguration:this.loggingConfiguration,maxWorkers:this.maxWorkers,minWorkers:this.minWorkers,name:this.name,networkConfiguration:this.networkConfiguration,pluginsS3ObjectVersion:this.pluginsS3ObjectVersion,pluginsS3Path:this.pluginsS3Path,requirementsS3ObjectVersion:this.requirementsS3ObjectVersion,requirementsS3Path:this.requirementsS3Path,schedulers:this.schedulers,sourceBucketArn:this.sourceBucketArn,startupScriptS3ObjectVersion:this.startupScriptS3ObjectVersion,startupScriptS3Path:this.startupScriptS3Path,tags:this.tags.renderTags(),webserverAccessMode:this.webserverAccessMode,weeklyMaintenanceWindowStart:this.weeklyMaintenanceWindowStart}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEnvironment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEnvironmentPropsToCloudFormation(props)}}exports.CfnEnvironment=CfnEnvironment,_a=JSII_RTTI_SYMBOL_1,CfnEnvironment[_a]={fqn:"aws-cdk-lib.aws_mwaa.CfnEnvironment",version:"2.94.0"},CfnEnvironment.CFN_RESOURCE_TYPE_NAME="AWS::MWAA::Environment";function CfnEnvironmentNetworkConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.wrap('supplied properties not correct for "NetworkConfigurationProperty"')}function convertCfnEnvironmentNetworkConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentNetworkConfigurationPropertyValidator(properties).assertSuccess(),{SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds)}):properties}function CfnEnvironmentNetworkConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEnvironmentModuleLoggingConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogGroupArn",cdk.validateString)(properties.cloudWatchLogGroupArn)),errors.collect(cdk.propertyValidator("enabled",cdk.validateBoolean)(properties.enabled)),errors.collect(cdk.propertyValidator("logLevel",cdk.validateString)(properties.logLevel)),errors.wrap('supplied properties not correct for "ModuleLoggingConfigurationProperty"')}function convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentModuleLoggingConfigurationPropertyValidator(properties).assertSuccess(),{CloudWatchLogGroupArn:cdk.stringToCloudFormation(properties.cloudWatchLogGroupArn),Enabled:cdk.booleanToCloudFormation(properties.enabled),LogLevel:cdk.stringToCloudFormation(properties.logLevel)}):properties}function CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cloudWatchLogGroupArn","CloudWatchLogGroupArn",properties.CloudWatchLogGroupArn!=null?cfn_parse.FromCloudFormation.getString(properties.CloudWatchLogGroupArn):void 0),ret.addPropertyResult("enabled","Enabled",properties.Enabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enabled):void 0),ret.addPropertyResult("logLevel","LogLevel",properties.LogLevel!=null?cfn_parse.FromCloudFormation.getString(properties.LogLevel):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEnvironmentLoggingConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dagProcessingLogs",CfnEnvironmentModuleLoggingConfigurationPropertyValidator)(properties.dagProcessingLogs)),errors.collect(cdk.propertyValidator("schedulerLogs",CfnEnvironmentModuleLoggingConfigurationPropertyValidator)(properties.schedulerLogs)),errors.collect(cdk.propertyValidator("taskLogs",CfnEnvironmentModuleLoggingConfigurationPropertyValidator)(properties.taskLogs)),errors.collect(cdk.propertyValidator("webserverLogs",CfnEnvironmentModuleLoggingConfigurationPropertyValidator)(properties.webserverLogs)),errors.collect(cdk.propertyValidator("workerLogs",CfnEnvironmentModuleLoggingConfigurationPropertyValidator)(properties.workerLogs)),errors.wrap('supplied properties not correct for "LoggingConfigurationProperty"')}function convertCfnEnvironmentLoggingConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentLoggingConfigurationPropertyValidator(properties).assertSuccess(),{DagProcessingLogs:convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties.dagProcessingLogs),SchedulerLogs:convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties.schedulerLogs),TaskLogs:convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties.taskLogs),WebserverLogs:convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties.webserverLogs),WorkerLogs:convertCfnEnvironmentModuleLoggingConfigurationPropertyToCloudFormation(properties.workerLogs)}):properties}function CfnEnvironmentLoggingConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dagProcessingLogs","DagProcessingLogs",properties.DagProcessingLogs!=null?CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties.DagProcessingLogs):void 0),ret.addPropertyResult("schedulerLogs","SchedulerLogs",properties.SchedulerLogs!=null?CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties.SchedulerLogs):void 0),ret.addPropertyResult("taskLogs","TaskLogs",properties.TaskLogs!=null?CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties.TaskLogs):void 0),ret.addPropertyResult("webserverLogs","WebserverLogs",properties.WebserverLogs!=null?CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties.WebserverLogs):void 0),ret.addPropertyResult("workerLogs","WorkerLogs",properties.WorkerLogs!=null?CfnEnvironmentModuleLoggingConfigurationPropertyFromCloudFormation(properties.WorkerLogs):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEnvironmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("airflowConfigurationOptions",cdk.validateObject)(properties.airflowConfigurationOptions)),errors.collect(cdk.propertyValidator("airflowVersion",cdk.validateString)(properties.airflowVersion)),errors.collect(cdk.propertyValidator("dagS3Path",cdk.validateString)(properties.dagS3Path)),errors.collect(cdk.propertyValidator("environmentClass",cdk.validateString)(properties.environmentClass)),errors.collect(cdk.propertyValidator("executionRoleArn",cdk.validateString)(properties.executionRoleArn)),errors.collect(cdk.propertyValidator("kmsKey",cdk.validateString)(properties.kmsKey)),errors.collect(cdk.propertyValidator("loggingConfiguration",CfnEnvironmentLoggingConfigurationPropertyValidator)(properties.loggingConfiguration)),errors.collect(cdk.propertyValidator("maxWorkers",cdk.validateNumber)(properties.maxWorkers)),errors.collect(cdk.propertyValidator("minWorkers",cdk.validateNumber)(properties.minWorkers)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("networkConfiguration",CfnEnvironmentNetworkConfigurationPropertyValidator)(properties.networkConfiguration)),errors.collect(cdk.propertyValidator("pluginsS3ObjectVersion",cdk.validateString)(properties.pluginsS3ObjectVersion)),errors.collect(cdk.propertyValidator("pluginsS3Path",cdk.validateString)(properties.pluginsS3Path)),errors.collect(cdk.propertyValidator("requirementsS3ObjectVersion",cdk.validateString)(properties.requirementsS3ObjectVersion)),errors.collect(cdk.propertyValidator("requirementsS3Path",cdk.validateString)(properties.requirementsS3Path)),errors.collect(cdk.propertyValidator("schedulers",cdk.validateNumber)(properties.schedulers)),errors.collect(cdk.propertyValidator("sourceBucketArn",cdk.validateString)(properties.sourceBucketArn)),errors.collect(cdk.propertyValidator("startupScriptS3ObjectVersion",cdk.validateString)(properties.startupScriptS3ObjectVersion)),errors.collect(cdk.propertyValidator("startupScriptS3Path",cdk.validateString)(properties.startupScriptS3Path)),errors.collect(cdk.propertyValidator("tags",cdk.validateObject)(properties.tags)),errors.collect(cdk.propertyValidator("webserverAccessMode",cdk.validateString)(properties.webserverAccessMode)),errors.collect(cdk.propertyValidator("weeklyMaintenanceWindowStart",cdk.validateString)(properties.weeklyMaintenanceWindowStart)),errors.wrap('supplied properties not correct for "CfnEnvironmentProps"')}function convertCfnEnvironmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEnvironmentPropsValidator(properties).assertSuccess(),{AirflowConfigurationOptions:cdk.objectToCloudFormation(properties.airflowConfigurationOptions),AirflowVersion:cdk.stringToCloudFormation(properties.airflowVersion),DagS3Path:cdk.stringToCloudFormation(properties.dagS3Path),EnvironmentClass:cdk.stringToCloudFormation(properties.environmentClass),ExecutionRoleArn:cdk.stringToCloudFormation(properties.executionRoleArn),KmsKey:cdk.stringToCloudFormation(properties.kmsKey),LoggingConfiguration:convertCfnEnvironmentLoggingConfigurationPropertyToCloudFormation(properties.loggingConfiguration),MaxWorkers:cdk.numberToCloudFormation(properties.maxWorkers),MinWorkers:cdk.numberToCloudFormation(properties.minWorkers),Name:cdk.stringToCloudFormation(properties.name),NetworkConfiguration:convertCfnEnvironmentNetworkConfigurationPropertyToCloudFormation(properties.networkConfiguration),PluginsS3ObjectVersion:cdk.stringToCloudFormation(properties.pluginsS3ObjectVersion),PluginsS3Path:cdk.stringToCloudFormation(properties.pluginsS3Path),RequirementsS3ObjectVersion:cdk.stringToCloudFormation(properties.requirementsS3ObjectVersion),RequirementsS3Path:cdk.stringToCloudFormation(properties.requirementsS3Path),Schedulers:cdk.numberToCloudFormation(properties.schedulers),SourceBucketArn:cdk.stringToCloudFormation(properties.sourceBucketArn),StartupScriptS3ObjectVersion:cdk.stringToCloudFormation(properties.startupScriptS3ObjectVersion),StartupScriptS3Path:cdk.stringToCloudFormation(properties.startupScriptS3Path),Tags:cdk.objectToCloudFormation(properties.tags),WebserverAccessMode:cdk.stringToCloudFormation(properties.webserverAccessMode),WeeklyMaintenanceWindowStart:cdk.stringToCloudFormation(properties.weeklyMaintenanceWindowStart)}):properties}function CfnEnvironmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("airflowConfigurationOptions","AirflowConfigurationOptions",properties.AirflowConfigurationOptions!=null?cfn_parse.FromCloudFormation.getAny(properties.AirflowConfigurationOptions):void 0),ret.addPropertyResult("airflowVersion","AirflowVersion",properties.AirflowVersion!=null?cfn_parse.FromCloudFormation.getString(properties.AirflowVersion):void 0),ret.addPropertyResult("dagS3Path","DagS3Path",properties.DagS3Path!=null?cfn_parse.FromCloudFormation.getString(properties.DagS3Path):void 0),ret.addPropertyResult("environmentClass","EnvironmentClass",properties.EnvironmentClass!=null?cfn_parse.FromCloudFormation.getString(properties.EnvironmentClass):void 0),ret.addPropertyResult("executionRoleArn","ExecutionRoleArn",properties.ExecutionRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.ExecutionRoleArn):void 0),ret.addPropertyResult("kmsKey","KmsKey",properties.KmsKey!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKey):void 0),ret.addPropertyResult("loggingConfiguration","LoggingConfiguration",properties.LoggingConfiguration!=null?CfnEnvironmentLoggingConfigurationPropertyFromCloudFormation(properties.LoggingConfiguration):void 0),ret.addPropertyResult("maxWorkers","MaxWorkers",properties.MaxWorkers!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxWorkers):void 0),ret.addPropertyResult("minWorkers","MinWorkers",properties.MinWorkers!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinWorkers):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("networkConfiguration","NetworkConfiguration",properties.NetworkConfiguration!=null?CfnEnvironmentNetworkConfigurationPropertyFromCloudFormation(properties.NetworkConfiguration):void 0),ret.addPropertyResult("pluginsS3ObjectVersion","PluginsS3ObjectVersion",properties.PluginsS3ObjectVersion!=null?cfn_parse.FromCloudFormation.getString(properties.PluginsS3ObjectVersion):void 0),ret.addPropertyResult("pluginsS3Path","PluginsS3Path",properties.PluginsS3Path!=null?cfn_parse.FromCloudFormation.getString(properties.PluginsS3Path):void 0),ret.addPropertyResult("requirementsS3ObjectVersion","RequirementsS3ObjectVersion",properties.RequirementsS3ObjectVersion!=null?cfn_parse.FromCloudFormation.getString(properties.RequirementsS3ObjectVersion):void 0),ret.addPropertyResult("requirementsS3Path","RequirementsS3Path",properties.RequirementsS3Path!=null?cfn_parse.FromCloudFormation.getString(properties.RequirementsS3Path):void 0),ret.addPropertyResult("schedulers","Schedulers",properties.Schedulers!=null?cfn_parse.FromCloudFormation.getNumber(properties.Schedulers):void 0),ret.addPropertyResult("sourceBucketArn","SourceBucketArn",properties.SourceBucketArn!=null?cfn_parse.FromCloudFormation.getString(properties.SourceBucketArn):void 0),ret.addPropertyResult("startupScriptS3ObjectVersion","StartupScriptS3ObjectVersion",properties.StartupScriptS3ObjectVersion!=null?cfn_parse.FromCloudFormation.getString(properties.StartupScriptS3ObjectVersion):void 0),ret.addPropertyResult("startupScriptS3Path","StartupScriptS3Path",properties.StartupScriptS3Path!=null?cfn_parse.FromCloudFormation.getString(properties.StartupScriptS3Path):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getAny(properties.Tags):void 0),ret.addPropertyResult("webserverAccessMode","WebserverAccessMode",properties.WebserverAccessMode!=null?cfn_parse.FromCloudFormation.getString(properties.WebserverAccessMode):void 0),ret.addPropertyResult("weeklyMaintenanceWindowStart","WeeklyMaintenanceWindowStart",properties.WeeklyMaintenanceWindowStart!=null?cfn_parse.FromCloudFormation.getString(properties.WeeklyMaintenanceWindowStart):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
