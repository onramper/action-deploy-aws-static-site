"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.LexMetrics=void 0;class LexMetrics{static runtimeRequestCountSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeRequestCount",dimensionsMap:dimensions,statistic:"Sum"}}static runtimeSuccessfulRequestLatencyAverage(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeSuccessfulRequestLatency",dimensionsMap:dimensions,statistic:"Average"}}static runtimeInvalidLambdaResponsesSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeInvalidLambdaResponses",dimensionsMap:dimensions,statistic:"Sum"}}static runtimeLambdaErrorsSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeLambdaErrors",dimensionsMap:dimensions,statistic:"Sum"}}static missedUtteranceCountSum(dimensions){return{namespace:"AWS/Lex",metricName:"MissedUtteranceCount",dimensionsMap:dimensions,statistic:"Sum"}}static runtimePollyErrorsSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimePollyErrors",dimensionsMap:dimensions,statistic:"Sum"}}static runtimeSystemErrorsSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeSystemErrors",dimensionsMap:dimensions,statistic:"Sum"}}static runtimeThrottledEventsSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeThrottledEvents",dimensionsMap:dimensions,statistic:"Sum"}}static runtimeUserErrorsSum(dimensions){return{namespace:"AWS/Lex",metricName:"RuntimeUserErrors",dimensionsMap:dimensions,statistic:"Sum"}}}exports.LexMetrics=LexMetrics;
