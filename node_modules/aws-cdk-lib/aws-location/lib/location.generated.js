"use strict";var _a,_b,_c,_d,_e,_f;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTrackerConsumer=exports.CfnTracker=exports.CfnRouteCalculator=exports.CfnPlaceIndex=exports.CfnMap=exports.CfnGeofenceCollection=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnGeofenceCollection extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGeofenceCollectionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnGeofenceCollection(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnGeofenceCollection.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnGeofenceCollectionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnGeofenceCollection),error}cdk.requireProperty(props,"collectionName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCollectionArn=cdk.Token.asString(this.getAtt("CollectionArn",cdk.ResolutionTypeHint.STRING)),this.attrCreateTime=cdk.Token.asString(this.getAtt("CreateTime",cdk.ResolutionTypeHint.STRING)),this.attrUpdateTime=cdk.Token.asString(this.getAtt("UpdateTime",cdk.ResolutionTypeHint.STRING)),this.collectionName=props.collectionName,this.description=props.description,this.kmsKeyId=props.kmsKeyId,this.pricingPlan=props.pricingPlan,this.pricingPlanDataSource=props.pricingPlanDataSource}get cfnProperties(){return{collectionName:this.collectionName,description:this.description,kmsKeyId:this.kmsKeyId,pricingPlan:this.pricingPlan,pricingPlanDataSource:this.pricingPlanDataSource}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnGeofenceCollection.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnGeofenceCollectionPropsToCloudFormation(props)}}exports.CfnGeofenceCollection=CfnGeofenceCollection,_a=JSII_RTTI_SYMBOL_1,CfnGeofenceCollection[_a]={fqn:"aws-cdk-lib.aws_location.CfnGeofenceCollection",version:"2.94.0"},CfnGeofenceCollection.CFN_RESOURCE_TYPE_NAME="AWS::Location::GeofenceCollection";function CfnGeofenceCollectionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("collectionName",cdk.requiredValidator)(properties.collectionName)),errors.collect(cdk.propertyValidator("collectionName",cdk.validateString)(properties.collectionName)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("pricingPlan",cdk.validateString)(properties.pricingPlan)),errors.collect(cdk.propertyValidator("pricingPlanDataSource",cdk.validateString)(properties.pricingPlanDataSource)),errors.wrap('supplied properties not correct for "CfnGeofenceCollectionProps"')}function convertCfnGeofenceCollectionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGeofenceCollectionPropsValidator(properties).assertSuccess(),{CollectionName:cdk.stringToCloudFormation(properties.collectionName),Description:cdk.stringToCloudFormation(properties.description),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),PricingPlan:cdk.stringToCloudFormation(properties.pricingPlan),PricingPlanDataSource:cdk.stringToCloudFormation(properties.pricingPlanDataSource)}):properties}function CfnGeofenceCollectionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("collectionName","CollectionName",properties.CollectionName!=null?cfn_parse.FromCloudFormation.getString(properties.CollectionName):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("pricingPlan","PricingPlan",properties.PricingPlan!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlan):void 0),ret.addPropertyResult("pricingPlanDataSource","PricingPlanDataSource",properties.PricingPlanDataSource!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlanDataSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnMap extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnMapPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnMap(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnMap.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnMapProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnMap),error}cdk.requireProperty(props,"configuration",this),cdk.requireProperty(props,"mapName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCreateTime=cdk.Token.asString(this.getAtt("CreateTime",cdk.ResolutionTypeHint.STRING)),this.attrDataSource=cdk.Token.asString(this.getAtt("DataSource",cdk.ResolutionTypeHint.STRING)),this.attrMapArn=cdk.Token.asString(this.getAtt("MapArn",cdk.ResolutionTypeHint.STRING)),this.attrUpdateTime=cdk.Token.asString(this.getAtt("UpdateTime",cdk.ResolutionTypeHint.STRING)),this.configuration=props.configuration,this.description=props.description,this.mapName=props.mapName,this.pricingPlan=props.pricingPlan}get cfnProperties(){return{configuration:this.configuration,description:this.description,mapName:this.mapName,pricingPlan:this.pricingPlan}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnMap.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnMapPropsToCloudFormation(props)}}exports.CfnMap=CfnMap,_b=JSII_RTTI_SYMBOL_1,CfnMap[_b]={fqn:"aws-cdk-lib.aws_location.CfnMap",version:"2.94.0"},CfnMap.CFN_RESOURCE_TYPE_NAME="AWS::Location::Map";function CfnMapMapConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("style",cdk.requiredValidator)(properties.style)),errors.collect(cdk.propertyValidator("style",cdk.validateString)(properties.style)),errors.wrap('supplied properties not correct for "MapConfigurationProperty"')}function convertCfnMapMapConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMapMapConfigurationPropertyValidator(properties).assertSuccess(),{Style:cdk.stringToCloudFormation(properties.style)}):properties}function CfnMapMapConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("style","Style",properties.Style!=null?cfn_parse.FromCloudFormation.getString(properties.Style):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMapPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("configuration",cdk.requiredValidator)(properties.configuration)),errors.collect(cdk.propertyValidator("configuration",CfnMapMapConfigurationPropertyValidator)(properties.configuration)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("mapName",cdk.requiredValidator)(properties.mapName)),errors.collect(cdk.propertyValidator("mapName",cdk.validateString)(properties.mapName)),errors.collect(cdk.propertyValidator("pricingPlan",cdk.validateString)(properties.pricingPlan)),errors.wrap('supplied properties not correct for "CfnMapProps"')}function convertCfnMapPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMapPropsValidator(properties).assertSuccess(),{Configuration:convertCfnMapMapConfigurationPropertyToCloudFormation(properties.configuration),Description:cdk.stringToCloudFormation(properties.description),MapName:cdk.stringToCloudFormation(properties.mapName),PricingPlan:cdk.stringToCloudFormation(properties.pricingPlan)}):properties}function CfnMapPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("configuration","Configuration",properties.Configuration!=null?CfnMapMapConfigurationPropertyFromCloudFormation(properties.Configuration):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("mapName","MapName",properties.MapName!=null?cfn_parse.FromCloudFormation.getString(properties.MapName):void 0),ret.addPropertyResult("pricingPlan","PricingPlan",properties.PricingPlan!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlan):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPlaceIndex extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPlaceIndexPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPlaceIndex(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnPlaceIndex.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnPlaceIndexProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPlaceIndex),error}cdk.requireProperty(props,"dataSource",this),cdk.requireProperty(props,"indexName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCreateTime=cdk.Token.asString(this.getAtt("CreateTime",cdk.ResolutionTypeHint.STRING)),this.attrIndexArn=cdk.Token.asString(this.getAtt("IndexArn",cdk.ResolutionTypeHint.STRING)),this.attrUpdateTime=cdk.Token.asString(this.getAtt("UpdateTime",cdk.ResolutionTypeHint.STRING)),this.dataSource=props.dataSource,this.dataSourceConfiguration=props.dataSourceConfiguration,this.description=props.description,this.indexName=props.indexName,this.pricingPlan=props.pricingPlan}get cfnProperties(){return{dataSource:this.dataSource,dataSourceConfiguration:this.dataSourceConfiguration,description:this.description,indexName:this.indexName,pricingPlan:this.pricingPlan}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPlaceIndex.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPlaceIndexPropsToCloudFormation(props)}}exports.CfnPlaceIndex=CfnPlaceIndex,_c=JSII_RTTI_SYMBOL_1,CfnPlaceIndex[_c]={fqn:"aws-cdk-lib.aws_location.CfnPlaceIndex",version:"2.94.0"},CfnPlaceIndex.CFN_RESOURCE_TYPE_NAME="AWS::Location::PlaceIndex";function CfnPlaceIndexDataSourceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("intendedUse",cdk.validateString)(properties.intendedUse)),errors.wrap('supplied properties not correct for "DataSourceConfigurationProperty"')}function convertCfnPlaceIndexDataSourceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlaceIndexDataSourceConfigurationPropertyValidator(properties).assertSuccess(),{IntendedUse:cdk.stringToCloudFormation(properties.intendedUse)}):properties}function CfnPlaceIndexDataSourceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("intendedUse","IntendedUse",properties.IntendedUse!=null?cfn_parse.FromCloudFormation.getString(properties.IntendedUse):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPlaceIndexPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dataSource",cdk.requiredValidator)(properties.dataSource)),errors.collect(cdk.propertyValidator("dataSource",cdk.validateString)(properties.dataSource)),errors.collect(cdk.propertyValidator("dataSourceConfiguration",CfnPlaceIndexDataSourceConfigurationPropertyValidator)(properties.dataSourceConfiguration)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("indexName",cdk.requiredValidator)(properties.indexName)),errors.collect(cdk.propertyValidator("indexName",cdk.validateString)(properties.indexName)),errors.collect(cdk.propertyValidator("pricingPlan",cdk.validateString)(properties.pricingPlan)),errors.wrap('supplied properties not correct for "CfnPlaceIndexProps"')}function convertCfnPlaceIndexPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPlaceIndexPropsValidator(properties).assertSuccess(),{DataSource:cdk.stringToCloudFormation(properties.dataSource),DataSourceConfiguration:convertCfnPlaceIndexDataSourceConfigurationPropertyToCloudFormation(properties.dataSourceConfiguration),Description:cdk.stringToCloudFormation(properties.description),IndexName:cdk.stringToCloudFormation(properties.indexName),PricingPlan:cdk.stringToCloudFormation(properties.pricingPlan)}):properties}function CfnPlaceIndexPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dataSource","DataSource",properties.DataSource!=null?cfn_parse.FromCloudFormation.getString(properties.DataSource):void 0),ret.addPropertyResult("dataSourceConfiguration","DataSourceConfiguration",properties.DataSourceConfiguration!=null?CfnPlaceIndexDataSourceConfigurationPropertyFromCloudFormation(properties.DataSourceConfiguration):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("indexName","IndexName",properties.IndexName!=null?cfn_parse.FromCloudFormation.getString(properties.IndexName):void 0),ret.addPropertyResult("pricingPlan","PricingPlan",properties.PricingPlan!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlan):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRouteCalculator extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRouteCalculatorPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRouteCalculator(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRouteCalculator.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnRouteCalculatorProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRouteCalculator),error}cdk.requireProperty(props,"calculatorName",this),cdk.requireProperty(props,"dataSource",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCalculatorArn=cdk.Token.asString(this.getAtt("CalculatorArn",cdk.ResolutionTypeHint.STRING)),this.attrCreateTime=cdk.Token.asString(this.getAtt("CreateTime",cdk.ResolutionTypeHint.STRING)),this.attrUpdateTime=cdk.Token.asString(this.getAtt("UpdateTime",cdk.ResolutionTypeHint.STRING)),this.calculatorName=props.calculatorName,this.dataSource=props.dataSource,this.description=props.description,this.pricingPlan=props.pricingPlan}get cfnProperties(){return{calculatorName:this.calculatorName,dataSource:this.dataSource,description:this.description,pricingPlan:this.pricingPlan}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRouteCalculator.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRouteCalculatorPropsToCloudFormation(props)}}exports.CfnRouteCalculator=CfnRouteCalculator,_d=JSII_RTTI_SYMBOL_1,CfnRouteCalculator[_d]={fqn:"aws-cdk-lib.aws_location.CfnRouteCalculator",version:"2.94.0"},CfnRouteCalculator.CFN_RESOURCE_TYPE_NAME="AWS::Location::RouteCalculator";function CfnRouteCalculatorPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("calculatorName",cdk.requiredValidator)(properties.calculatorName)),errors.collect(cdk.propertyValidator("calculatorName",cdk.validateString)(properties.calculatorName)),errors.collect(cdk.propertyValidator("dataSource",cdk.requiredValidator)(properties.dataSource)),errors.collect(cdk.propertyValidator("dataSource",cdk.validateString)(properties.dataSource)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("pricingPlan",cdk.validateString)(properties.pricingPlan)),errors.wrap('supplied properties not correct for "CfnRouteCalculatorProps"')}function convertCfnRouteCalculatorPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRouteCalculatorPropsValidator(properties).assertSuccess(),{CalculatorName:cdk.stringToCloudFormation(properties.calculatorName),DataSource:cdk.stringToCloudFormation(properties.dataSource),Description:cdk.stringToCloudFormation(properties.description),PricingPlan:cdk.stringToCloudFormation(properties.pricingPlan)}):properties}function CfnRouteCalculatorPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("calculatorName","CalculatorName",properties.CalculatorName!=null?cfn_parse.FromCloudFormation.getString(properties.CalculatorName):void 0),ret.addPropertyResult("dataSource","DataSource",properties.DataSource!=null?cfn_parse.FromCloudFormation.getString(properties.DataSource):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("pricingPlan","PricingPlan",properties.PricingPlan!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlan):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTracker extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTrackerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTracker(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTracker.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnTrackerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTracker),error}cdk.requireProperty(props,"trackerName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCreateTime=cdk.Token.asString(this.getAtt("CreateTime",cdk.ResolutionTypeHint.STRING)),this.attrTrackerArn=cdk.Token.asString(this.getAtt("TrackerArn",cdk.ResolutionTypeHint.STRING)),this.attrUpdateTime=cdk.Token.asString(this.getAtt("UpdateTime",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.kmsKeyId=props.kmsKeyId,this.positionFiltering=props.positionFiltering,this.pricingPlan=props.pricingPlan,this.pricingPlanDataSource=props.pricingPlanDataSource,this.trackerName=props.trackerName}get cfnProperties(){return{description:this.description,kmsKeyId:this.kmsKeyId,positionFiltering:this.positionFiltering,pricingPlan:this.pricingPlan,pricingPlanDataSource:this.pricingPlanDataSource,trackerName:this.trackerName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTracker.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTrackerPropsToCloudFormation(props)}}exports.CfnTracker=CfnTracker,_e=JSII_RTTI_SYMBOL_1,CfnTracker[_e]={fqn:"aws-cdk-lib.aws_location.CfnTracker",version:"2.94.0"},CfnTracker.CFN_RESOURCE_TYPE_NAME="AWS::Location::Tracker";function CfnTrackerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("positionFiltering",cdk.validateString)(properties.positionFiltering)),errors.collect(cdk.propertyValidator("pricingPlan",cdk.validateString)(properties.pricingPlan)),errors.collect(cdk.propertyValidator("pricingPlanDataSource",cdk.validateString)(properties.pricingPlanDataSource)),errors.collect(cdk.propertyValidator("trackerName",cdk.requiredValidator)(properties.trackerName)),errors.collect(cdk.propertyValidator("trackerName",cdk.validateString)(properties.trackerName)),errors.wrap('supplied properties not correct for "CfnTrackerProps"')}function convertCfnTrackerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrackerPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),PositionFiltering:cdk.stringToCloudFormation(properties.positionFiltering),PricingPlan:cdk.stringToCloudFormation(properties.pricingPlan),PricingPlanDataSource:cdk.stringToCloudFormation(properties.pricingPlanDataSource),TrackerName:cdk.stringToCloudFormation(properties.trackerName)}):properties}function CfnTrackerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("positionFiltering","PositionFiltering",properties.PositionFiltering!=null?cfn_parse.FromCloudFormation.getString(properties.PositionFiltering):void 0),ret.addPropertyResult("pricingPlan","PricingPlan",properties.PricingPlan!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlan):void 0),ret.addPropertyResult("pricingPlanDataSource","PricingPlanDataSource",properties.PricingPlanDataSource!=null?cfn_parse.FromCloudFormation.getString(properties.PricingPlanDataSource):void 0),ret.addPropertyResult("trackerName","TrackerName",properties.TrackerName!=null?cfn_parse.FromCloudFormation.getString(properties.TrackerName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTrackerConsumer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTrackerConsumerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTrackerConsumer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTrackerConsumer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_location_CfnTrackerConsumerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTrackerConsumer),error}cdk.requireProperty(props,"consumerArn",this),cdk.requireProperty(props,"trackerName",this),this.consumerArn=props.consumerArn,this.trackerName=props.trackerName}get cfnProperties(){return{consumerArn:this.consumerArn,trackerName:this.trackerName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTrackerConsumer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTrackerConsumerPropsToCloudFormation(props)}}exports.CfnTrackerConsumer=CfnTrackerConsumer,_f=JSII_RTTI_SYMBOL_1,CfnTrackerConsumer[_f]={fqn:"aws-cdk-lib.aws_location.CfnTrackerConsumer",version:"2.94.0"},CfnTrackerConsumer.CFN_RESOURCE_TYPE_NAME="AWS::Location::TrackerConsumer";function CfnTrackerConsumerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("consumerArn",cdk.requiredValidator)(properties.consumerArn)),errors.collect(cdk.propertyValidator("consumerArn",cdk.validateString)(properties.consumerArn)),errors.collect(cdk.propertyValidator("trackerName",cdk.requiredValidator)(properties.trackerName)),errors.collect(cdk.propertyValidator("trackerName",cdk.validateString)(properties.trackerName)),errors.wrap('supplied properties not correct for "CfnTrackerConsumerProps"')}function convertCfnTrackerConsumerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTrackerConsumerPropsValidator(properties).assertSuccess(),{ConsumerArn:cdk.stringToCloudFormation(properties.consumerArn),TrackerName:cdk.stringToCloudFormation(properties.trackerName)}):properties}function CfnTrackerConsumerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("consumerArn","ConsumerArn",properties.ConsumerArn!=null?cfn_parse.FromCloudFormation.getString(properties.ConsumerArn):void 0),ret.addPropertyResult("trackerName","TrackerName",properties.TrackerName!=null?cfn_parse.FromCloudFormation.getString(properties.TrackerName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
