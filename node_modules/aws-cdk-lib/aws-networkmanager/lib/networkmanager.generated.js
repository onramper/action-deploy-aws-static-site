"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnVpcAttachment=exports.CfnTransitGatewayRouteTableAttachment=exports.CfnTransitGatewayRegistration=exports.CfnTransitGatewayPeering=exports.CfnSiteToSiteVpnAttachment=exports.CfnSite=exports.CfnLinkAssociation=exports.CfnLink=exports.CfnGlobalNetwork=exports.CfnDevice=exports.CfnCustomerGatewayAssociation=exports.CfnCoreNetwork=exports.CfnConnectPeer=exports.CfnConnectAttachment=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnConnectAttachment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConnectAttachmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnConnectAttachment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnConnectAttachment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnConnectAttachmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnConnectAttachment),error}cdk.requireProperty(props,"coreNetworkId",this),cdk.requireProperty(props,"edgeLocation",this),cdk.requireProperty(props,"options",this),cdk.requireProperty(props,"transportAttachmentId",this),this.attrAttachmentId=cdk.Token.asString(this.getAtt("AttachmentId",cdk.ResolutionTypeHint.STRING)),this.attrAttachmentPolicyRuleNumber=cdk.Token.asNumber(this.getAtt("AttachmentPolicyRuleNumber",cdk.ResolutionTypeHint.NUMBER)),this.attrAttachmentType=cdk.Token.asString(this.getAtt("AttachmentType",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrOwnerAccountId=cdk.Token.asString(this.getAtt("OwnerAccountId",cdk.ResolutionTypeHint.STRING)),this.attrResourceArn=cdk.Token.asString(this.getAtt("ResourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSegmentName=cdk.Token.asString(this.getAtt("SegmentName",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrUpdatedAt=cdk.Token.asString(this.getAtt("UpdatedAt",cdk.ResolutionTypeHint.STRING)),this.coreNetworkId=props.coreNetworkId,this.edgeLocation=props.edgeLocation,this.options=props.options,this.proposedSegmentChange=props.proposedSegmentChange,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::ConnectAttachment",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.transportAttachmentId=props.transportAttachmentId}get cfnProperties(){return{coreNetworkId:this.coreNetworkId,edgeLocation:this.edgeLocation,options:this.options,proposedSegmentChange:this.proposedSegmentChange,tags:this.tags.renderTags(),transportAttachmentId:this.transportAttachmentId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnConnectAttachment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnConnectAttachmentPropsToCloudFormation(props)}}exports.CfnConnectAttachment=CfnConnectAttachment,_a=JSII_RTTI_SYMBOL_1,CfnConnectAttachment[_a]={fqn:"aws-cdk-lib.aws_networkmanager.CfnConnectAttachment",version:"2.94.0"},CfnConnectAttachment.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::ConnectAttachment";function CfnConnectAttachmentProposedSegmentChangePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachmentPolicyRuleNumber",cdk.validateNumber)(properties.attachmentPolicyRuleNumber)),errors.collect(cdk.propertyValidator("segmentName",cdk.validateString)(properties.segmentName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "ProposedSegmentChangeProperty"')}function convertCfnConnectAttachmentProposedSegmentChangePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectAttachmentProposedSegmentChangePropertyValidator(properties).assertSuccess(),{AttachmentPolicyRuleNumber:cdk.numberToCloudFormation(properties.attachmentPolicyRuleNumber),SegmentName:cdk.stringToCloudFormation(properties.segmentName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnConnectAttachmentProposedSegmentChangePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachmentPolicyRuleNumber","AttachmentPolicyRuleNumber",properties.AttachmentPolicyRuleNumber!=null?cfn_parse.FromCloudFormation.getNumber(properties.AttachmentPolicyRuleNumber):void 0),ret.addPropertyResult("segmentName","SegmentName",properties.SegmentName!=null?cfn_parse.FromCloudFormation.getString(properties.SegmentName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectAttachmentConnectAttachmentOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.wrap('supplied properties not correct for "ConnectAttachmentOptionsProperty"')}function convertCfnConnectAttachmentConnectAttachmentOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectAttachmentConnectAttachmentOptionsPropertyValidator(properties).assertSuccess(),{Protocol:cdk.stringToCloudFormation(properties.protocol)}):properties}function CfnConnectAttachmentConnectAttachmentOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectAttachmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.requiredValidator)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.validateString)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("edgeLocation",cdk.requiredValidator)(properties.edgeLocation)),errors.collect(cdk.propertyValidator("edgeLocation",cdk.validateString)(properties.edgeLocation)),errors.collect(cdk.propertyValidator("options",cdk.requiredValidator)(properties.options)),errors.collect(cdk.propertyValidator("options",CfnConnectAttachmentConnectAttachmentOptionsPropertyValidator)(properties.options)),errors.collect(cdk.propertyValidator("proposedSegmentChange",CfnConnectAttachmentProposedSegmentChangePropertyValidator)(properties.proposedSegmentChange)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("transportAttachmentId",cdk.requiredValidator)(properties.transportAttachmentId)),errors.collect(cdk.propertyValidator("transportAttachmentId",cdk.validateString)(properties.transportAttachmentId)),errors.wrap('supplied properties not correct for "CfnConnectAttachmentProps"')}function convertCfnConnectAttachmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectAttachmentPropsValidator(properties).assertSuccess(),{CoreNetworkId:cdk.stringToCloudFormation(properties.coreNetworkId),EdgeLocation:cdk.stringToCloudFormation(properties.edgeLocation),Options:convertCfnConnectAttachmentConnectAttachmentOptionsPropertyToCloudFormation(properties.options),ProposedSegmentChange:convertCfnConnectAttachmentProposedSegmentChangePropertyToCloudFormation(properties.proposedSegmentChange),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TransportAttachmentId:cdk.stringToCloudFormation(properties.transportAttachmentId)}):properties}function CfnConnectAttachmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coreNetworkId","CoreNetworkId",properties.CoreNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkId):void 0),ret.addPropertyResult("edgeLocation","EdgeLocation",properties.EdgeLocation!=null?cfn_parse.FromCloudFormation.getString(properties.EdgeLocation):void 0),ret.addPropertyResult("options","Options",properties.Options!=null?CfnConnectAttachmentConnectAttachmentOptionsPropertyFromCloudFormation(properties.Options):void 0),ret.addPropertyResult("proposedSegmentChange","ProposedSegmentChange",properties.ProposedSegmentChange!=null?CfnConnectAttachmentProposedSegmentChangePropertyFromCloudFormation(properties.ProposedSegmentChange):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("transportAttachmentId","TransportAttachmentId",properties.TransportAttachmentId!=null?cfn_parse.FromCloudFormation.getString(properties.TransportAttachmentId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnConnectPeer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConnectPeerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnConnectPeer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnConnectPeer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnConnectPeerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnConnectPeer),error}cdk.requireProperty(props,"connectAttachmentId",this),cdk.requireProperty(props,"peerAddress",this),this.attrConfiguration=this.getAtt("Configuration"),this.attrConfigurationBgpConfigurations=this.getAtt("Configuration.BgpConfigurations"),this.attrConfigurationCoreNetworkAddress=cdk.Token.asString(this.getAtt("Configuration.CoreNetworkAddress",cdk.ResolutionTypeHint.STRING)),this.attrConfigurationInsideCidrBlocks=cdk.Token.asList(this.getAtt("Configuration.InsideCidrBlocks",cdk.ResolutionTypeHint.STRING_LIST)),this.attrConfigurationPeerAddress=cdk.Token.asString(this.getAtt("Configuration.PeerAddress",cdk.ResolutionTypeHint.STRING)),this.attrConfigurationProtocol=cdk.Token.asString(this.getAtt("Configuration.Protocol",cdk.ResolutionTypeHint.STRING)),this.attrConnectPeerId=cdk.Token.asString(this.getAtt("ConnectPeerId",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkId=cdk.Token.asString(this.getAtt("CoreNetworkId",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdgeLocation=cdk.Token.asString(this.getAtt("EdgeLocation",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.bgpOptions=props.bgpOptions,this.connectAttachmentId=props.connectAttachmentId,this.coreNetworkAddress=props.coreNetworkAddress,this.insideCidrBlocks=props.insideCidrBlocks,this.peerAddress=props.peerAddress,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::ConnectPeer",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{bgpOptions:this.bgpOptions,connectAttachmentId:this.connectAttachmentId,coreNetworkAddress:this.coreNetworkAddress,insideCidrBlocks:this.insideCidrBlocks,peerAddress:this.peerAddress,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnConnectPeer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnConnectPeerPropsToCloudFormation(props)}}exports.CfnConnectPeer=CfnConnectPeer,_b=JSII_RTTI_SYMBOL_1,CfnConnectPeer[_b]={fqn:"aws-cdk-lib.aws_networkmanager.CfnConnectPeer",version:"2.94.0"},CfnConnectPeer.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::ConnectPeer";function CfnConnectPeerBgpOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("peerAsn",cdk.validateNumber)(properties.peerAsn)),errors.wrap('supplied properties not correct for "BgpOptionsProperty"')}function convertCfnConnectPeerBgpOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectPeerBgpOptionsPropertyValidator(properties).assertSuccess(),{PeerAsn:cdk.numberToCloudFormation(properties.peerAsn)}):properties}function CfnConnectPeerBgpOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("peerAsn","PeerAsn",properties.PeerAsn!=null?cfn_parse.FromCloudFormation.getNumber(properties.PeerAsn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectPeerConnectPeerBgpConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coreNetworkAddress",cdk.validateString)(properties.coreNetworkAddress)),errors.collect(cdk.propertyValidator("coreNetworkAsn",cdk.validateNumber)(properties.coreNetworkAsn)),errors.collect(cdk.propertyValidator("peerAddress",cdk.validateString)(properties.peerAddress)),errors.collect(cdk.propertyValidator("peerAsn",cdk.validateNumber)(properties.peerAsn)),errors.wrap('supplied properties not correct for "ConnectPeerBgpConfigurationProperty"')}function convertCfnConnectPeerConnectPeerBgpConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectPeerConnectPeerBgpConfigurationPropertyValidator(properties).assertSuccess(),{CoreNetworkAddress:cdk.stringToCloudFormation(properties.coreNetworkAddress),CoreNetworkAsn:cdk.numberToCloudFormation(properties.coreNetworkAsn),PeerAddress:cdk.stringToCloudFormation(properties.peerAddress),PeerAsn:cdk.numberToCloudFormation(properties.peerAsn)}):properties}function CfnConnectPeerConnectPeerBgpConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coreNetworkAddress","CoreNetworkAddress",properties.CoreNetworkAddress!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkAddress):void 0),ret.addPropertyResult("coreNetworkAsn","CoreNetworkAsn",properties.CoreNetworkAsn!=null?cfn_parse.FromCloudFormation.getNumber(properties.CoreNetworkAsn):void 0),ret.addPropertyResult("peerAddress","PeerAddress",properties.PeerAddress!=null?cfn_parse.FromCloudFormation.getString(properties.PeerAddress):void 0),ret.addPropertyResult("peerAsn","PeerAsn",properties.PeerAsn!=null?cfn_parse.FromCloudFormation.getNumber(properties.PeerAsn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectPeerConnectPeerConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bgpConfigurations",cdk.listValidator(CfnConnectPeerConnectPeerBgpConfigurationPropertyValidator))(properties.bgpConfigurations)),errors.collect(cdk.propertyValidator("coreNetworkAddress",cdk.validateString)(properties.coreNetworkAddress)),errors.collect(cdk.propertyValidator("insideCidrBlocks",cdk.listValidator(cdk.validateString))(properties.insideCidrBlocks)),errors.collect(cdk.propertyValidator("peerAddress",cdk.validateString)(properties.peerAddress)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.wrap('supplied properties not correct for "ConnectPeerConfigurationProperty"')}function convertCfnConnectPeerConnectPeerConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectPeerConnectPeerConfigurationPropertyValidator(properties).assertSuccess(),{BgpConfigurations:cdk.listMapper(convertCfnConnectPeerConnectPeerBgpConfigurationPropertyToCloudFormation)(properties.bgpConfigurations),CoreNetworkAddress:cdk.stringToCloudFormation(properties.coreNetworkAddress),InsideCidrBlocks:cdk.listMapper(cdk.stringToCloudFormation)(properties.insideCidrBlocks),PeerAddress:cdk.stringToCloudFormation(properties.peerAddress),Protocol:cdk.stringToCloudFormation(properties.protocol)}):properties}function CfnConnectPeerConnectPeerConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bgpConfigurations","BgpConfigurations",properties.BgpConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnConnectPeerConnectPeerBgpConfigurationPropertyFromCloudFormation)(properties.BgpConfigurations):void 0),ret.addPropertyResult("coreNetworkAddress","CoreNetworkAddress",properties.CoreNetworkAddress!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkAddress):void 0),ret.addPropertyResult("insideCidrBlocks","InsideCidrBlocks",properties.InsideCidrBlocks!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.InsideCidrBlocks):void 0),ret.addPropertyResult("peerAddress","PeerAddress",properties.PeerAddress!=null?cfn_parse.FromCloudFormation.getString(properties.PeerAddress):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectPeerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bgpOptions",CfnConnectPeerBgpOptionsPropertyValidator)(properties.bgpOptions)),errors.collect(cdk.propertyValidator("connectAttachmentId",cdk.requiredValidator)(properties.connectAttachmentId)),errors.collect(cdk.propertyValidator("connectAttachmentId",cdk.validateString)(properties.connectAttachmentId)),errors.collect(cdk.propertyValidator("coreNetworkAddress",cdk.validateString)(properties.coreNetworkAddress)),errors.collect(cdk.propertyValidator("insideCidrBlocks",cdk.listValidator(cdk.validateString))(properties.insideCidrBlocks)),errors.collect(cdk.propertyValidator("peerAddress",cdk.requiredValidator)(properties.peerAddress)),errors.collect(cdk.propertyValidator("peerAddress",cdk.validateString)(properties.peerAddress)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnConnectPeerProps"')}function convertCfnConnectPeerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectPeerPropsValidator(properties).assertSuccess(),{BgpOptions:convertCfnConnectPeerBgpOptionsPropertyToCloudFormation(properties.bgpOptions),ConnectAttachmentId:cdk.stringToCloudFormation(properties.connectAttachmentId),CoreNetworkAddress:cdk.stringToCloudFormation(properties.coreNetworkAddress),InsideCidrBlocks:cdk.listMapper(cdk.stringToCloudFormation)(properties.insideCidrBlocks),PeerAddress:cdk.stringToCloudFormation(properties.peerAddress),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnConnectPeerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bgpOptions","BgpOptions",properties.BgpOptions!=null?CfnConnectPeerBgpOptionsPropertyFromCloudFormation(properties.BgpOptions):void 0),ret.addPropertyResult("connectAttachmentId","ConnectAttachmentId",properties.ConnectAttachmentId!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectAttachmentId):void 0),ret.addPropertyResult("coreNetworkAddress","CoreNetworkAddress",properties.CoreNetworkAddress!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkAddress):void 0),ret.addPropertyResult("insideCidrBlocks","InsideCidrBlocks",properties.InsideCidrBlocks!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.InsideCidrBlocks):void 0),ret.addPropertyResult("peerAddress","PeerAddress",properties.PeerAddress!=null?cfn_parse.FromCloudFormation.getString(properties.PeerAddress):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCoreNetwork extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCoreNetworkPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCoreNetwork(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCoreNetwork.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnCoreNetworkProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCoreNetwork),error}cdk.requireProperty(props,"globalNetworkId",this),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkId=cdk.Token.asString(this.getAtt("CoreNetworkId",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdges=this.getAtt("Edges"),this.attrOwnerAccount=cdk.Token.asString(this.getAtt("OwnerAccount",cdk.ResolutionTypeHint.STRING)),this.attrSegments=this.getAtt("Segments"),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.globalNetworkId=props.globalNetworkId,this.policyDocument=props.policyDocument,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::CoreNetwork",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,globalNetworkId:this.globalNetworkId,policyDocument:this.policyDocument,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCoreNetwork.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCoreNetworkPropsToCloudFormation(props)}}exports.CfnCoreNetwork=CfnCoreNetwork,_c=JSII_RTTI_SYMBOL_1,CfnCoreNetwork[_c]={fqn:"aws-cdk-lib.aws_networkmanager.CfnCoreNetwork",version:"2.94.0"},CfnCoreNetwork.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::CoreNetwork";function CfnCoreNetworkCoreNetworkSegmentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("edgeLocations",cdk.listValidator(cdk.validateString))(properties.edgeLocations)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("sharedSegments",cdk.listValidator(cdk.validateString))(properties.sharedSegments)),errors.wrap('supplied properties not correct for "CoreNetworkSegmentProperty"')}function convertCfnCoreNetworkCoreNetworkSegmentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCoreNetworkCoreNetworkSegmentPropertyValidator(properties).assertSuccess(),{EdgeLocations:cdk.listMapper(cdk.stringToCloudFormation)(properties.edgeLocations),Name:cdk.stringToCloudFormation(properties.name),SharedSegments:cdk.listMapper(cdk.stringToCloudFormation)(properties.sharedSegments)}):properties}function CfnCoreNetworkCoreNetworkSegmentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("edgeLocations","EdgeLocations",properties.EdgeLocations!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EdgeLocations):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("sharedSegments","SharedSegments",properties.SharedSegments!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SharedSegments):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCoreNetworkCoreNetworkEdgePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("asn",cdk.validateNumber)(properties.asn)),errors.collect(cdk.propertyValidator("edgeLocation",cdk.validateString)(properties.edgeLocation)),errors.collect(cdk.propertyValidator("insideCidrBlocks",cdk.listValidator(cdk.validateString))(properties.insideCidrBlocks)),errors.wrap('supplied properties not correct for "CoreNetworkEdgeProperty"')}function convertCfnCoreNetworkCoreNetworkEdgePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCoreNetworkCoreNetworkEdgePropertyValidator(properties).assertSuccess(),{Asn:cdk.numberToCloudFormation(properties.asn),EdgeLocation:cdk.stringToCloudFormation(properties.edgeLocation),InsideCidrBlocks:cdk.listMapper(cdk.stringToCloudFormation)(properties.insideCidrBlocks)}):properties}function CfnCoreNetworkCoreNetworkEdgePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("asn","Asn",properties.Asn!=null?cfn_parse.FromCloudFormation.getNumber(properties.Asn):void 0),ret.addPropertyResult("edgeLocation","EdgeLocation",properties.EdgeLocation!=null?cfn_parse.FromCloudFormation.getString(properties.EdgeLocation):void 0),ret.addPropertyResult("insideCidrBlocks","InsideCidrBlocks",properties.InsideCidrBlocks!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.InsideCidrBlocks):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCoreNetworkPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("policyDocument",cdk.validateObject)(properties.policyDocument)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnCoreNetworkProps"')}function convertCfnCoreNetworkPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCoreNetworkPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),PolicyDocument:cdk.objectToCloudFormation(properties.policyDocument),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnCoreNetworkPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("policyDocument","PolicyDocument",properties.PolicyDocument!=null?cfn_parse.FromCloudFormation.getAny(properties.PolicyDocument):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCustomerGatewayAssociation extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCustomerGatewayAssociationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCustomerGatewayAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnCustomerGatewayAssociationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCustomerGatewayAssociation),error}cdk.requireProperty(props,"customerGatewayArn",this),cdk.requireProperty(props,"deviceId",this),cdk.requireProperty(props,"globalNetworkId",this),this.customerGatewayArn=props.customerGatewayArn,this.deviceId=props.deviceId,this.globalNetworkId=props.globalNetworkId,this.linkId=props.linkId}get cfnProperties(){return{customerGatewayArn:this.customerGatewayArn,deviceId:this.deviceId,globalNetworkId:this.globalNetworkId,linkId:this.linkId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCustomerGatewayAssociationPropsToCloudFormation(props)}}exports.CfnCustomerGatewayAssociation=CfnCustomerGatewayAssociation,_d=JSII_RTTI_SYMBOL_1,CfnCustomerGatewayAssociation[_d]={fqn:"aws-cdk-lib.aws_networkmanager.CfnCustomerGatewayAssociation",version:"2.94.0"},CfnCustomerGatewayAssociation.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::CustomerGatewayAssociation";function CfnCustomerGatewayAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("customerGatewayArn",cdk.requiredValidator)(properties.customerGatewayArn)),errors.collect(cdk.propertyValidator("customerGatewayArn",cdk.validateString)(properties.customerGatewayArn)),errors.collect(cdk.propertyValidator("deviceId",cdk.requiredValidator)(properties.deviceId)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("linkId",cdk.validateString)(properties.linkId)),errors.wrap('supplied properties not correct for "CfnCustomerGatewayAssociationProps"')}function convertCfnCustomerGatewayAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCustomerGatewayAssociationPropsValidator(properties).assertSuccess(),{CustomerGatewayArn:cdk.stringToCloudFormation(properties.customerGatewayArn),DeviceId:cdk.stringToCloudFormation(properties.deviceId),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),LinkId:cdk.stringToCloudFormation(properties.linkId)}):properties}function CfnCustomerGatewayAssociationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("customerGatewayArn","CustomerGatewayArn",properties.CustomerGatewayArn!=null?cfn_parse.FromCloudFormation.getString(properties.CustomerGatewayArn):void 0),ret.addPropertyResult("deviceId","DeviceId",properties.DeviceId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceId):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("linkId","LinkId",properties.LinkId!=null?cfn_parse.FromCloudFormation.getString(properties.LinkId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDevice extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDevicePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDevice(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDevice.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnDeviceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDevice),error}cdk.requireProperty(props,"globalNetworkId",this),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrDeviceArn=cdk.Token.asString(this.getAtt("DeviceArn",cdk.ResolutionTypeHint.STRING)),this.attrDeviceId=cdk.Token.asString(this.getAtt("DeviceId",cdk.ResolutionTypeHint.STRING)),this.awsLocation=props.awsLocation,this.description=props.description,this.globalNetworkId=props.globalNetworkId,this.location=props.location,this.model=props.model,this.serialNumber=props.serialNumber,this.siteId=props.siteId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Device",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.type=props.type,this.vendor=props.vendor}get cfnProperties(){return{awsLocation:this.awsLocation,description:this.description,globalNetworkId:this.globalNetworkId,location:this.location,model:this.model,serialNumber:this.serialNumber,siteId:this.siteId,tags:this.tags.renderTags(),type:this.type,vendor:this.vendor}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDevice.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDevicePropsToCloudFormation(props)}}exports.CfnDevice=CfnDevice,_e=JSII_RTTI_SYMBOL_1,CfnDevice[_e]={fqn:"aws-cdk-lib.aws_networkmanager.CfnDevice",version:"2.94.0"},CfnDevice.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Device";function CfnDeviceAWSLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("subnetArn",cdk.validateString)(properties.subnetArn)),errors.collect(cdk.propertyValidator("zone",cdk.validateString)(properties.zone)),errors.wrap('supplied properties not correct for "AWSLocationProperty"')}function convertCfnDeviceAWSLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDeviceAWSLocationPropertyValidator(properties).assertSuccess(),{SubnetArn:cdk.stringToCloudFormation(properties.subnetArn),Zone:cdk.stringToCloudFormation(properties.zone)}):properties}function CfnDeviceAWSLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("subnetArn","SubnetArn",properties.SubnetArn!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetArn):void 0),ret.addPropertyResult("zone","Zone",properties.Zone!=null?cfn_parse.FromCloudFormation.getString(properties.Zone):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDeviceLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("latitude",cdk.validateString)(properties.latitude)),errors.collect(cdk.propertyValidator("longitude",cdk.validateString)(properties.longitude)),errors.wrap('supplied properties not correct for "LocationProperty"')}function convertCfnDeviceLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDeviceLocationPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Latitude:cdk.stringToCloudFormation(properties.latitude),Longitude:cdk.stringToCloudFormation(properties.longitude)}):properties}function CfnDeviceLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("latitude","Latitude",properties.Latitude!=null?cfn_parse.FromCloudFormation.getString(properties.Latitude):void 0),ret.addPropertyResult("longitude","Longitude",properties.Longitude!=null?cfn_parse.FromCloudFormation.getString(properties.Longitude):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDevicePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("awsLocation",CfnDeviceAWSLocationPropertyValidator)(properties.awsLocation)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("location",CfnDeviceLocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("model",cdk.validateString)(properties.model)),errors.collect(cdk.propertyValidator("serialNumber",cdk.validateString)(properties.serialNumber)),errors.collect(cdk.propertyValidator("siteId",cdk.validateString)(properties.siteId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("vendor",cdk.validateString)(properties.vendor)),errors.wrap('supplied properties not correct for "CfnDeviceProps"')}function convertCfnDevicePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDevicePropsValidator(properties).assertSuccess(),{AWSLocation:convertCfnDeviceAWSLocationPropertyToCloudFormation(properties.awsLocation),Description:cdk.stringToCloudFormation(properties.description),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),Location:convertCfnDeviceLocationPropertyToCloudFormation(properties.location),Model:cdk.stringToCloudFormation(properties.model),SerialNumber:cdk.stringToCloudFormation(properties.serialNumber),SiteId:cdk.stringToCloudFormation(properties.siteId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type),Vendor:cdk.stringToCloudFormation(properties.vendor)}):properties}function CfnDevicePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("awsLocation","AWSLocation",properties.AWSLocation!=null?CfnDeviceAWSLocationPropertyFromCloudFormation(properties.AWSLocation):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnDeviceLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("model","Model",properties.Model!=null?cfn_parse.FromCloudFormation.getString(properties.Model):void 0),ret.addPropertyResult("serialNumber","SerialNumber",properties.SerialNumber!=null?cfn_parse.FromCloudFormation.getString(properties.SerialNumber):void 0),ret.addPropertyResult("siteId","SiteId",properties.SiteId!=null?cfn_parse.FromCloudFormation.getString(properties.SiteId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("vendor","Vendor",properties.Vendor!=null?cfn_parse.FromCloudFormation.getString(properties.Vendor):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnGlobalNetwork extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGlobalNetworkPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnGlobalNetwork(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnGlobalNetworkProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnGlobalNetwork),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::GlobalNetwork",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnGlobalNetworkPropsToCloudFormation(props)}}exports.CfnGlobalNetwork=CfnGlobalNetwork,_f=JSII_RTTI_SYMBOL_1,CfnGlobalNetwork[_f]={fqn:"aws-cdk-lib.aws_networkmanager.CfnGlobalNetwork",version:"2.94.0"},CfnGlobalNetwork.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::GlobalNetwork";function CfnGlobalNetworkPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnGlobalNetworkProps"')}function convertCfnGlobalNetworkPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalNetworkPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnGlobalNetworkPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLink extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLinkPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLink(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLink.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnLinkProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLink),error}cdk.requireProperty(props,"bandwidth",this),cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"siteId",this),this.attrLinkArn=cdk.Token.asString(this.getAtt("LinkArn",cdk.ResolutionTypeHint.STRING)),this.attrLinkId=cdk.Token.asString(this.getAtt("LinkId",cdk.ResolutionTypeHint.STRING)),this.bandwidth=props.bandwidth,this.description=props.description,this.globalNetworkId=props.globalNetworkId,this.provider=props.provider,this.siteId=props.siteId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Link",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.type=props.type}get cfnProperties(){return{bandwidth:this.bandwidth,description:this.description,globalNetworkId:this.globalNetworkId,provider:this.provider,siteId:this.siteId,tags:this.tags.renderTags(),type:this.type}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLink.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLinkPropsToCloudFormation(props)}}exports.CfnLink=CfnLink,_g=JSII_RTTI_SYMBOL_1,CfnLink[_g]={fqn:"aws-cdk-lib.aws_networkmanager.CfnLink",version:"2.94.0"},CfnLink.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Link";function CfnLinkBandwidthPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("downloadSpeed",cdk.validateNumber)(properties.downloadSpeed)),errors.collect(cdk.propertyValidator("uploadSpeed",cdk.validateNumber)(properties.uploadSpeed)),errors.wrap('supplied properties not correct for "BandwidthProperty"')}function convertCfnLinkBandwidthPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLinkBandwidthPropertyValidator(properties).assertSuccess(),{DownloadSpeed:cdk.numberToCloudFormation(properties.downloadSpeed),UploadSpeed:cdk.numberToCloudFormation(properties.uploadSpeed)}):properties}function CfnLinkBandwidthPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("downloadSpeed","DownloadSpeed",properties.DownloadSpeed!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownloadSpeed):void 0),ret.addPropertyResult("uploadSpeed","UploadSpeed",properties.UploadSpeed!=null?cfn_parse.FromCloudFormation.getNumber(properties.UploadSpeed):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnLinkPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bandwidth",cdk.requiredValidator)(properties.bandwidth)),errors.collect(cdk.propertyValidator("bandwidth",CfnLinkBandwidthPropertyValidator)(properties.bandwidth)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("provider",cdk.validateString)(properties.provider)),errors.collect(cdk.propertyValidator("siteId",cdk.requiredValidator)(properties.siteId)),errors.collect(cdk.propertyValidator("siteId",cdk.validateString)(properties.siteId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnLinkProps"')}function convertCfnLinkPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLinkPropsValidator(properties).assertSuccess(),{Bandwidth:convertCfnLinkBandwidthPropertyToCloudFormation(properties.bandwidth),Description:cdk.stringToCloudFormation(properties.description),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),Provider:cdk.stringToCloudFormation(properties.provider),SiteId:cdk.stringToCloudFormation(properties.siteId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnLinkPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bandwidth","Bandwidth",properties.Bandwidth!=null?CfnLinkBandwidthPropertyFromCloudFormation(properties.Bandwidth):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("provider","Provider",properties.Provider!=null?cfn_parse.FromCloudFormation.getString(properties.Provider):void 0),ret.addPropertyResult("siteId","SiteId",properties.SiteId!=null?cfn_parse.FromCloudFormation.getString(properties.SiteId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLinkAssociation extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLinkAssociationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLinkAssociation(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnLinkAssociationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLinkAssociation),error}cdk.requireProperty(props,"deviceId",this),cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"linkId",this),this.deviceId=props.deviceId,this.globalNetworkId=props.globalNetworkId,this.linkId=props.linkId}get cfnProperties(){return{deviceId:this.deviceId,globalNetworkId:this.globalNetworkId,linkId:this.linkId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLinkAssociationPropsToCloudFormation(props)}}exports.CfnLinkAssociation=CfnLinkAssociation,_h=JSII_RTTI_SYMBOL_1,CfnLinkAssociation[_h]={fqn:"aws-cdk-lib.aws_networkmanager.CfnLinkAssociation",version:"2.94.0"},CfnLinkAssociation.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::LinkAssociation";function CfnLinkAssociationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deviceId",cdk.requiredValidator)(properties.deviceId)),errors.collect(cdk.propertyValidator("deviceId",cdk.validateString)(properties.deviceId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("linkId",cdk.requiredValidator)(properties.linkId)),errors.collect(cdk.propertyValidator("linkId",cdk.validateString)(properties.linkId)),errors.wrap('supplied properties not correct for "CfnLinkAssociationProps"')}function convertCfnLinkAssociationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLinkAssociationPropsValidator(properties).assertSuccess(),{DeviceId:cdk.stringToCloudFormation(properties.deviceId),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),LinkId:cdk.stringToCloudFormation(properties.linkId)}):properties}function CfnLinkAssociationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deviceId","DeviceId",properties.DeviceId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceId):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("linkId","LinkId",properties.LinkId!=null?cfn_parse.FromCloudFormation.getString(properties.LinkId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSite extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSitePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSite(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSite.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnSiteProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSite),error}cdk.requireProperty(props,"globalNetworkId",this),this.attrSiteArn=cdk.Token.asString(this.getAtt("SiteArn",cdk.ResolutionTypeHint.STRING)),this.attrSiteId=cdk.Token.asString(this.getAtt("SiteId",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.globalNetworkId=props.globalNetworkId,this.location=props.location,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::Site",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,globalNetworkId:this.globalNetworkId,location:this.location,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSite.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSitePropsToCloudFormation(props)}}exports.CfnSite=CfnSite,_j=JSII_RTTI_SYMBOL_1,CfnSite[_j]={fqn:"aws-cdk-lib.aws_networkmanager.CfnSite",version:"2.94.0"},CfnSite.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::Site";function CfnSiteLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("latitude",cdk.validateString)(properties.latitude)),errors.collect(cdk.propertyValidator("longitude",cdk.validateString)(properties.longitude)),errors.wrap('supplied properties not correct for "LocationProperty"')}function convertCfnSiteLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSiteLocationPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Latitude:cdk.stringToCloudFormation(properties.latitude),Longitude:cdk.stringToCloudFormation(properties.longitude)}):properties}function CfnSiteLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("latitude","Latitude",properties.Latitude!=null?cfn_parse.FromCloudFormation.getString(properties.Latitude):void 0),ret.addPropertyResult("longitude","Longitude",properties.Longitude!=null?cfn_parse.FromCloudFormation.getString(properties.Longitude):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSitePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("location",CfnSiteLocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnSiteProps"')}function convertCfnSitePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSitePropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),Location:convertCfnSiteLocationPropertyToCloudFormation(properties.location),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnSitePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnSiteLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSiteToSiteVpnAttachment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSiteToSiteVpnAttachmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSiteToSiteVpnAttachment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSiteToSiteVpnAttachment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnSiteToSiteVpnAttachmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSiteToSiteVpnAttachment),error}cdk.requireProperty(props,"coreNetworkId",this),cdk.requireProperty(props,"vpnConnectionArn",this),this.attrAttachmentId=cdk.Token.asString(this.getAtt("AttachmentId",cdk.ResolutionTypeHint.STRING)),this.attrAttachmentPolicyRuleNumber=cdk.Token.asNumber(this.getAtt("AttachmentPolicyRuleNumber",cdk.ResolutionTypeHint.NUMBER)),this.attrAttachmentType=cdk.Token.asString(this.getAtt("AttachmentType",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdgeLocation=cdk.Token.asString(this.getAtt("EdgeLocation",cdk.ResolutionTypeHint.STRING)),this.attrOwnerAccountId=cdk.Token.asString(this.getAtt("OwnerAccountId",cdk.ResolutionTypeHint.STRING)),this.attrResourceArn=cdk.Token.asString(this.getAtt("ResourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSegmentName=cdk.Token.asString(this.getAtt("SegmentName",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrUpdatedAt=cdk.Token.asString(this.getAtt("UpdatedAt",cdk.ResolutionTypeHint.STRING)),this.coreNetworkId=props.coreNetworkId,this.proposedSegmentChange=props.proposedSegmentChange,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::SiteToSiteVpnAttachment",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpnConnectionArn=props.vpnConnectionArn}get cfnProperties(){return{coreNetworkId:this.coreNetworkId,proposedSegmentChange:this.proposedSegmentChange,tags:this.tags.renderTags(),vpnConnectionArn:this.vpnConnectionArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSiteToSiteVpnAttachment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSiteToSiteVpnAttachmentPropsToCloudFormation(props)}}exports.CfnSiteToSiteVpnAttachment=CfnSiteToSiteVpnAttachment,_k=JSII_RTTI_SYMBOL_1,CfnSiteToSiteVpnAttachment[_k]={fqn:"aws-cdk-lib.aws_networkmanager.CfnSiteToSiteVpnAttachment",version:"2.94.0"},CfnSiteToSiteVpnAttachment.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::SiteToSiteVpnAttachment";function CfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachmentPolicyRuleNumber",cdk.validateNumber)(properties.attachmentPolicyRuleNumber)),errors.collect(cdk.propertyValidator("segmentName",cdk.validateString)(properties.segmentName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "ProposedSegmentChangeProperty"')}function convertCfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyValidator(properties).assertSuccess(),{AttachmentPolicyRuleNumber:cdk.numberToCloudFormation(properties.attachmentPolicyRuleNumber),SegmentName:cdk.stringToCloudFormation(properties.segmentName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachmentPolicyRuleNumber","AttachmentPolicyRuleNumber",properties.AttachmentPolicyRuleNumber!=null?cfn_parse.FromCloudFormation.getNumber(properties.AttachmentPolicyRuleNumber):void 0),ret.addPropertyResult("segmentName","SegmentName",properties.SegmentName!=null?cfn_parse.FromCloudFormation.getString(properties.SegmentName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnSiteToSiteVpnAttachmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.requiredValidator)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.validateString)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("proposedSegmentChange",CfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyValidator)(properties.proposedSegmentChange)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpnConnectionArn",cdk.requiredValidator)(properties.vpnConnectionArn)),errors.collect(cdk.propertyValidator("vpnConnectionArn",cdk.validateString)(properties.vpnConnectionArn)),errors.wrap('supplied properties not correct for "CfnSiteToSiteVpnAttachmentProps"')}function convertCfnSiteToSiteVpnAttachmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSiteToSiteVpnAttachmentPropsValidator(properties).assertSuccess(),{CoreNetworkId:cdk.stringToCloudFormation(properties.coreNetworkId),ProposedSegmentChange:convertCfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyToCloudFormation(properties.proposedSegmentChange),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpnConnectionArn:cdk.stringToCloudFormation(properties.vpnConnectionArn)}):properties}function CfnSiteToSiteVpnAttachmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coreNetworkId","CoreNetworkId",properties.CoreNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkId):void 0),ret.addPropertyResult("proposedSegmentChange","ProposedSegmentChange",properties.ProposedSegmentChange!=null?CfnSiteToSiteVpnAttachmentProposedSegmentChangePropertyFromCloudFormation(properties.ProposedSegmentChange):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpnConnectionArn","VpnConnectionArn",properties.VpnConnectionArn!=null?cfn_parse.FromCloudFormation.getString(properties.VpnConnectionArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTransitGatewayPeering extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTransitGatewayPeeringPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTransitGatewayPeering(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTransitGatewayPeering.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnTransitGatewayPeeringProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTransitGatewayPeering),error}cdk.requireProperty(props,"coreNetworkId",this),cdk.requireProperty(props,"transitGatewayArn",this),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdgeLocation=cdk.Token.asString(this.getAtt("EdgeLocation",cdk.ResolutionTypeHint.STRING)),this.attrOwnerAccountId=cdk.Token.asString(this.getAtt("OwnerAccountId",cdk.ResolutionTypeHint.STRING)),this.attrPeeringId=cdk.Token.asString(this.getAtt("PeeringId",cdk.ResolutionTypeHint.STRING)),this.attrPeeringType=cdk.Token.asString(this.getAtt("PeeringType",cdk.ResolutionTypeHint.STRING)),this.attrResourceArn=cdk.Token.asString(this.getAtt("ResourceArn",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrTransitGatewayPeeringAttachmentId=cdk.Token.asString(this.getAtt("TransitGatewayPeeringAttachmentId",cdk.ResolutionTypeHint.STRING)),this.coreNetworkId=props.coreNetworkId,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::TransitGatewayPeering",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.transitGatewayArn=props.transitGatewayArn}get cfnProperties(){return{coreNetworkId:this.coreNetworkId,tags:this.tags.renderTags(),transitGatewayArn:this.transitGatewayArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTransitGatewayPeering.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTransitGatewayPeeringPropsToCloudFormation(props)}}exports.CfnTransitGatewayPeering=CfnTransitGatewayPeering,_l=JSII_RTTI_SYMBOL_1,CfnTransitGatewayPeering[_l]={fqn:"aws-cdk-lib.aws_networkmanager.CfnTransitGatewayPeering",version:"2.94.0"},CfnTransitGatewayPeering.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::TransitGatewayPeering";function CfnTransitGatewayPeeringPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.requiredValidator)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.validateString)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.requiredValidator)(properties.transitGatewayArn)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.validateString)(properties.transitGatewayArn)),errors.wrap('supplied properties not correct for "CfnTransitGatewayPeeringProps"')}function convertCfnTransitGatewayPeeringPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTransitGatewayPeeringPropsValidator(properties).assertSuccess(),{CoreNetworkId:cdk.stringToCloudFormation(properties.coreNetworkId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TransitGatewayArn:cdk.stringToCloudFormation(properties.transitGatewayArn)}):properties}function CfnTransitGatewayPeeringPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coreNetworkId","CoreNetworkId",properties.CoreNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkId):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("transitGatewayArn","TransitGatewayArn",properties.TransitGatewayArn!=null?cfn_parse.FromCloudFormation.getString(properties.TransitGatewayArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTransitGatewayRegistration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTransitGatewayRegistrationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTransitGatewayRegistration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRegistrationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTransitGatewayRegistration),error}cdk.requireProperty(props,"globalNetworkId",this),cdk.requireProperty(props,"transitGatewayArn",this),this.globalNetworkId=props.globalNetworkId,this.transitGatewayArn=props.transitGatewayArn}get cfnProperties(){return{globalNetworkId:this.globalNetworkId,transitGatewayArn:this.transitGatewayArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTransitGatewayRegistrationPropsToCloudFormation(props)}}exports.CfnTransitGatewayRegistration=CfnTransitGatewayRegistration,_m=JSII_RTTI_SYMBOL_1,CfnTransitGatewayRegistration[_m]={fqn:"aws-cdk-lib.aws_networkmanager.CfnTransitGatewayRegistration",version:"2.94.0"},CfnTransitGatewayRegistration.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::TransitGatewayRegistration";function CfnTransitGatewayRegistrationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.requiredValidator)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("globalNetworkId",cdk.validateString)(properties.globalNetworkId)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.requiredValidator)(properties.transitGatewayArn)),errors.collect(cdk.propertyValidator("transitGatewayArn",cdk.validateString)(properties.transitGatewayArn)),errors.wrap('supplied properties not correct for "CfnTransitGatewayRegistrationProps"')}function convertCfnTransitGatewayRegistrationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTransitGatewayRegistrationPropsValidator(properties).assertSuccess(),{GlobalNetworkId:cdk.stringToCloudFormation(properties.globalNetworkId),TransitGatewayArn:cdk.stringToCloudFormation(properties.transitGatewayArn)}):properties}function CfnTransitGatewayRegistrationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("globalNetworkId","GlobalNetworkId",properties.GlobalNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalNetworkId):void 0),ret.addPropertyResult("transitGatewayArn","TransitGatewayArn",properties.TransitGatewayArn!=null?cfn_parse.FromCloudFormation.getString(properties.TransitGatewayArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTransitGatewayRouteTableAttachment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTransitGatewayRouteTableAttachmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTransitGatewayRouteTableAttachment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTransitGatewayRouteTableAttachment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnTransitGatewayRouteTableAttachmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTransitGatewayRouteTableAttachment),error}cdk.requireProperty(props,"peeringId",this),cdk.requireProperty(props,"transitGatewayRouteTableArn",this),this.attrAttachmentId=cdk.Token.asString(this.getAtt("AttachmentId",cdk.ResolutionTypeHint.STRING)),this.attrAttachmentPolicyRuleNumber=cdk.Token.asNumber(this.getAtt("AttachmentPolicyRuleNumber",cdk.ResolutionTypeHint.NUMBER)),this.attrAttachmentType=cdk.Token.asString(this.getAtt("AttachmentType",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkId=cdk.Token.asString(this.getAtt("CoreNetworkId",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdgeLocation=cdk.Token.asString(this.getAtt("EdgeLocation",cdk.ResolutionTypeHint.STRING)),this.attrOwnerAccountId=cdk.Token.asString(this.getAtt("OwnerAccountId",cdk.ResolutionTypeHint.STRING)),this.attrResourceArn=cdk.Token.asString(this.getAtt("ResourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSegmentName=cdk.Token.asString(this.getAtt("SegmentName",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrUpdatedAt=cdk.Token.asString(this.getAtt("UpdatedAt",cdk.ResolutionTypeHint.STRING)),this.peeringId=props.peeringId,this.proposedSegmentChange=props.proposedSegmentChange,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::TransitGatewayRouteTableAttachment",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.transitGatewayRouteTableArn=props.transitGatewayRouteTableArn}get cfnProperties(){return{peeringId:this.peeringId,proposedSegmentChange:this.proposedSegmentChange,tags:this.tags.renderTags(),transitGatewayRouteTableArn:this.transitGatewayRouteTableArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTransitGatewayRouteTableAttachment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTransitGatewayRouteTableAttachmentPropsToCloudFormation(props)}}exports.CfnTransitGatewayRouteTableAttachment=CfnTransitGatewayRouteTableAttachment,_o=JSII_RTTI_SYMBOL_1,CfnTransitGatewayRouteTableAttachment[_o]={fqn:"aws-cdk-lib.aws_networkmanager.CfnTransitGatewayRouteTableAttachment",version:"2.94.0"},CfnTransitGatewayRouteTableAttachment.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::TransitGatewayRouteTableAttachment";function CfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachmentPolicyRuleNumber",cdk.validateNumber)(properties.attachmentPolicyRuleNumber)),errors.collect(cdk.propertyValidator("segmentName",cdk.validateString)(properties.segmentName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "ProposedSegmentChangeProperty"')}function convertCfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyValidator(properties).assertSuccess(),{AttachmentPolicyRuleNumber:cdk.numberToCloudFormation(properties.attachmentPolicyRuleNumber),SegmentName:cdk.stringToCloudFormation(properties.segmentName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachmentPolicyRuleNumber","AttachmentPolicyRuleNumber",properties.AttachmentPolicyRuleNumber!=null?cfn_parse.FromCloudFormation.getNumber(properties.AttachmentPolicyRuleNumber):void 0),ret.addPropertyResult("segmentName","SegmentName",properties.SegmentName!=null?cfn_parse.FromCloudFormation.getString(properties.SegmentName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTransitGatewayRouteTableAttachmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("peeringId",cdk.requiredValidator)(properties.peeringId)),errors.collect(cdk.propertyValidator("peeringId",cdk.validateString)(properties.peeringId)),errors.collect(cdk.propertyValidator("proposedSegmentChange",CfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyValidator)(properties.proposedSegmentChange)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("transitGatewayRouteTableArn",cdk.requiredValidator)(properties.transitGatewayRouteTableArn)),errors.collect(cdk.propertyValidator("transitGatewayRouteTableArn",cdk.validateString)(properties.transitGatewayRouteTableArn)),errors.wrap('supplied properties not correct for "CfnTransitGatewayRouteTableAttachmentProps"')}function convertCfnTransitGatewayRouteTableAttachmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTransitGatewayRouteTableAttachmentPropsValidator(properties).assertSuccess(),{PeeringId:cdk.stringToCloudFormation(properties.peeringId),ProposedSegmentChange:convertCfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyToCloudFormation(properties.proposedSegmentChange),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TransitGatewayRouteTableArn:cdk.stringToCloudFormation(properties.transitGatewayRouteTableArn)}):properties}function CfnTransitGatewayRouteTableAttachmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("peeringId","PeeringId",properties.PeeringId!=null?cfn_parse.FromCloudFormation.getString(properties.PeeringId):void 0),ret.addPropertyResult("proposedSegmentChange","ProposedSegmentChange",properties.ProposedSegmentChange!=null?CfnTransitGatewayRouteTableAttachmentProposedSegmentChangePropertyFromCloudFormation(properties.ProposedSegmentChange):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("transitGatewayRouteTableArn","TransitGatewayRouteTableArn",properties.TransitGatewayRouteTableArn!=null?cfn_parse.FromCloudFormation.getString(properties.TransitGatewayRouteTableArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVpcAttachment extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVpcAttachmentPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnVpcAttachment(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnVpcAttachment.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_networkmanager_CfnVpcAttachmentProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnVpcAttachment),error}cdk.requireProperty(props,"coreNetworkId",this),cdk.requireProperty(props,"subnetArns",this),cdk.requireProperty(props,"vpcArn",this),this.attrAttachmentId=cdk.Token.asString(this.getAtt("AttachmentId",cdk.ResolutionTypeHint.STRING)),this.attrAttachmentPolicyRuleNumber=cdk.Token.asNumber(this.getAtt("AttachmentPolicyRuleNumber",cdk.ResolutionTypeHint.NUMBER)),this.attrAttachmentType=cdk.Token.asString(this.getAtt("AttachmentType",cdk.ResolutionTypeHint.STRING)),this.attrCoreNetworkArn=cdk.Token.asString(this.getAtt("CoreNetworkArn",cdk.ResolutionTypeHint.STRING)),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrEdgeLocation=cdk.Token.asString(this.getAtt("EdgeLocation",cdk.ResolutionTypeHint.STRING)),this.attrOwnerAccountId=cdk.Token.asString(this.getAtt("OwnerAccountId",cdk.ResolutionTypeHint.STRING)),this.attrResourceArn=cdk.Token.asString(this.getAtt("ResourceArn",cdk.ResolutionTypeHint.STRING)),this.attrSegmentName=cdk.Token.asString(this.getAtt("SegmentName",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrUpdatedAt=cdk.Token.asString(this.getAtt("UpdatedAt",cdk.ResolutionTypeHint.STRING)),this.coreNetworkId=props.coreNetworkId,this.options=props.options,this.proposedSegmentChange=props.proposedSegmentChange,this.subnetArns=props.subnetArns,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::NetworkManager::VpcAttachment",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcArn=props.vpcArn}get cfnProperties(){return{coreNetworkId:this.coreNetworkId,options:this.options,proposedSegmentChange:this.proposedSegmentChange,subnetArns:this.subnetArns,tags:this.tags.renderTags(),vpcArn:this.vpcArn}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnVpcAttachment.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnVpcAttachmentPropsToCloudFormation(props)}}exports.CfnVpcAttachment=CfnVpcAttachment,_p=JSII_RTTI_SYMBOL_1,CfnVpcAttachment[_p]={fqn:"aws-cdk-lib.aws_networkmanager.CfnVpcAttachment",version:"2.94.0"},CfnVpcAttachment.CFN_RESOURCE_TYPE_NAME="AWS::NetworkManager::VpcAttachment";function CfnVpcAttachmentProposedSegmentChangePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachmentPolicyRuleNumber",cdk.validateNumber)(properties.attachmentPolicyRuleNumber)),errors.collect(cdk.propertyValidator("segmentName",cdk.validateString)(properties.segmentName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "ProposedSegmentChangeProperty"')}function convertCfnVpcAttachmentProposedSegmentChangePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcAttachmentProposedSegmentChangePropertyValidator(properties).assertSuccess(),{AttachmentPolicyRuleNumber:cdk.numberToCloudFormation(properties.attachmentPolicyRuleNumber),SegmentName:cdk.stringToCloudFormation(properties.segmentName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnVpcAttachmentProposedSegmentChangePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachmentPolicyRuleNumber","AttachmentPolicyRuleNumber",properties.AttachmentPolicyRuleNumber!=null?cfn_parse.FromCloudFormation.getNumber(properties.AttachmentPolicyRuleNumber):void 0),ret.addPropertyResult("segmentName","SegmentName",properties.SegmentName!=null?cfn_parse.FromCloudFormation.getString(properties.SegmentName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnVpcAttachmentVpcOptionsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("applianceModeSupport",cdk.validateBoolean)(properties.applianceModeSupport)),errors.collect(cdk.propertyValidator("ipv6Support",cdk.validateBoolean)(properties.ipv6Support)),errors.wrap('supplied properties not correct for "VpcOptionsProperty"')}function convertCfnVpcAttachmentVpcOptionsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcAttachmentVpcOptionsPropertyValidator(properties).assertSuccess(),{ApplianceModeSupport:cdk.booleanToCloudFormation(properties.applianceModeSupport),Ipv6Support:cdk.booleanToCloudFormation(properties.ipv6Support)}):properties}function CfnVpcAttachmentVpcOptionsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("applianceModeSupport","ApplianceModeSupport",properties.ApplianceModeSupport!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ApplianceModeSupport):void 0),ret.addPropertyResult("ipv6Support","Ipv6Support",properties.Ipv6Support!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Ipv6Support):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnVpcAttachmentPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.requiredValidator)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("coreNetworkId",cdk.validateString)(properties.coreNetworkId)),errors.collect(cdk.propertyValidator("options",CfnVpcAttachmentVpcOptionsPropertyValidator)(properties.options)),errors.collect(cdk.propertyValidator("proposedSegmentChange",CfnVpcAttachmentProposedSegmentChangePropertyValidator)(properties.proposedSegmentChange)),errors.collect(cdk.propertyValidator("subnetArns",cdk.requiredValidator)(properties.subnetArns)),errors.collect(cdk.propertyValidator("subnetArns",cdk.listValidator(cdk.validateString))(properties.subnetArns)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcArn",cdk.requiredValidator)(properties.vpcArn)),errors.collect(cdk.propertyValidator("vpcArn",cdk.validateString)(properties.vpcArn)),errors.wrap('supplied properties not correct for "CfnVpcAttachmentProps"')}function convertCfnVpcAttachmentPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcAttachmentPropsValidator(properties).assertSuccess(),{CoreNetworkId:cdk.stringToCloudFormation(properties.coreNetworkId),Options:convertCfnVpcAttachmentVpcOptionsPropertyToCloudFormation(properties.options),ProposedSegmentChange:convertCfnVpcAttachmentProposedSegmentChangePropertyToCloudFormation(properties.proposedSegmentChange),SubnetArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetArns),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcArn:cdk.stringToCloudFormation(properties.vpcArn)}):properties}function CfnVpcAttachmentPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("coreNetworkId","CoreNetworkId",properties.CoreNetworkId!=null?cfn_parse.FromCloudFormation.getString(properties.CoreNetworkId):void 0),ret.addPropertyResult("options","Options",properties.Options!=null?CfnVpcAttachmentVpcOptionsPropertyFromCloudFormation(properties.Options):void 0),ret.addPropertyResult("proposedSegmentChange","ProposedSegmentChange",properties.ProposedSegmentChange!=null?CfnVpcAttachmentProposedSegmentChangePropertyFromCloudFormation(properties.ProposedSegmentChange):void 0),ret.addPropertyResult("subnetArns","SubnetArns",properties.SubnetArns!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetArns):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcArn","VpcArn",properties.VpcArn!=null?cfn_parse.FromCloudFormation.getString(properties.VpcArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
