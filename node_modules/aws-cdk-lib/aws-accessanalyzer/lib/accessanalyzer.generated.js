"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnAnalyzer=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnAnalyzer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAnalyzerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnAnalyzer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnAnalyzer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_accessanalyzer_CfnAnalyzerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnAnalyzer),error}cdk.requireProperty(props,"type",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.analyzerName=props.analyzerName,this.archiveRules=props.archiveRules,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AccessAnalyzer::Analyzer",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.type=props.type}get cfnProperties(){return{analyzerName:this.analyzerName,archiveRules:this.archiveRules,tags:this.tags.renderTags(),type:this.type}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnAnalyzer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnAnalyzerPropsToCloudFormation(props)}}exports.CfnAnalyzer=CfnAnalyzer,_a=JSII_RTTI_SYMBOL_1,CfnAnalyzer[_a]={fqn:"aws-cdk-lib.aws_accessanalyzer.CfnAnalyzer",version:"2.94.0"},CfnAnalyzer.CFN_RESOURCE_TYPE_NAME="AWS::AccessAnalyzer::Analyzer";function CfnAnalyzerFilterPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("contains",cdk.listValidator(cdk.validateString))(properties.contains)),errors.collect(cdk.propertyValidator("eq",cdk.listValidator(cdk.validateString))(properties.eq)),errors.collect(cdk.propertyValidator("exists",cdk.validateBoolean)(properties.exists)),errors.collect(cdk.propertyValidator("neq",cdk.listValidator(cdk.validateString))(properties.neq)),errors.collect(cdk.propertyValidator("property",cdk.requiredValidator)(properties.property)),errors.collect(cdk.propertyValidator("property",cdk.validateString)(properties.property)),errors.wrap('supplied properties not correct for "FilterProperty"')}function convertCfnAnalyzerFilterPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAnalyzerFilterPropertyValidator(properties).assertSuccess(),{Contains:cdk.listMapper(cdk.stringToCloudFormation)(properties.contains),Eq:cdk.listMapper(cdk.stringToCloudFormation)(properties.eq),Exists:cdk.booleanToCloudFormation(properties.exists),Neq:cdk.listMapper(cdk.stringToCloudFormation)(properties.neq),Property:cdk.stringToCloudFormation(properties.property)}):properties}function CfnAnalyzerFilterPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("contains","Contains",properties.Contains!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Contains):void 0),ret.addPropertyResult("eq","Eq",properties.Eq!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Eq):void 0),ret.addPropertyResult("exists","Exists",properties.Exists!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Exists):void 0),ret.addPropertyResult("neq","Neq",properties.Neq!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Neq):void 0),ret.addPropertyResult("property","Property",properties.Property!=null?cfn_parse.FromCloudFormation.getString(properties.Property):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAnalyzerArchiveRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("filter",cdk.requiredValidator)(properties.filter)),errors.collect(cdk.propertyValidator("filter",cdk.listValidator(CfnAnalyzerFilterPropertyValidator))(properties.filter)),errors.collect(cdk.propertyValidator("ruleName",cdk.requiredValidator)(properties.ruleName)),errors.collect(cdk.propertyValidator("ruleName",cdk.validateString)(properties.ruleName)),errors.wrap('supplied properties not correct for "ArchiveRuleProperty"')}function convertCfnAnalyzerArchiveRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAnalyzerArchiveRulePropertyValidator(properties).assertSuccess(),{Filter:cdk.listMapper(convertCfnAnalyzerFilterPropertyToCloudFormation)(properties.filter),RuleName:cdk.stringToCloudFormation(properties.ruleName)}):properties}function CfnAnalyzerArchiveRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("filter","Filter",properties.Filter!=null?cfn_parse.FromCloudFormation.getArray(CfnAnalyzerFilterPropertyFromCloudFormation)(properties.Filter):void 0),ret.addPropertyResult("ruleName","RuleName",properties.RuleName!=null?cfn_parse.FromCloudFormation.getString(properties.RuleName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnAnalyzerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("analyzerName",cdk.validateString)(properties.analyzerName)),errors.collect(cdk.propertyValidator("archiveRules",cdk.listValidator(CfnAnalyzerArchiveRulePropertyValidator))(properties.archiveRules)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnAnalyzerProps"')}function convertCfnAnalyzerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAnalyzerPropsValidator(properties).assertSuccess(),{AnalyzerName:cdk.stringToCloudFormation(properties.analyzerName),ArchiveRules:cdk.listMapper(convertCfnAnalyzerArchiveRulePropertyToCloudFormation)(properties.archiveRules),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnAnalyzerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("analyzerName","AnalyzerName",properties.AnalyzerName!=null?cfn_parse.FromCloudFormation.getString(properties.AnalyzerName):void 0),ret.addPropertyResult("archiveRules","ArchiveRules",properties.ArchiveRules!=null?cfn_parse.FromCloudFormation.getArray(CfnAnalyzerArchiveRulePropertyFromCloudFormation)(properties.ArchiveRules):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
