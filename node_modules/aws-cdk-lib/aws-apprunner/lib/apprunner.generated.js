"use strict";var _a,_b,_c,_d,_e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnVpcIngressConnection=exports.CfnVpcConnector=exports.CfnService=exports.CfnObservabilityConfiguration=exports.CfnAutoScalingConfiguration=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnAutoScalingConfiguration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAutoScalingConfigurationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnAutoScalingConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnAutoScalingConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnAutoScalingConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnAutoScalingConfiguration),error}this.attrAutoScalingConfigurationArn=cdk.Token.asString(this.getAtt("AutoScalingConfigurationArn",cdk.ResolutionTypeHint.STRING)),this.attrAutoScalingConfigurationRevision=cdk.Token.asNumber(this.getAtt("AutoScalingConfigurationRevision",cdk.ResolutionTypeHint.NUMBER)),this.attrLatest=this.getAtt("Latest"),this.autoScalingConfigurationName=props.autoScalingConfigurationName,this.maxConcurrency=props.maxConcurrency,this.maxSize=props.maxSize,this.minSize=props.minSize,this.tags=props.tags}get cfnProperties(){return{autoScalingConfigurationName:this.autoScalingConfigurationName,maxConcurrency:this.maxConcurrency,maxSize:this.maxSize,minSize:this.minSize,tags:this.tags}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnAutoScalingConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnAutoScalingConfigurationPropsToCloudFormation(props)}}exports.CfnAutoScalingConfiguration=CfnAutoScalingConfiguration,_a=JSII_RTTI_SYMBOL_1,CfnAutoScalingConfiguration[_a]={fqn:"aws-cdk-lib.aws_apprunner.CfnAutoScalingConfiguration",version:"2.94.0"},CfnAutoScalingConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::AutoScalingConfiguration";function CfnAutoScalingConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autoScalingConfigurationName",cdk.validateString)(properties.autoScalingConfigurationName)),errors.collect(cdk.propertyValidator("maxConcurrency",cdk.validateNumber)(properties.maxConcurrency)),errors.collect(cdk.propertyValidator("maxSize",cdk.validateNumber)(properties.maxSize)),errors.collect(cdk.propertyValidator("minSize",cdk.validateNumber)(properties.minSize)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnAutoScalingConfigurationProps"')}function convertCfnAutoScalingConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAutoScalingConfigurationPropsValidator(properties).assertSuccess(),{AutoScalingConfigurationName:cdk.stringToCloudFormation(properties.autoScalingConfigurationName),MaxConcurrency:cdk.numberToCloudFormation(properties.maxConcurrency),MaxSize:cdk.numberToCloudFormation(properties.maxSize),MinSize:cdk.numberToCloudFormation(properties.minSize),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnAutoScalingConfigurationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoScalingConfigurationName","AutoScalingConfigurationName",properties.AutoScalingConfigurationName!=null?cfn_parse.FromCloudFormation.getString(properties.AutoScalingConfigurationName):void 0),ret.addPropertyResult("maxConcurrency","MaxConcurrency",properties.MaxConcurrency!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxConcurrency):void 0),ret.addPropertyResult("maxSize","MaxSize",properties.MaxSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxSize):void 0),ret.addPropertyResult("minSize","MinSize",properties.MinSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinSize):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnObservabilityConfiguration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnObservabilityConfigurationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnObservabilityConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnObservabilityConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnObservabilityConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnObservabilityConfiguration),error}this.attrLatest=this.getAtt("Latest"),this.attrObservabilityConfigurationArn=cdk.Token.asString(this.getAtt("ObservabilityConfigurationArn",cdk.ResolutionTypeHint.STRING)),this.attrObservabilityConfigurationRevision=cdk.Token.asNumber(this.getAtt("ObservabilityConfigurationRevision",cdk.ResolutionTypeHint.NUMBER)),this.observabilityConfigurationName=props.observabilityConfigurationName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::ObservabilityConfiguration",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.traceConfiguration=props.traceConfiguration}get cfnProperties(){return{observabilityConfigurationName:this.observabilityConfigurationName,tags:this.tags.renderTags(),traceConfiguration:this.traceConfiguration}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnObservabilityConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnObservabilityConfigurationPropsToCloudFormation(props)}}exports.CfnObservabilityConfiguration=CfnObservabilityConfiguration,_b=JSII_RTTI_SYMBOL_1,CfnObservabilityConfiguration[_b]={fqn:"aws-cdk-lib.aws_apprunner.CfnObservabilityConfiguration",version:"2.94.0"},CfnObservabilityConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::ObservabilityConfiguration";function CfnObservabilityConfigurationTraceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vendor",cdk.requiredValidator)(properties.vendor)),errors.collect(cdk.propertyValidator("vendor",cdk.validateString)(properties.vendor)),errors.wrap('supplied properties not correct for "TraceConfigurationProperty"')}function convertCfnObservabilityConfigurationTraceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnObservabilityConfigurationTraceConfigurationPropertyValidator(properties).assertSuccess(),{Vendor:cdk.stringToCloudFormation(properties.vendor)}):properties}function CfnObservabilityConfigurationTraceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vendor","Vendor",properties.Vendor!=null?cfn_parse.FromCloudFormation.getString(properties.Vendor):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnObservabilityConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("observabilityConfigurationName",cdk.validateString)(properties.observabilityConfigurationName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("traceConfiguration",CfnObservabilityConfigurationTraceConfigurationPropertyValidator)(properties.traceConfiguration)),errors.wrap('supplied properties not correct for "CfnObservabilityConfigurationProps"')}function convertCfnObservabilityConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnObservabilityConfigurationPropsValidator(properties).assertSuccess(),{ObservabilityConfigurationName:cdk.stringToCloudFormation(properties.observabilityConfigurationName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TraceConfiguration:convertCfnObservabilityConfigurationTraceConfigurationPropertyToCloudFormation(properties.traceConfiguration)}):properties}function CfnObservabilityConfigurationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("observabilityConfigurationName","ObservabilityConfigurationName",properties.ObservabilityConfigurationName!=null?cfn_parse.FromCloudFormation.getString(properties.ObservabilityConfigurationName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("traceConfiguration","TraceConfiguration",properties.TraceConfiguration!=null?CfnObservabilityConfigurationTraceConfigurationPropertyFromCloudFormation(properties.TraceConfiguration):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnService extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnServicePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnService(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnService.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnServiceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnService),error}cdk.requireProperty(props,"sourceConfiguration",this),this.attrServiceArn=cdk.Token.asString(this.getAtt("ServiceArn",cdk.ResolutionTypeHint.STRING)),this.attrServiceId=cdk.Token.asString(this.getAtt("ServiceId",cdk.ResolutionTypeHint.STRING)),this.attrServiceUrl=cdk.Token.asString(this.getAtt("ServiceUrl",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.autoScalingConfigurationArn=props.autoScalingConfigurationArn,this.encryptionConfiguration=props.encryptionConfiguration,this.healthCheckConfiguration=props.healthCheckConfiguration,this.instanceConfiguration=props.instanceConfiguration,this.networkConfiguration=props.networkConfiguration,this.observabilityConfiguration=props.observabilityConfiguration,this.serviceName=props.serviceName,this.sourceConfiguration=props.sourceConfiguration,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::Service",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{autoScalingConfigurationArn:this.autoScalingConfigurationArn,encryptionConfiguration:this.encryptionConfiguration,healthCheckConfiguration:this.healthCheckConfiguration,instanceConfiguration:this.instanceConfiguration,networkConfiguration:this.networkConfiguration,observabilityConfiguration:this.observabilityConfiguration,serviceName:this.serviceName,sourceConfiguration:this.sourceConfiguration,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnService.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnServicePropsToCloudFormation(props)}}exports.CfnService=CfnService,_c=JSII_RTTI_SYMBOL_1,CfnService[_c]={fqn:"aws-cdk-lib.aws_apprunner.CfnService",version:"2.94.0"},CfnService.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::Service";function CfnServiceSourceCodeVersionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.collect(cdk.propertyValidator("value",cdk.requiredValidator)(properties.value)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "SourceCodeVersionProperty"')}function convertCfnServiceSourceCodeVersionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceSourceCodeVersionPropertyValidator(properties).assertSuccess(),{Type:cdk.stringToCloudFormation(properties.type),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceKeyValuePairPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "KeyValuePairProperty"')}function convertCfnServiceKeyValuePairPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceKeyValuePairPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnServiceKeyValuePairPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceCodeConfigurationValuesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("buildCommand",cdk.validateString)(properties.buildCommand)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("runtime",cdk.requiredValidator)(properties.runtime)),errors.collect(cdk.propertyValidator("runtime",cdk.validateString)(properties.runtime)),errors.collect(cdk.propertyValidator("runtimeEnvironmentSecrets",cdk.listValidator(CfnServiceKeyValuePairPropertyValidator))(properties.runtimeEnvironmentSecrets)),errors.collect(cdk.propertyValidator("runtimeEnvironmentVariables",cdk.listValidator(CfnServiceKeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables)),errors.collect(cdk.propertyValidator("startCommand",cdk.validateString)(properties.startCommand)),errors.wrap('supplied properties not correct for "CodeConfigurationValuesProperty"')}function convertCfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceCodeConfigurationValuesPropertyValidator(properties).assertSuccess(),{BuildCommand:cdk.stringToCloudFormation(properties.buildCommand),Port:cdk.stringToCloudFormation(properties.port),Runtime:cdk.stringToCloudFormation(properties.runtime),RuntimeEnvironmentSecrets:cdk.listMapper(convertCfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentSecrets),RuntimeEnvironmentVariables:cdk.listMapper(convertCfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),StartCommand:cdk.stringToCloudFormation(properties.startCommand)}):properties}function CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("buildCommand","BuildCommand",properties.BuildCommand!=null?cfn_parse.FromCloudFormation.getString(properties.BuildCommand):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("runtime","Runtime",properties.Runtime!=null?cfn_parse.FromCloudFormation.getString(properties.Runtime):void 0),ret.addPropertyResult("runtimeEnvironmentSecrets","RuntimeEnvironmentSecrets",properties.RuntimeEnvironmentSecrets!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentSecrets):void 0),ret.addPropertyResult("runtimeEnvironmentVariables","RuntimeEnvironmentVariables",properties.RuntimeEnvironmentVariables!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables):void 0),ret.addPropertyResult("startCommand","StartCommand",properties.StartCommand!=null?cfn_parse.FromCloudFormation.getString(properties.StartCommand):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceCodeConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("codeConfigurationValues",CfnServiceCodeConfigurationValuesPropertyValidator)(properties.codeConfigurationValues)),errors.collect(cdk.propertyValidator("configurationSource",cdk.requiredValidator)(properties.configurationSource)),errors.collect(cdk.propertyValidator("configurationSource",cdk.validateString)(properties.configurationSource)),errors.wrap('supplied properties not correct for "CodeConfigurationProperty"')}function convertCfnServiceCodeConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceCodeConfigurationPropertyValidator(properties).assertSuccess(),{CodeConfigurationValues:convertCfnServiceCodeConfigurationValuesPropertyToCloudFormation(properties.codeConfigurationValues),ConfigurationSource:cdk.stringToCloudFormation(properties.configurationSource)}):properties}function CfnServiceCodeConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("codeConfigurationValues","CodeConfigurationValues",properties.CodeConfigurationValues!=null?CfnServiceCodeConfigurationValuesPropertyFromCloudFormation(properties.CodeConfigurationValues):void 0),ret.addPropertyResult("configurationSource","ConfigurationSource",properties.ConfigurationSource!=null?cfn_parse.FromCloudFormation.getString(properties.ConfigurationSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceCodeRepositoryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("codeConfiguration",CfnServiceCodeConfigurationPropertyValidator)(properties.codeConfiguration)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.requiredValidator)(properties.repositoryUrl)),errors.collect(cdk.propertyValidator("repositoryUrl",cdk.validateString)(properties.repositoryUrl)),errors.collect(cdk.propertyValidator("sourceCodeVersion",cdk.requiredValidator)(properties.sourceCodeVersion)),errors.collect(cdk.propertyValidator("sourceCodeVersion",CfnServiceSourceCodeVersionPropertyValidator)(properties.sourceCodeVersion)),errors.wrap('supplied properties not correct for "CodeRepositoryProperty"')}function convertCfnServiceCodeRepositoryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceCodeRepositoryPropertyValidator(properties).assertSuccess(),{CodeConfiguration:convertCfnServiceCodeConfigurationPropertyToCloudFormation(properties.codeConfiguration),RepositoryUrl:cdk.stringToCloudFormation(properties.repositoryUrl),SourceCodeVersion:convertCfnServiceSourceCodeVersionPropertyToCloudFormation(properties.sourceCodeVersion)}):properties}function CfnServiceCodeRepositoryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("codeConfiguration","CodeConfiguration",properties.CodeConfiguration!=null?CfnServiceCodeConfigurationPropertyFromCloudFormation(properties.CodeConfiguration):void 0),ret.addPropertyResult("repositoryUrl","RepositoryUrl",properties.RepositoryUrl!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryUrl):void 0),ret.addPropertyResult("sourceCodeVersion","SourceCodeVersion",properties.SourceCodeVersion!=null?CfnServiceSourceCodeVersionPropertyFromCloudFormation(properties.SourceCodeVersion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceImageConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("runtimeEnvironmentSecrets",cdk.listValidator(CfnServiceKeyValuePairPropertyValidator))(properties.runtimeEnvironmentSecrets)),errors.collect(cdk.propertyValidator("runtimeEnvironmentVariables",cdk.listValidator(CfnServiceKeyValuePairPropertyValidator))(properties.runtimeEnvironmentVariables)),errors.collect(cdk.propertyValidator("startCommand",cdk.validateString)(properties.startCommand)),errors.wrap('supplied properties not correct for "ImageConfigurationProperty"')}function convertCfnServiceImageConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceImageConfigurationPropertyValidator(properties).assertSuccess(),{Port:cdk.stringToCloudFormation(properties.port),RuntimeEnvironmentSecrets:cdk.listMapper(convertCfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentSecrets),RuntimeEnvironmentVariables:cdk.listMapper(convertCfnServiceKeyValuePairPropertyToCloudFormation)(properties.runtimeEnvironmentVariables),StartCommand:cdk.stringToCloudFormation(properties.startCommand)}):properties}function CfnServiceImageConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("runtimeEnvironmentSecrets","RuntimeEnvironmentSecrets",properties.RuntimeEnvironmentSecrets!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentSecrets):void 0),ret.addPropertyResult("runtimeEnvironmentVariables","RuntimeEnvironmentVariables",properties.RuntimeEnvironmentVariables!=null?cfn_parse.FromCloudFormation.getArray(CfnServiceKeyValuePairPropertyFromCloudFormation)(properties.RuntimeEnvironmentVariables):void 0),ret.addPropertyResult("startCommand","StartCommand",properties.StartCommand!=null?cfn_parse.FromCloudFormation.getString(properties.StartCommand):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceImageRepositoryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("imageConfiguration",CfnServiceImageConfigurationPropertyValidator)(properties.imageConfiguration)),errors.collect(cdk.propertyValidator("imageIdentifier",cdk.requiredValidator)(properties.imageIdentifier)),errors.collect(cdk.propertyValidator("imageIdentifier",cdk.validateString)(properties.imageIdentifier)),errors.collect(cdk.propertyValidator("imageRepositoryType",cdk.requiredValidator)(properties.imageRepositoryType)),errors.collect(cdk.propertyValidator("imageRepositoryType",cdk.validateString)(properties.imageRepositoryType)),errors.wrap('supplied properties not correct for "ImageRepositoryProperty"')}function convertCfnServiceImageRepositoryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceImageRepositoryPropertyValidator(properties).assertSuccess(),{ImageConfiguration:convertCfnServiceImageConfigurationPropertyToCloudFormation(properties.imageConfiguration),ImageIdentifier:cdk.stringToCloudFormation(properties.imageIdentifier),ImageRepositoryType:cdk.stringToCloudFormation(properties.imageRepositoryType)}):properties}function CfnServiceImageRepositoryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("imageConfiguration","ImageConfiguration",properties.ImageConfiguration!=null?CfnServiceImageConfigurationPropertyFromCloudFormation(properties.ImageConfiguration):void 0),ret.addPropertyResult("imageIdentifier","ImageIdentifier",properties.ImageIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ImageIdentifier):void 0),ret.addPropertyResult("imageRepositoryType","ImageRepositoryType",properties.ImageRepositoryType!=null?cfn_parse.FromCloudFormation.getString(properties.ImageRepositoryType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceAuthenticationConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessRoleArn",cdk.validateString)(properties.accessRoleArn)),errors.collect(cdk.propertyValidator("connectionArn",cdk.validateString)(properties.connectionArn)),errors.wrap('supplied properties not correct for "AuthenticationConfigurationProperty"')}function convertCfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceAuthenticationConfigurationPropertyValidator(properties).assertSuccess(),{AccessRoleArn:cdk.stringToCloudFormation(properties.accessRoleArn),ConnectionArn:cdk.stringToCloudFormation(properties.connectionArn)}):properties}function CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessRoleArn","AccessRoleArn",properties.AccessRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.AccessRoleArn):void 0),ret.addPropertyResult("connectionArn","ConnectionArn",properties.ConnectionArn!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectionArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceSourceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("authenticationConfiguration",CfnServiceAuthenticationConfigurationPropertyValidator)(properties.authenticationConfiguration)),errors.collect(cdk.propertyValidator("autoDeploymentsEnabled",cdk.validateBoolean)(properties.autoDeploymentsEnabled)),errors.collect(cdk.propertyValidator("codeRepository",CfnServiceCodeRepositoryPropertyValidator)(properties.codeRepository)),errors.collect(cdk.propertyValidator("imageRepository",CfnServiceImageRepositoryPropertyValidator)(properties.imageRepository)),errors.wrap('supplied properties not correct for "SourceConfigurationProperty"')}function convertCfnServiceSourceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceSourceConfigurationPropertyValidator(properties).assertSuccess(),{AuthenticationConfiguration:convertCfnServiceAuthenticationConfigurationPropertyToCloudFormation(properties.authenticationConfiguration),AutoDeploymentsEnabled:cdk.booleanToCloudFormation(properties.autoDeploymentsEnabled),CodeRepository:convertCfnServiceCodeRepositoryPropertyToCloudFormation(properties.codeRepository),ImageRepository:convertCfnServiceImageRepositoryPropertyToCloudFormation(properties.imageRepository)}):properties}function CfnServiceSourceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("authenticationConfiguration","AuthenticationConfiguration",properties.AuthenticationConfiguration!=null?CfnServiceAuthenticationConfigurationPropertyFromCloudFormation(properties.AuthenticationConfiguration):void 0),ret.addPropertyResult("autoDeploymentsEnabled","AutoDeploymentsEnabled",properties.AutoDeploymentsEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoDeploymentsEnabled):void 0),ret.addPropertyResult("codeRepository","CodeRepository",properties.CodeRepository!=null?CfnServiceCodeRepositoryPropertyFromCloudFormation(properties.CodeRepository):void 0),ret.addPropertyResult("imageRepository","ImageRepository",properties.ImageRepository!=null?CfnServiceImageRepositoryPropertyFromCloudFormation(properties.ImageRepository):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceInstanceConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cpu",cdk.validateString)(properties.cpu)),errors.collect(cdk.propertyValidator("instanceRoleArn",cdk.validateString)(properties.instanceRoleArn)),errors.collect(cdk.propertyValidator("memory",cdk.validateString)(properties.memory)),errors.wrap('supplied properties not correct for "InstanceConfigurationProperty"')}function convertCfnServiceInstanceConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceInstanceConfigurationPropertyValidator(properties).assertSuccess(),{Cpu:cdk.stringToCloudFormation(properties.cpu),InstanceRoleArn:cdk.stringToCloudFormation(properties.instanceRoleArn),Memory:cdk.stringToCloudFormation(properties.memory)}):properties}function CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cpu","Cpu",properties.Cpu!=null?cfn_parse.FromCloudFormation.getString(properties.Cpu):void 0),ret.addPropertyResult("instanceRoleArn","InstanceRoleArn",properties.InstanceRoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.InstanceRoleArn):void 0),ret.addPropertyResult("memory","Memory",properties.Memory!=null?cfn_parse.FromCloudFormation.getString(properties.Memory):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceEncryptionConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("kmsKey",cdk.requiredValidator)(properties.kmsKey)),errors.collect(cdk.propertyValidator("kmsKey",cdk.validateString)(properties.kmsKey)),errors.wrap('supplied properties not correct for "EncryptionConfigurationProperty"')}function convertCfnServiceEncryptionConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceEncryptionConfigurationPropertyValidator(properties).assertSuccess(),{KmsKey:cdk.stringToCloudFormation(properties.kmsKey)}):properties}function CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("kmsKey","KmsKey",properties.KmsKey!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceHealthCheckConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthyThreshold",cdk.validateNumber)(properties.healthyThreshold)),errors.collect(cdk.propertyValidator("interval",cdk.validateNumber)(properties.interval)),errors.collect(cdk.propertyValidator("path",cdk.validateString)(properties.path)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("timeout",cdk.validateNumber)(properties.timeout)),errors.collect(cdk.propertyValidator("unhealthyThreshold",cdk.validateNumber)(properties.unhealthyThreshold)),errors.wrap('supplied properties not correct for "HealthCheckConfigurationProperty"')}function convertCfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceHealthCheckConfigurationPropertyValidator(properties).assertSuccess(),{HealthyThreshold:cdk.numberToCloudFormation(properties.healthyThreshold),Interval:cdk.numberToCloudFormation(properties.interval),Path:cdk.stringToCloudFormation(properties.path),Protocol:cdk.stringToCloudFormation(properties.protocol),Timeout:cdk.numberToCloudFormation(properties.timeout),UnhealthyThreshold:cdk.numberToCloudFormation(properties.unhealthyThreshold)}):properties}function CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthyThreshold","HealthyThreshold",properties.HealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.HealthyThreshold):void 0),ret.addPropertyResult("interval","Interval",properties.Interval!=null?cfn_parse.FromCloudFormation.getNumber(properties.Interval):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse.FromCloudFormation.getString(properties.Path):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("timeout","Timeout",properties.Timeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.Timeout):void 0),ret.addPropertyResult("unhealthyThreshold","UnhealthyThreshold",properties.UnhealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.UnhealthyThreshold):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceServiceObservabilityConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("observabilityConfigurationArn",cdk.validateString)(properties.observabilityConfigurationArn)),errors.collect(cdk.propertyValidator("observabilityEnabled",cdk.requiredValidator)(properties.observabilityEnabled)),errors.collect(cdk.propertyValidator("observabilityEnabled",cdk.validateBoolean)(properties.observabilityEnabled)),errors.wrap('supplied properties not correct for "ServiceObservabilityConfigurationProperty"')}function convertCfnServiceServiceObservabilityConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceServiceObservabilityConfigurationPropertyValidator(properties).assertSuccess(),{ObservabilityConfigurationArn:cdk.stringToCloudFormation(properties.observabilityConfigurationArn),ObservabilityEnabled:cdk.booleanToCloudFormation(properties.observabilityEnabled)}):properties}function CfnServiceServiceObservabilityConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("observabilityConfigurationArn","ObservabilityConfigurationArn",properties.ObservabilityConfigurationArn!=null?cfn_parse.FromCloudFormation.getString(properties.ObservabilityConfigurationArn):void 0),ret.addPropertyResult("observabilityEnabled","ObservabilityEnabled",properties.ObservabilityEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ObservabilityEnabled):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceEgressConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressType",cdk.requiredValidator)(properties.egressType)),errors.collect(cdk.propertyValidator("egressType",cdk.validateString)(properties.egressType)),errors.collect(cdk.propertyValidator("vpcConnectorArn",cdk.validateString)(properties.vpcConnectorArn)),errors.wrap('supplied properties not correct for "EgressConfigurationProperty"')}function convertCfnServiceEgressConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceEgressConfigurationPropertyValidator(properties).assertSuccess(),{EgressType:cdk.stringToCloudFormation(properties.egressType),VpcConnectorArn:cdk.stringToCloudFormation(properties.vpcConnectorArn)}):properties}function CfnServiceEgressConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressType","EgressType",properties.EgressType!=null?cfn_parse.FromCloudFormation.getString(properties.EgressType):void 0),ret.addPropertyResult("vpcConnectorArn","VpcConnectorArn",properties.VpcConnectorArn!=null?cfn_parse.FromCloudFormation.getString(properties.VpcConnectorArn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceIngressConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("isPubliclyAccessible",cdk.requiredValidator)(properties.isPubliclyAccessible)),errors.collect(cdk.propertyValidator("isPubliclyAccessible",cdk.validateBoolean)(properties.isPubliclyAccessible)),errors.wrap('supplied properties not correct for "IngressConfigurationProperty"')}function convertCfnServiceIngressConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceIngressConfigurationPropertyValidator(properties).assertSuccess(),{IsPubliclyAccessible:cdk.booleanToCloudFormation(properties.isPubliclyAccessible)}):properties}function CfnServiceIngressConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("isPubliclyAccessible","IsPubliclyAccessible",properties.IsPubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsPubliclyAccessible):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceNetworkConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("egressConfiguration",CfnServiceEgressConfigurationPropertyValidator)(properties.egressConfiguration)),errors.collect(cdk.propertyValidator("ingressConfiguration",CfnServiceIngressConfigurationPropertyValidator)(properties.ingressConfiguration)),errors.wrap('supplied properties not correct for "NetworkConfigurationProperty"')}function convertCfnServiceNetworkConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceNetworkConfigurationPropertyValidator(properties).assertSuccess(),{EgressConfiguration:convertCfnServiceEgressConfigurationPropertyToCloudFormation(properties.egressConfiguration),IngressConfiguration:convertCfnServiceIngressConfigurationPropertyToCloudFormation(properties.ingressConfiguration)}):properties}function CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("egressConfiguration","EgressConfiguration",properties.EgressConfiguration!=null?CfnServiceEgressConfigurationPropertyFromCloudFormation(properties.EgressConfiguration):void 0),ret.addPropertyResult("ingressConfiguration","IngressConfiguration",properties.IngressConfiguration!=null?CfnServiceIngressConfigurationPropertyFromCloudFormation(properties.IngressConfiguration):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServicePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autoScalingConfigurationArn",cdk.validateString)(properties.autoScalingConfigurationArn)),errors.collect(cdk.propertyValidator("encryptionConfiguration",CfnServiceEncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration)),errors.collect(cdk.propertyValidator("healthCheckConfiguration",CfnServiceHealthCheckConfigurationPropertyValidator)(properties.healthCheckConfiguration)),errors.collect(cdk.propertyValidator("instanceConfiguration",CfnServiceInstanceConfigurationPropertyValidator)(properties.instanceConfiguration)),errors.collect(cdk.propertyValidator("networkConfiguration",CfnServiceNetworkConfigurationPropertyValidator)(properties.networkConfiguration)),errors.collect(cdk.propertyValidator("observabilityConfiguration",CfnServiceServiceObservabilityConfigurationPropertyValidator)(properties.observabilityConfiguration)),errors.collect(cdk.propertyValidator("serviceName",cdk.validateString)(properties.serviceName)),errors.collect(cdk.propertyValidator("sourceConfiguration",cdk.requiredValidator)(properties.sourceConfiguration)),errors.collect(cdk.propertyValidator("sourceConfiguration",CfnServiceSourceConfigurationPropertyValidator)(properties.sourceConfiguration)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnServiceProps"')}function convertCfnServicePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServicePropsValidator(properties).assertSuccess(),{AutoScalingConfigurationArn:cdk.stringToCloudFormation(properties.autoScalingConfigurationArn),EncryptionConfiguration:convertCfnServiceEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),HealthCheckConfiguration:convertCfnServiceHealthCheckConfigurationPropertyToCloudFormation(properties.healthCheckConfiguration),InstanceConfiguration:convertCfnServiceInstanceConfigurationPropertyToCloudFormation(properties.instanceConfiguration),NetworkConfiguration:convertCfnServiceNetworkConfigurationPropertyToCloudFormation(properties.networkConfiguration),ObservabilityConfiguration:convertCfnServiceServiceObservabilityConfigurationPropertyToCloudFormation(properties.observabilityConfiguration),ServiceName:cdk.stringToCloudFormation(properties.serviceName),SourceConfiguration:convertCfnServiceSourceConfigurationPropertyToCloudFormation(properties.sourceConfiguration),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnServicePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoScalingConfigurationArn","AutoScalingConfigurationArn",properties.AutoScalingConfigurationArn!=null?cfn_parse.FromCloudFormation.getString(properties.AutoScalingConfigurationArn):void 0),ret.addPropertyResult("encryptionConfiguration","EncryptionConfiguration",properties.EncryptionConfiguration!=null?CfnServiceEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration):void 0),ret.addPropertyResult("healthCheckConfiguration","HealthCheckConfiguration",properties.HealthCheckConfiguration!=null?CfnServiceHealthCheckConfigurationPropertyFromCloudFormation(properties.HealthCheckConfiguration):void 0),ret.addPropertyResult("instanceConfiguration","InstanceConfiguration",properties.InstanceConfiguration!=null?CfnServiceInstanceConfigurationPropertyFromCloudFormation(properties.InstanceConfiguration):void 0),ret.addPropertyResult("networkConfiguration","NetworkConfiguration",properties.NetworkConfiguration!=null?CfnServiceNetworkConfigurationPropertyFromCloudFormation(properties.NetworkConfiguration):void 0),ret.addPropertyResult("observabilityConfiguration","ObservabilityConfiguration",properties.ObservabilityConfiguration!=null?CfnServiceServiceObservabilityConfigurationPropertyFromCloudFormation(properties.ObservabilityConfiguration):void 0),ret.addPropertyResult("serviceName","ServiceName",properties.ServiceName!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceName):void 0),ret.addPropertyResult("sourceConfiguration","SourceConfiguration",properties.SourceConfiguration!=null?CfnServiceSourceConfigurationPropertyFromCloudFormation(properties.SourceConfiguration):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVpcConnector extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVpcConnectorPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnVpcConnector(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnVpcConnector.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnVpcConnectorProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnVpcConnector),error}cdk.requireProperty(props,"subnets",this),this.attrVpcConnectorArn=cdk.Token.asString(this.getAtt("VpcConnectorArn",cdk.ResolutionTypeHint.STRING)),this.attrVpcConnectorRevision=cdk.Token.asNumber(this.getAtt("VpcConnectorRevision",cdk.ResolutionTypeHint.NUMBER)),this.securityGroups=props.securityGroups,this.subnets=props.subnets,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::VpcConnector",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcConnectorName=props.vpcConnectorName}get cfnProperties(){return{securityGroups:this.securityGroups,subnets:this.subnets,tags:this.tags.renderTags(),vpcConnectorName:this.vpcConnectorName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnVpcConnector.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnVpcConnectorPropsToCloudFormation(props)}}exports.CfnVpcConnector=CfnVpcConnector,_d=JSII_RTTI_SYMBOL_1,CfnVpcConnector[_d]={fqn:"aws-cdk-lib.aws_apprunner.CfnVpcConnector",version:"2.94.0"},CfnVpcConnector.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::VpcConnector";function CfnVpcConnectorPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroups",cdk.listValidator(cdk.validateString))(properties.securityGroups)),errors.collect(cdk.propertyValidator("subnets",cdk.requiredValidator)(properties.subnets)),errors.collect(cdk.propertyValidator("subnets",cdk.listValidator(cdk.validateString))(properties.subnets)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcConnectorName",cdk.validateString)(properties.vpcConnectorName)),errors.wrap('supplied properties not correct for "CfnVpcConnectorProps"')}function convertCfnVpcConnectorPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcConnectorPropsValidator(properties).assertSuccess(),{SecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroups),Subnets:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnets),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcConnectorName:cdk.stringToCloudFormation(properties.vpcConnectorName)}):properties}function CfnVpcConnectorPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroups","SecurityGroups",properties.SecurityGroups!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroups):void 0),ret.addPropertyResult("subnets","Subnets",properties.Subnets!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Subnets):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcConnectorName","VpcConnectorName",properties.VpcConnectorName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcConnectorName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVpcIngressConnection extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVpcIngressConnectionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnVpcIngressConnection(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnVpcIngressConnection.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_apprunner_CfnVpcIngressConnectionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnVpcIngressConnection),error}cdk.requireProperty(props,"ingressVpcConfiguration",this),cdk.requireProperty(props,"serviceArn",this),this.attrDomainName=cdk.Token.asString(this.getAtt("DomainName",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.attrVpcIngressConnectionArn=cdk.Token.asString(this.getAtt("VpcIngressConnectionArn",cdk.ResolutionTypeHint.STRING)),this.ingressVpcConfiguration=props.ingressVpcConfiguration,this.serviceArn=props.serviceArn,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::AppRunner::VpcIngressConnection",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcIngressConnectionName=props.vpcIngressConnectionName}get cfnProperties(){return{ingressVpcConfiguration:this.ingressVpcConfiguration,serviceArn:this.serviceArn,tags:this.tags.renderTags(),vpcIngressConnectionName:this.vpcIngressConnectionName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnVpcIngressConnection.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnVpcIngressConnectionPropsToCloudFormation(props)}}exports.CfnVpcIngressConnection=CfnVpcIngressConnection,_e=JSII_RTTI_SYMBOL_1,CfnVpcIngressConnection[_e]={fqn:"aws-cdk-lib.aws_apprunner.CfnVpcIngressConnection",version:"2.94.0"},CfnVpcIngressConnection.CFN_RESOURCE_TYPE_NAME="AWS::AppRunner::VpcIngressConnection";function CfnVpcIngressConnectionIngressVpcConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("vpcEndpointId",cdk.requiredValidator)(properties.vpcEndpointId)),errors.collect(cdk.propertyValidator("vpcEndpointId",cdk.validateString)(properties.vpcEndpointId)),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "IngressVpcConfigurationProperty"')}function convertCfnVpcIngressConnectionIngressVpcConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcIngressConnectionIngressVpcConfigurationPropertyValidator(properties).assertSuccess(),{VpcEndpointId:cdk.stringToCloudFormation(properties.vpcEndpointId),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnVpcIngressConnectionIngressVpcConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("vpcEndpointId","VpcEndpointId",properties.VpcEndpointId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcEndpointId):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnVpcIngressConnectionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ingressVpcConfiguration",cdk.requiredValidator)(properties.ingressVpcConfiguration)),errors.collect(cdk.propertyValidator("ingressVpcConfiguration",CfnVpcIngressConnectionIngressVpcConfigurationPropertyValidator)(properties.ingressVpcConfiguration)),errors.collect(cdk.propertyValidator("serviceArn",cdk.requiredValidator)(properties.serviceArn)),errors.collect(cdk.propertyValidator("serviceArn",cdk.validateString)(properties.serviceArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcIngressConnectionName",cdk.validateString)(properties.vpcIngressConnectionName)),errors.wrap('supplied properties not correct for "CfnVpcIngressConnectionProps"')}function convertCfnVpcIngressConnectionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVpcIngressConnectionPropsValidator(properties).assertSuccess(),{IngressVpcConfiguration:convertCfnVpcIngressConnectionIngressVpcConfigurationPropertyToCloudFormation(properties.ingressVpcConfiguration),ServiceArn:cdk.stringToCloudFormation(properties.serviceArn),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcIngressConnectionName:cdk.stringToCloudFormation(properties.vpcIngressConnectionName)}):properties}function CfnVpcIngressConnectionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ingressVpcConfiguration","IngressVpcConfiguration",properties.IngressVpcConfiguration!=null?CfnVpcIngressConnectionIngressVpcConfigurationPropertyFromCloudFormation(properties.IngressVpcConfiguration):void 0),ret.addPropertyResult("serviceArn","ServiceArn",properties.ServiceArn!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcIngressConnectionName","VpcIngressConnectionName",properties.VpcIngressConnectionName!=null?cfn_parse.FromCloudFormation.getString(properties.VpcIngressConnectionName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
