"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnStaticIp=exports.CfnLoadBalancerTlsCertificate=exports.CfnLoadBalancer=exports.CfnInstance=exports.CfnDistribution=exports.CfnDisk=exports.CfnDatabase=exports.CfnContainer=exports.CfnCertificate=exports.CfnBucket=exports.CfnAlarm=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnAlarm extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnAlarmPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnAlarm(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnAlarm.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnAlarmProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnAlarm),error}cdk.requireProperty(props,"alarmName",this),cdk.requireProperty(props,"comparisonOperator",this),cdk.requireProperty(props,"evaluationPeriods",this),cdk.requireProperty(props,"metricName",this),cdk.requireProperty(props,"monitoredResourceName",this),cdk.requireProperty(props,"threshold",this),this.attrAlarmArn=cdk.Token.asString(this.getAtt("AlarmArn",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.alarmName=props.alarmName,this.comparisonOperator=props.comparisonOperator,this.contactProtocols=props.contactProtocols,this.datapointsToAlarm=props.datapointsToAlarm,this.evaluationPeriods=props.evaluationPeriods,this.metricName=props.metricName,this.monitoredResourceName=props.monitoredResourceName,this.notificationEnabled=props.notificationEnabled,this.notificationTriggers=props.notificationTriggers,this.threshold=props.threshold,this.treatMissingData=props.treatMissingData}get cfnProperties(){return{alarmName:this.alarmName,comparisonOperator:this.comparisonOperator,contactProtocols:this.contactProtocols,datapointsToAlarm:this.datapointsToAlarm,evaluationPeriods:this.evaluationPeriods,metricName:this.metricName,monitoredResourceName:this.monitoredResourceName,notificationEnabled:this.notificationEnabled,notificationTriggers:this.notificationTriggers,threshold:this.threshold,treatMissingData:this.treatMissingData}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnAlarm.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnAlarmPropsToCloudFormation(props)}}exports.CfnAlarm=CfnAlarm,_a=JSII_RTTI_SYMBOL_1,CfnAlarm[_a]={fqn:"aws-cdk-lib.aws_lightsail.CfnAlarm",version:"2.94.0"},CfnAlarm.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Alarm";function CfnAlarmPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("alarmName",cdk.requiredValidator)(properties.alarmName)),errors.collect(cdk.propertyValidator("alarmName",cdk.validateString)(properties.alarmName)),errors.collect(cdk.propertyValidator("comparisonOperator",cdk.requiredValidator)(properties.comparisonOperator)),errors.collect(cdk.propertyValidator("comparisonOperator",cdk.validateString)(properties.comparisonOperator)),errors.collect(cdk.propertyValidator("contactProtocols",cdk.listValidator(cdk.validateString))(properties.contactProtocols)),errors.collect(cdk.propertyValidator("datapointsToAlarm",cdk.validateNumber)(properties.datapointsToAlarm)),errors.collect(cdk.propertyValidator("evaluationPeriods",cdk.requiredValidator)(properties.evaluationPeriods)),errors.collect(cdk.propertyValidator("evaluationPeriods",cdk.validateNumber)(properties.evaluationPeriods)),errors.collect(cdk.propertyValidator("metricName",cdk.requiredValidator)(properties.metricName)),errors.collect(cdk.propertyValidator("metricName",cdk.validateString)(properties.metricName)),errors.collect(cdk.propertyValidator("monitoredResourceName",cdk.requiredValidator)(properties.monitoredResourceName)),errors.collect(cdk.propertyValidator("monitoredResourceName",cdk.validateString)(properties.monitoredResourceName)),errors.collect(cdk.propertyValidator("notificationEnabled",cdk.validateBoolean)(properties.notificationEnabled)),errors.collect(cdk.propertyValidator("notificationTriggers",cdk.listValidator(cdk.validateString))(properties.notificationTriggers)),errors.collect(cdk.propertyValidator("threshold",cdk.requiredValidator)(properties.threshold)),errors.collect(cdk.propertyValidator("threshold",cdk.validateNumber)(properties.threshold)),errors.collect(cdk.propertyValidator("treatMissingData",cdk.validateString)(properties.treatMissingData)),errors.wrap('supplied properties not correct for "CfnAlarmProps"')}function convertCfnAlarmPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnAlarmPropsValidator(properties).assertSuccess(),{AlarmName:cdk.stringToCloudFormation(properties.alarmName),ComparisonOperator:cdk.stringToCloudFormation(properties.comparisonOperator),ContactProtocols:cdk.listMapper(cdk.stringToCloudFormation)(properties.contactProtocols),DatapointsToAlarm:cdk.numberToCloudFormation(properties.datapointsToAlarm),EvaluationPeriods:cdk.numberToCloudFormation(properties.evaluationPeriods),MetricName:cdk.stringToCloudFormation(properties.metricName),MonitoredResourceName:cdk.stringToCloudFormation(properties.monitoredResourceName),NotificationEnabled:cdk.booleanToCloudFormation(properties.notificationEnabled),NotificationTriggers:cdk.listMapper(cdk.stringToCloudFormation)(properties.notificationTriggers),Threshold:cdk.numberToCloudFormation(properties.threshold),TreatMissingData:cdk.stringToCloudFormation(properties.treatMissingData)}):properties}function CfnAlarmPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("alarmName","AlarmName",properties.AlarmName!=null?cfn_parse.FromCloudFormation.getString(properties.AlarmName):void 0),ret.addPropertyResult("comparisonOperator","ComparisonOperator",properties.ComparisonOperator!=null?cfn_parse.FromCloudFormation.getString(properties.ComparisonOperator):void 0),ret.addPropertyResult("contactProtocols","ContactProtocols",properties.ContactProtocols!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ContactProtocols):void 0),ret.addPropertyResult("datapointsToAlarm","DatapointsToAlarm",properties.DatapointsToAlarm!=null?cfn_parse.FromCloudFormation.getNumber(properties.DatapointsToAlarm):void 0),ret.addPropertyResult("evaluationPeriods","EvaluationPeriods",properties.EvaluationPeriods!=null?cfn_parse.FromCloudFormation.getNumber(properties.EvaluationPeriods):void 0),ret.addPropertyResult("metricName","MetricName",properties.MetricName!=null?cfn_parse.FromCloudFormation.getString(properties.MetricName):void 0),ret.addPropertyResult("monitoredResourceName","MonitoredResourceName",properties.MonitoredResourceName!=null?cfn_parse.FromCloudFormation.getString(properties.MonitoredResourceName):void 0),ret.addPropertyResult("notificationEnabled","NotificationEnabled",properties.NotificationEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.NotificationEnabled):void 0),ret.addPropertyResult("notificationTriggers","NotificationTriggers",properties.NotificationTriggers!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.NotificationTriggers):void 0),ret.addPropertyResult("threshold","Threshold",properties.Threshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.Threshold):void 0),ret.addPropertyResult("treatMissingData","TreatMissingData",properties.TreatMissingData!=null?cfn_parse.FromCloudFormation.getString(properties.TreatMissingData):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnBucket extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnBucketPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnBucket(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnBucket.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnBucketProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnBucket),error}cdk.requireProperty(props,"bucketName",this),cdk.requireProperty(props,"bundleId",this),this.attrAbleToUpdateBundle=this.getAtt("AbleToUpdateBundle"),this.attrBucketArn=cdk.Token.asString(this.getAtt("BucketArn",cdk.ResolutionTypeHint.STRING)),this.attrUrl=cdk.Token.asString(this.getAtt("Url",cdk.ResolutionTypeHint.STRING)),this.accessRules=props.accessRules,this.bucketName=props.bucketName,this.bundleId=props.bundleId,this.objectVersioning=props.objectVersioning,this.readOnlyAccessAccounts=props.readOnlyAccessAccounts,this.resourcesReceivingAccess=props.resourcesReceivingAccess,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Bucket",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{accessRules:this.accessRules,bucketName:this.bucketName,bundleId:this.bundleId,objectVersioning:this.objectVersioning,readOnlyAccessAccounts:this.readOnlyAccessAccounts,resourcesReceivingAccess:this.resourcesReceivingAccess,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnBucket.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnBucketPropsToCloudFormation(props)}}exports.CfnBucket=CfnBucket,_b=JSII_RTTI_SYMBOL_1,CfnBucket[_b]={fqn:"aws-cdk-lib.aws_lightsail.CfnBucket",version:"2.94.0"},CfnBucket.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Bucket";function CfnBucketAccessRulesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowPublicOverrides",cdk.validateBoolean)(properties.allowPublicOverrides)),errors.collect(cdk.propertyValidator("objectAccess",cdk.validateString)(properties.objectAccess)),errors.wrap('supplied properties not correct for "AccessRulesProperty"')}function convertCfnBucketAccessRulesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBucketAccessRulesPropertyValidator(properties).assertSuccess(),{AllowPublicOverrides:cdk.booleanToCloudFormation(properties.allowPublicOverrides),GetObject:cdk.stringToCloudFormation(properties.objectAccess)}):properties}function CfnBucketAccessRulesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowPublicOverrides","AllowPublicOverrides",properties.AllowPublicOverrides!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowPublicOverrides):void 0),ret.addPropertyResult("objectAccess","GetObject",properties.GetObject!=null?cfn_parse.FromCloudFormation.getString(properties.GetObject):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnBucketPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessRules",CfnBucketAccessRulesPropertyValidator)(properties.accessRules)),errors.collect(cdk.propertyValidator("bucketName",cdk.requiredValidator)(properties.bucketName)),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("bundleId",cdk.requiredValidator)(properties.bundleId)),errors.collect(cdk.propertyValidator("bundleId",cdk.validateString)(properties.bundleId)),errors.collect(cdk.propertyValidator("objectVersioning",cdk.validateBoolean)(properties.objectVersioning)),errors.collect(cdk.propertyValidator("readOnlyAccessAccounts",cdk.listValidator(cdk.validateString))(properties.readOnlyAccessAccounts)),errors.collect(cdk.propertyValidator("resourcesReceivingAccess",cdk.listValidator(cdk.validateString))(properties.resourcesReceivingAccess)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnBucketProps"')}function convertCfnBucketPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnBucketPropsValidator(properties).assertSuccess(),{AccessRules:convertCfnBucketAccessRulesPropertyToCloudFormation(properties.accessRules),BucketName:cdk.stringToCloudFormation(properties.bucketName),BundleId:cdk.stringToCloudFormation(properties.bundleId),ObjectVersioning:cdk.booleanToCloudFormation(properties.objectVersioning),ReadOnlyAccessAccounts:cdk.listMapper(cdk.stringToCloudFormation)(properties.readOnlyAccessAccounts),ResourcesReceivingAccess:cdk.listMapper(cdk.stringToCloudFormation)(properties.resourcesReceivingAccess),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnBucketPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessRules","AccessRules",properties.AccessRules!=null?CfnBucketAccessRulesPropertyFromCloudFormation(properties.AccessRules):void 0),ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("bundleId","BundleId",properties.BundleId!=null?cfn_parse.FromCloudFormation.getString(properties.BundleId):void 0),ret.addPropertyResult("objectVersioning","ObjectVersioning",properties.ObjectVersioning!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ObjectVersioning):void 0),ret.addPropertyResult("readOnlyAccessAccounts","ReadOnlyAccessAccounts",properties.ReadOnlyAccessAccounts!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ReadOnlyAccessAccounts):void 0),ret.addPropertyResult("resourcesReceivingAccess","ResourcesReceivingAccess",properties.ResourcesReceivingAccess!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ResourcesReceivingAccess):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnCertificate extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCertificatePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCertificate(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCertificate.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnCertificateProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCertificate),error}cdk.requireProperty(props,"certificateName",this),cdk.requireProperty(props,"domainName",this),this.attrCertificateArn=cdk.Token.asString(this.getAtt("CertificateArn",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.certificateName=props.certificateName,this.domainName=props.domainName,this.subjectAlternativeNames=props.subjectAlternativeNames,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Certificate",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{certificateName:this.certificateName,domainName:this.domainName,subjectAlternativeNames:this.subjectAlternativeNames,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCertificate.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCertificatePropsToCloudFormation(props)}}exports.CfnCertificate=CfnCertificate,_c=JSII_RTTI_SYMBOL_1,CfnCertificate[_c]={fqn:"aws-cdk-lib.aws_lightsail.CfnCertificate",version:"2.94.0"},CfnCertificate.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Certificate";function CfnCertificatePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificateName",cdk.requiredValidator)(properties.certificateName)),errors.collect(cdk.propertyValidator("certificateName",cdk.validateString)(properties.certificateName)),errors.collect(cdk.propertyValidator("domainName",cdk.requiredValidator)(properties.domainName)),errors.collect(cdk.propertyValidator("domainName",cdk.validateString)(properties.domainName)),errors.collect(cdk.propertyValidator("subjectAlternativeNames",cdk.listValidator(cdk.validateString))(properties.subjectAlternativeNames)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnCertificateProps"')}function convertCfnCertificatePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCertificatePropsValidator(properties).assertSuccess(),{CertificateName:cdk.stringToCloudFormation(properties.certificateName),DomainName:cdk.stringToCloudFormation(properties.domainName),SubjectAlternativeNames:cdk.listMapper(cdk.stringToCloudFormation)(properties.subjectAlternativeNames),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnCertificatePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateName","CertificateName",properties.CertificateName!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateName):void 0),ret.addPropertyResult("domainName","DomainName",properties.DomainName!=null?cfn_parse.FromCloudFormation.getString(properties.DomainName):void 0),ret.addPropertyResult("subjectAlternativeNames","SubjectAlternativeNames",properties.SubjectAlternativeNames!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubjectAlternativeNames):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnContainer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnContainerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnContainer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnContainer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnContainerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnContainer),error}cdk.requireProperty(props,"power",this),cdk.requireProperty(props,"scale",this),cdk.requireProperty(props,"serviceName",this),this.attrContainerArn=cdk.Token.asString(this.getAtt("ContainerArn",cdk.ResolutionTypeHint.STRING)),this.attrUrl=cdk.Token.asString(this.getAtt("Url",cdk.ResolutionTypeHint.STRING)),this.containerServiceDeployment=props.containerServiceDeployment,this.isDisabled=props.isDisabled,this.power=props.power,this.publicDomainNames=props.publicDomainNames,this.scale=props.scale,this.serviceName=props.serviceName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Container",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{containerServiceDeployment:this.containerServiceDeployment,isDisabled:this.isDisabled,power:this.power,publicDomainNames:this.publicDomainNames,scale:this.scale,serviceName:this.serviceName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnContainer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnContainerPropsToCloudFormation(props)}}exports.CfnContainer=CfnContainer,_d=JSII_RTTI_SYMBOL_1,CfnContainer[_d]={fqn:"aws-cdk-lib.aws_lightsail.CfnContainer",version:"2.94.0"},CfnContainer.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Container";function CfnContainerPublicDomainNamePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificateName",cdk.validateString)(properties.certificateName)),errors.collect(cdk.propertyValidator("domainNames",cdk.listValidator(cdk.validateString))(properties.domainNames)),errors.wrap('supplied properties not correct for "PublicDomainNameProperty"')}function convertCfnContainerPublicDomainNamePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerPublicDomainNamePropertyValidator(properties).assertSuccess(),{CertificateName:cdk.stringToCloudFormation(properties.certificateName),DomainNames:cdk.listMapper(cdk.stringToCloudFormation)(properties.domainNames)}):properties}function CfnContainerPublicDomainNamePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateName","CertificateName",properties.CertificateName!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateName):void 0),ret.addPropertyResult("domainNames","DomainNames",properties.DomainNames!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DomainNames):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerEnvironmentVariablePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.collect(cdk.propertyValidator("variable",cdk.validateString)(properties.variable)),errors.wrap('supplied properties not correct for "EnvironmentVariableProperty"')}function convertCfnContainerEnvironmentVariablePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerEnvironmentVariablePropertyValidator(properties).assertSuccess(),{Value:cdk.stringToCloudFormation(properties.value),Variable:cdk.stringToCloudFormation(properties.variable)}):properties}function CfnContainerEnvironmentVariablePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addPropertyResult("variable","Variable",properties.Variable!=null?cfn_parse.FromCloudFormation.getString(properties.Variable):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerPortInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.wrap('supplied properties not correct for "PortInfoProperty"')}function convertCfnContainerPortInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerPortInfoPropertyValidator(properties).assertSuccess(),{Port:cdk.stringToCloudFormation(properties.port),Protocol:cdk.stringToCloudFormation(properties.protocol)}):properties}function CfnContainerPortInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerContainerPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("command",cdk.listValidator(cdk.validateString))(properties.command)),errors.collect(cdk.propertyValidator("containerName",cdk.validateString)(properties.containerName)),errors.collect(cdk.propertyValidator("environment",cdk.listValidator(CfnContainerEnvironmentVariablePropertyValidator))(properties.environment)),errors.collect(cdk.propertyValidator("image",cdk.validateString)(properties.image)),errors.collect(cdk.propertyValidator("ports",cdk.listValidator(CfnContainerPortInfoPropertyValidator))(properties.ports)),errors.wrap('supplied properties not correct for "ContainerProperty"')}function convertCfnContainerContainerPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerContainerPropertyValidator(properties).assertSuccess(),{Command:cdk.listMapper(cdk.stringToCloudFormation)(properties.command),ContainerName:cdk.stringToCloudFormation(properties.containerName),Environment:cdk.listMapper(convertCfnContainerEnvironmentVariablePropertyToCloudFormation)(properties.environment),Image:cdk.stringToCloudFormation(properties.image),Ports:cdk.listMapper(convertCfnContainerPortInfoPropertyToCloudFormation)(properties.ports)}):properties}function CfnContainerContainerPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("command","Command",properties.Command!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Command):void 0),ret.addPropertyResult("containerName","ContainerName",properties.ContainerName!=null?cfn_parse.FromCloudFormation.getString(properties.ContainerName):void 0),ret.addPropertyResult("environment","Environment",properties.Environment!=null?cfn_parse.FromCloudFormation.getArray(CfnContainerEnvironmentVariablePropertyFromCloudFormation)(properties.Environment):void 0),ret.addPropertyResult("image","Image",properties.Image!=null?cfn_parse.FromCloudFormation.getString(properties.Image):void 0),ret.addPropertyResult("ports","Ports",properties.Ports!=null?cfn_parse.FromCloudFormation.getArray(CfnContainerPortInfoPropertyFromCloudFormation)(properties.Ports):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerHealthCheckConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthyThreshold",cdk.validateNumber)(properties.healthyThreshold)),errors.collect(cdk.propertyValidator("intervalSeconds",cdk.validateNumber)(properties.intervalSeconds)),errors.collect(cdk.propertyValidator("path",cdk.validateString)(properties.path)),errors.collect(cdk.propertyValidator("successCodes",cdk.validateString)(properties.successCodes)),errors.collect(cdk.propertyValidator("timeoutSeconds",cdk.validateNumber)(properties.timeoutSeconds)),errors.collect(cdk.propertyValidator("unhealthyThreshold",cdk.validateNumber)(properties.unhealthyThreshold)),errors.wrap('supplied properties not correct for "HealthCheckConfigProperty"')}function convertCfnContainerHealthCheckConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerHealthCheckConfigPropertyValidator(properties).assertSuccess(),{HealthyThreshold:cdk.numberToCloudFormation(properties.healthyThreshold),IntervalSeconds:cdk.numberToCloudFormation(properties.intervalSeconds),Path:cdk.stringToCloudFormation(properties.path),SuccessCodes:cdk.stringToCloudFormation(properties.successCodes),TimeoutSeconds:cdk.numberToCloudFormation(properties.timeoutSeconds),UnhealthyThreshold:cdk.numberToCloudFormation(properties.unhealthyThreshold)}):properties}function CfnContainerHealthCheckConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthyThreshold","HealthyThreshold",properties.HealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.HealthyThreshold):void 0),ret.addPropertyResult("intervalSeconds","IntervalSeconds",properties.IntervalSeconds!=null?cfn_parse.FromCloudFormation.getNumber(properties.IntervalSeconds):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse.FromCloudFormation.getString(properties.Path):void 0),ret.addPropertyResult("successCodes","SuccessCodes",properties.SuccessCodes!=null?cfn_parse.FromCloudFormation.getString(properties.SuccessCodes):void 0),ret.addPropertyResult("timeoutSeconds","TimeoutSeconds",properties.TimeoutSeconds!=null?cfn_parse.FromCloudFormation.getNumber(properties.TimeoutSeconds):void 0),ret.addPropertyResult("unhealthyThreshold","UnhealthyThreshold",properties.UnhealthyThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.UnhealthyThreshold):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerPublicEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("containerName",cdk.validateString)(properties.containerName)),errors.collect(cdk.propertyValidator("containerPort",cdk.validateNumber)(properties.containerPort)),errors.collect(cdk.propertyValidator("healthCheckConfig",CfnContainerHealthCheckConfigPropertyValidator)(properties.healthCheckConfig)),errors.wrap('supplied properties not correct for "PublicEndpointProperty"')}function convertCfnContainerPublicEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerPublicEndpointPropertyValidator(properties).assertSuccess(),{ContainerName:cdk.stringToCloudFormation(properties.containerName),ContainerPort:cdk.numberToCloudFormation(properties.containerPort),HealthCheckConfig:convertCfnContainerHealthCheckConfigPropertyToCloudFormation(properties.healthCheckConfig)}):properties}function CfnContainerPublicEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("containerName","ContainerName",properties.ContainerName!=null?cfn_parse.FromCloudFormation.getString(properties.ContainerName):void 0),ret.addPropertyResult("containerPort","ContainerPort",properties.ContainerPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.ContainerPort):void 0),ret.addPropertyResult("healthCheckConfig","HealthCheckConfig",properties.HealthCheckConfig!=null?CfnContainerHealthCheckConfigPropertyFromCloudFormation(properties.HealthCheckConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerContainerServiceDeploymentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("containers",cdk.listValidator(CfnContainerContainerPropertyValidator))(properties.containers)),errors.collect(cdk.propertyValidator("publicEndpoint",CfnContainerPublicEndpointPropertyValidator)(properties.publicEndpoint)),errors.wrap('supplied properties not correct for "ContainerServiceDeploymentProperty"')}function convertCfnContainerContainerServiceDeploymentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerContainerServiceDeploymentPropertyValidator(properties).assertSuccess(),{Containers:cdk.listMapper(convertCfnContainerContainerPropertyToCloudFormation)(properties.containers),PublicEndpoint:convertCfnContainerPublicEndpointPropertyToCloudFormation(properties.publicEndpoint)}):properties}function CfnContainerContainerServiceDeploymentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("containers","Containers",properties.Containers!=null?cfn_parse.FromCloudFormation.getArray(CfnContainerContainerPropertyFromCloudFormation)(properties.Containers):void 0),ret.addPropertyResult("publicEndpoint","PublicEndpoint",properties.PublicEndpoint!=null?CfnContainerPublicEndpointPropertyFromCloudFormation(properties.PublicEndpoint):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnContainerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("containerServiceDeployment",CfnContainerContainerServiceDeploymentPropertyValidator)(properties.containerServiceDeployment)),errors.collect(cdk.propertyValidator("isDisabled",cdk.validateBoolean)(properties.isDisabled)),errors.collect(cdk.propertyValidator("power",cdk.requiredValidator)(properties.power)),errors.collect(cdk.propertyValidator("power",cdk.validateString)(properties.power)),errors.collect(cdk.propertyValidator("publicDomainNames",cdk.listValidator(CfnContainerPublicDomainNamePropertyValidator))(properties.publicDomainNames)),errors.collect(cdk.propertyValidator("scale",cdk.requiredValidator)(properties.scale)),errors.collect(cdk.propertyValidator("scale",cdk.validateNumber)(properties.scale)),errors.collect(cdk.propertyValidator("serviceName",cdk.requiredValidator)(properties.serviceName)),errors.collect(cdk.propertyValidator("serviceName",cdk.validateString)(properties.serviceName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnContainerProps"')}function convertCfnContainerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnContainerPropsValidator(properties).assertSuccess(),{ContainerServiceDeployment:convertCfnContainerContainerServiceDeploymentPropertyToCloudFormation(properties.containerServiceDeployment),IsDisabled:cdk.booleanToCloudFormation(properties.isDisabled),Power:cdk.stringToCloudFormation(properties.power),PublicDomainNames:cdk.listMapper(convertCfnContainerPublicDomainNamePropertyToCloudFormation)(properties.publicDomainNames),Scale:cdk.numberToCloudFormation(properties.scale),ServiceName:cdk.stringToCloudFormation(properties.serviceName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnContainerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("containerServiceDeployment","ContainerServiceDeployment",properties.ContainerServiceDeployment!=null?CfnContainerContainerServiceDeploymentPropertyFromCloudFormation(properties.ContainerServiceDeployment):void 0),ret.addPropertyResult("isDisabled","IsDisabled",properties.IsDisabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsDisabled):void 0),ret.addPropertyResult("power","Power",properties.Power!=null?cfn_parse.FromCloudFormation.getString(properties.Power):void 0),ret.addPropertyResult("publicDomainNames","PublicDomainNames",properties.PublicDomainNames!=null?cfn_parse.FromCloudFormation.getArray(CfnContainerPublicDomainNamePropertyFromCloudFormation)(properties.PublicDomainNames):void 0),ret.addPropertyResult("scale","Scale",properties.Scale!=null?cfn_parse.FromCloudFormation.getNumber(properties.Scale):void 0),ret.addPropertyResult("serviceName","ServiceName",properties.ServiceName!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDatabase extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDatabasePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDatabase(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDatabase.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnDatabaseProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDatabase),error}cdk.requireProperty(props,"masterDatabaseName",this),cdk.requireProperty(props,"masterUsername",this),cdk.requireProperty(props,"relationalDatabaseBlueprintId",this),cdk.requireProperty(props,"relationalDatabaseBundleId",this),cdk.requireProperty(props,"relationalDatabaseName",this),this.attrDatabaseArn=cdk.Token.asString(this.getAtt("DatabaseArn",cdk.ResolutionTypeHint.STRING)),this.availabilityZone=props.availabilityZone,this.backupRetention=props.backupRetention,this.caCertificateIdentifier=props.caCertificateIdentifier,this.masterDatabaseName=props.masterDatabaseName,this.masterUsername=props.masterUsername,this.masterUserPassword=props.masterUserPassword,this.preferredBackupWindow=props.preferredBackupWindow,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.publiclyAccessible=props.publiclyAccessible,this.relationalDatabaseBlueprintId=props.relationalDatabaseBlueprintId,this.relationalDatabaseBundleId=props.relationalDatabaseBundleId,this.relationalDatabaseName=props.relationalDatabaseName,this.relationalDatabaseParameters=props.relationalDatabaseParameters,this.rotateMasterUserPassword=props.rotateMasterUserPassword,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Database",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{availabilityZone:this.availabilityZone,backupRetention:this.backupRetention,caCertificateIdentifier:this.caCertificateIdentifier,masterDatabaseName:this.masterDatabaseName,masterUsername:this.masterUsername,masterUserPassword:this.masterUserPassword,preferredBackupWindow:this.preferredBackupWindow,preferredMaintenanceWindow:this.preferredMaintenanceWindow,publiclyAccessible:this.publiclyAccessible,relationalDatabaseBlueprintId:this.relationalDatabaseBlueprintId,relationalDatabaseBundleId:this.relationalDatabaseBundleId,relationalDatabaseName:this.relationalDatabaseName,relationalDatabaseParameters:this.relationalDatabaseParameters,rotateMasterUserPassword:this.rotateMasterUserPassword,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDatabase.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDatabasePropsToCloudFormation(props)}}exports.CfnDatabase=CfnDatabase,_e=JSII_RTTI_SYMBOL_1,CfnDatabase[_e]={fqn:"aws-cdk-lib.aws_lightsail.CfnDatabase",version:"2.94.0"},CfnDatabase.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Database";function CfnDatabaseRelationalDatabaseParameterPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowedValues",cdk.validateString)(properties.allowedValues)),errors.collect(cdk.propertyValidator("applyMethod",cdk.validateString)(properties.applyMethod)),errors.collect(cdk.propertyValidator("applyType",cdk.validateString)(properties.applyType)),errors.collect(cdk.propertyValidator("dataType",cdk.validateString)(properties.dataType)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("isModifiable",cdk.validateBoolean)(properties.isModifiable)),errors.collect(cdk.propertyValidator("parameterName",cdk.validateString)(properties.parameterName)),errors.collect(cdk.propertyValidator("parameterValue",cdk.validateString)(properties.parameterValue)),errors.wrap('supplied properties not correct for "RelationalDatabaseParameterProperty"')}function convertCfnDatabaseRelationalDatabaseParameterPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDatabaseRelationalDatabaseParameterPropertyValidator(properties).assertSuccess(),{AllowedValues:cdk.stringToCloudFormation(properties.allowedValues),ApplyMethod:cdk.stringToCloudFormation(properties.applyMethod),ApplyType:cdk.stringToCloudFormation(properties.applyType),DataType:cdk.stringToCloudFormation(properties.dataType),Description:cdk.stringToCloudFormation(properties.description),IsModifiable:cdk.booleanToCloudFormation(properties.isModifiable),ParameterName:cdk.stringToCloudFormation(properties.parameterName),ParameterValue:cdk.stringToCloudFormation(properties.parameterValue)}):properties}function CfnDatabaseRelationalDatabaseParameterPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowedValues","AllowedValues",properties.AllowedValues!=null?cfn_parse.FromCloudFormation.getString(properties.AllowedValues):void 0),ret.addPropertyResult("applyMethod","ApplyMethod",properties.ApplyMethod!=null?cfn_parse.FromCloudFormation.getString(properties.ApplyMethod):void 0),ret.addPropertyResult("applyType","ApplyType",properties.ApplyType!=null?cfn_parse.FromCloudFormation.getString(properties.ApplyType):void 0),ret.addPropertyResult("dataType","DataType",properties.DataType!=null?cfn_parse.FromCloudFormation.getString(properties.DataType):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("isModifiable","IsModifiable",properties.IsModifiable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsModifiable):void 0),ret.addPropertyResult("parameterName","ParameterName",properties.ParameterName!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterName):void 0),ret.addPropertyResult("parameterValue","ParameterValue",properties.ParameterValue!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterValue):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDatabasePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("backupRetention",cdk.validateBoolean)(properties.backupRetention)),errors.collect(cdk.propertyValidator("caCertificateIdentifier",cdk.validateString)(properties.caCertificateIdentifier)),errors.collect(cdk.propertyValidator("masterDatabaseName",cdk.requiredValidator)(properties.masterDatabaseName)),errors.collect(cdk.propertyValidator("masterDatabaseName",cdk.validateString)(properties.masterDatabaseName)),errors.collect(cdk.propertyValidator("masterUserPassword",cdk.validateString)(properties.masterUserPassword)),errors.collect(cdk.propertyValidator("masterUsername",cdk.requiredValidator)(properties.masterUsername)),errors.collect(cdk.propertyValidator("masterUsername",cdk.validateString)(properties.masterUsername)),errors.collect(cdk.propertyValidator("preferredBackupWindow",cdk.validateString)(properties.preferredBackupWindow)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("relationalDatabaseBlueprintId",cdk.requiredValidator)(properties.relationalDatabaseBlueprintId)),errors.collect(cdk.propertyValidator("relationalDatabaseBlueprintId",cdk.validateString)(properties.relationalDatabaseBlueprintId)),errors.collect(cdk.propertyValidator("relationalDatabaseBundleId",cdk.requiredValidator)(properties.relationalDatabaseBundleId)),errors.collect(cdk.propertyValidator("relationalDatabaseBundleId",cdk.validateString)(properties.relationalDatabaseBundleId)),errors.collect(cdk.propertyValidator("relationalDatabaseName",cdk.requiredValidator)(properties.relationalDatabaseName)),errors.collect(cdk.propertyValidator("relationalDatabaseName",cdk.validateString)(properties.relationalDatabaseName)),errors.collect(cdk.propertyValidator("relationalDatabaseParameters",cdk.listValidator(CfnDatabaseRelationalDatabaseParameterPropertyValidator))(properties.relationalDatabaseParameters)),errors.collect(cdk.propertyValidator("rotateMasterUserPassword",cdk.validateBoolean)(properties.rotateMasterUserPassword)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDatabaseProps"')}function convertCfnDatabasePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDatabasePropsValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),BackupRetention:cdk.booleanToCloudFormation(properties.backupRetention),CaCertificateIdentifier:cdk.stringToCloudFormation(properties.caCertificateIdentifier),MasterDatabaseName:cdk.stringToCloudFormation(properties.masterDatabaseName),MasterUserPassword:cdk.stringToCloudFormation(properties.masterUserPassword),MasterUsername:cdk.stringToCloudFormation(properties.masterUsername),PreferredBackupWindow:cdk.stringToCloudFormation(properties.preferredBackupWindow),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),RelationalDatabaseBlueprintId:cdk.stringToCloudFormation(properties.relationalDatabaseBlueprintId),RelationalDatabaseBundleId:cdk.stringToCloudFormation(properties.relationalDatabaseBundleId),RelationalDatabaseName:cdk.stringToCloudFormation(properties.relationalDatabaseName),RelationalDatabaseParameters:cdk.listMapper(convertCfnDatabaseRelationalDatabaseParameterPropertyToCloudFormation)(properties.relationalDatabaseParameters),RotateMasterUserPassword:cdk.booleanToCloudFormation(properties.rotateMasterUserPassword),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDatabasePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("backupRetention","BackupRetention",properties.BackupRetention!=null?cfn_parse.FromCloudFormation.getBoolean(properties.BackupRetention):void 0),ret.addPropertyResult("caCertificateIdentifier","CaCertificateIdentifier",properties.CaCertificateIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.CaCertificateIdentifier):void 0),ret.addPropertyResult("masterDatabaseName","MasterDatabaseName",properties.MasterDatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.MasterDatabaseName):void 0),ret.addPropertyResult("masterUsername","MasterUsername",properties.MasterUsername!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUsername):void 0),ret.addPropertyResult("masterUserPassword","MasterUserPassword",properties.MasterUserPassword!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword):void 0),ret.addPropertyResult("preferredBackupWindow","PreferredBackupWindow",properties.PreferredBackupWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredBackupWindow):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",properties.PubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible):void 0),ret.addPropertyResult("relationalDatabaseBlueprintId","RelationalDatabaseBlueprintId",properties.RelationalDatabaseBlueprintId!=null?cfn_parse.FromCloudFormation.getString(properties.RelationalDatabaseBlueprintId):void 0),ret.addPropertyResult("relationalDatabaseBundleId","RelationalDatabaseBundleId",properties.RelationalDatabaseBundleId!=null?cfn_parse.FromCloudFormation.getString(properties.RelationalDatabaseBundleId):void 0),ret.addPropertyResult("relationalDatabaseName","RelationalDatabaseName",properties.RelationalDatabaseName!=null?cfn_parse.FromCloudFormation.getString(properties.RelationalDatabaseName):void 0),ret.addPropertyResult("relationalDatabaseParameters","RelationalDatabaseParameters",properties.RelationalDatabaseParameters!=null?cfn_parse.FromCloudFormation.getArray(CfnDatabaseRelationalDatabaseParameterPropertyFromCloudFormation)(properties.RelationalDatabaseParameters):void 0),ret.addPropertyResult("rotateMasterUserPassword","RotateMasterUserPassword",properties.RotateMasterUserPassword!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RotateMasterUserPassword):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDisk extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDiskPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDisk(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDisk.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnDiskProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDisk),error}cdk.requireProperty(props,"diskName",this),cdk.requireProperty(props,"sizeInGb",this),this.attrAttachedTo=cdk.Token.asString(this.getAtt("AttachedTo",cdk.ResolutionTypeHint.STRING)),this.attrAttachmentState=cdk.Token.asString(this.getAtt("AttachmentState",cdk.ResolutionTypeHint.STRING)),this.attrDiskArn=cdk.Token.asString(this.getAtt("DiskArn",cdk.ResolutionTypeHint.STRING)),this.attrIops=cdk.Token.asNumber(this.getAtt("Iops",cdk.ResolutionTypeHint.NUMBER)),this.attrIsAttached=this.getAtt("IsAttached"),this.attrLocationAvailabilityZone=cdk.Token.asString(this.getAtt("Location.AvailabilityZone",cdk.ResolutionTypeHint.STRING)),this.attrLocationRegionName=cdk.Token.asString(this.getAtt("Location.RegionName",cdk.ResolutionTypeHint.STRING)),this.attrPath=cdk.Token.asString(this.getAtt("Path",cdk.ResolutionTypeHint.STRING)),this.attrResourceType=cdk.Token.asString(this.getAtt("ResourceType",cdk.ResolutionTypeHint.STRING)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.attrSupportCode=cdk.Token.asString(this.getAtt("SupportCode",cdk.ResolutionTypeHint.STRING)),this.addOns=props.addOns,this.availabilityZone=props.availabilityZone,this.diskName=props.diskName,this.location=props.location,this.sizeInGb=props.sizeInGb,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Disk",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{addOns:this.addOns,availabilityZone:this.availabilityZone,diskName:this.diskName,location:this.location,sizeInGb:this.sizeInGb,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDisk.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDiskPropsToCloudFormation(props)}}exports.CfnDisk=CfnDisk,_f=JSII_RTTI_SYMBOL_1,CfnDisk[_f]={fqn:"aws-cdk-lib.aws_lightsail.CfnDisk",version:"2.94.0"},CfnDisk.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Disk";function CfnDiskLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("regionName",cdk.validateString)(properties.regionName)),errors.wrap('supplied properties not correct for "LocationProperty"')}function convertCfnDiskLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDiskLocationPropertyValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),RegionName:cdk.stringToCloudFormation(properties.regionName)}):properties}function CfnDiskLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("regionName","RegionName",properties.RegionName!=null?cfn_parse.FromCloudFormation.getString(properties.RegionName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDiskAutoSnapshotAddOnPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("snapshotTimeOfDay",cdk.validateString)(properties.snapshotTimeOfDay)),errors.wrap('supplied properties not correct for "AutoSnapshotAddOnProperty"')}function convertCfnDiskAutoSnapshotAddOnPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDiskAutoSnapshotAddOnPropertyValidator(properties).assertSuccess(),{SnapshotTimeOfDay:cdk.stringToCloudFormation(properties.snapshotTimeOfDay)}):properties}function CfnDiskAutoSnapshotAddOnPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("snapshotTimeOfDay","SnapshotTimeOfDay",properties.SnapshotTimeOfDay!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotTimeOfDay):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDiskAddOnPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addOnType",cdk.requiredValidator)(properties.addOnType)),errors.collect(cdk.propertyValidator("addOnType",cdk.validateString)(properties.addOnType)),errors.collect(cdk.propertyValidator("autoSnapshotAddOnRequest",CfnDiskAutoSnapshotAddOnPropertyValidator)(properties.autoSnapshotAddOnRequest)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.wrap('supplied properties not correct for "AddOnProperty"')}function convertCfnDiskAddOnPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDiskAddOnPropertyValidator(properties).assertSuccess(),{AddOnType:cdk.stringToCloudFormation(properties.addOnType),AutoSnapshotAddOnRequest:convertCfnDiskAutoSnapshotAddOnPropertyToCloudFormation(properties.autoSnapshotAddOnRequest),Status:cdk.stringToCloudFormation(properties.status)}):properties}function CfnDiskAddOnPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addOnType","AddOnType",properties.AddOnType!=null?cfn_parse.FromCloudFormation.getString(properties.AddOnType):void 0),ret.addPropertyResult("autoSnapshotAddOnRequest","AutoSnapshotAddOnRequest",properties.AutoSnapshotAddOnRequest!=null?CfnDiskAutoSnapshotAddOnPropertyFromCloudFormation(properties.AutoSnapshotAddOnRequest):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDiskPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addOns",cdk.listValidator(CfnDiskAddOnPropertyValidator))(properties.addOns)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("diskName",cdk.requiredValidator)(properties.diskName)),errors.collect(cdk.propertyValidator("diskName",cdk.validateString)(properties.diskName)),errors.collect(cdk.propertyValidator("location",CfnDiskLocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("sizeInGb",cdk.requiredValidator)(properties.sizeInGb)),errors.collect(cdk.propertyValidator("sizeInGb",cdk.validateNumber)(properties.sizeInGb)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDiskProps"')}function convertCfnDiskPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDiskPropsValidator(properties).assertSuccess(),{AddOns:cdk.listMapper(convertCfnDiskAddOnPropertyToCloudFormation)(properties.addOns),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),DiskName:cdk.stringToCloudFormation(properties.diskName),Location:convertCfnDiskLocationPropertyToCloudFormation(properties.location),SizeInGb:cdk.numberToCloudFormation(properties.sizeInGb),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDiskPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addOns","AddOns",properties.AddOns!=null?cfn_parse.FromCloudFormation.getArray(CfnDiskAddOnPropertyFromCloudFormation)(properties.AddOns):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("diskName","DiskName",properties.DiskName!=null?cfn_parse.FromCloudFormation.getString(properties.DiskName):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnDiskLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("sizeInGb","SizeInGb",properties.SizeInGb!=null?cfn_parse.FromCloudFormation.getNumber(properties.SizeInGb):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDistribution extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDistributionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDistribution(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDistribution.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnDistributionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDistribution),error}cdk.requireProperty(props,"bundleId",this),cdk.requireProperty(props,"defaultCacheBehavior",this),cdk.requireProperty(props,"distributionName",this),cdk.requireProperty(props,"origin",this),this.attrAbleToUpdateBundle=this.getAtt("AbleToUpdateBundle"),this.attrDistributionArn=cdk.Token.asString(this.getAtt("DistributionArn",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.bundleId=props.bundleId,this.cacheBehaviors=props.cacheBehaviors,this.cacheBehaviorSettings=props.cacheBehaviorSettings,this.certificateName=props.certificateName,this.defaultCacheBehavior=props.defaultCacheBehavior,this.distributionName=props.distributionName,this.ipAddressType=props.ipAddressType,this.isEnabled=props.isEnabled,this.origin=props.origin,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Distribution",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{bundleId:this.bundleId,cacheBehaviors:this.cacheBehaviors,cacheBehaviorSettings:this.cacheBehaviorSettings,certificateName:this.certificateName,defaultCacheBehavior:this.defaultCacheBehavior,distributionName:this.distributionName,ipAddressType:this.ipAddressType,isEnabled:this.isEnabled,origin:this.origin,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDistribution.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDistributionPropsToCloudFormation(props)}}exports.CfnDistribution=CfnDistribution,_g=JSII_RTTI_SYMBOL_1,CfnDistribution[_g]={fqn:"aws-cdk-lib.aws_lightsail.CfnDistribution",version:"2.94.0"},CfnDistribution.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Distribution";function CfnDistributionCacheBehaviorPerPathPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("behavior",cdk.validateString)(properties.behavior)),errors.collect(cdk.propertyValidator("path",cdk.validateString)(properties.path)),errors.wrap('supplied properties not correct for "CacheBehaviorPerPathProperty"')}function convertCfnDistributionCacheBehaviorPerPathPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionCacheBehaviorPerPathPropertyValidator(properties).assertSuccess(),{Behavior:cdk.stringToCloudFormation(properties.behavior),Path:cdk.stringToCloudFormation(properties.path)}):properties}function CfnDistributionCacheBehaviorPerPathPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("behavior","Behavior",properties.Behavior!=null?cfn_parse.FromCloudFormation.getString(properties.Behavior):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse.FromCloudFormation.getString(properties.Path):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionCookieObjectPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cookiesAllowList",cdk.listValidator(cdk.validateString))(properties.cookiesAllowList)),errors.collect(cdk.propertyValidator("option",cdk.validateString)(properties.option)),errors.wrap('supplied properties not correct for "CookieObjectProperty"')}function convertCfnDistributionCookieObjectPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionCookieObjectPropertyValidator(properties).assertSuccess(),{CookiesAllowList:cdk.listMapper(cdk.stringToCloudFormation)(properties.cookiesAllowList),Option:cdk.stringToCloudFormation(properties.option)}):properties}function CfnDistributionCookieObjectPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cookiesAllowList","CookiesAllowList",properties.CookiesAllowList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CookiesAllowList):void 0),ret.addPropertyResult("option","Option",properties.Option!=null?cfn_parse.FromCloudFormation.getString(properties.Option):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionHeaderObjectPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("headersAllowList",cdk.listValidator(cdk.validateString))(properties.headersAllowList)),errors.collect(cdk.propertyValidator("option",cdk.validateString)(properties.option)),errors.wrap('supplied properties not correct for "HeaderObjectProperty"')}function convertCfnDistributionHeaderObjectPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionHeaderObjectPropertyValidator(properties).assertSuccess(),{HeadersAllowList:cdk.listMapper(cdk.stringToCloudFormation)(properties.headersAllowList),Option:cdk.stringToCloudFormation(properties.option)}):properties}function CfnDistributionHeaderObjectPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("headersAllowList","HeadersAllowList",properties.HeadersAllowList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.HeadersAllowList):void 0),ret.addPropertyResult("option","Option",properties.Option!=null?cfn_parse.FromCloudFormation.getString(properties.Option):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionQueryStringObjectPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("option",cdk.validateBoolean)(properties.option)),errors.collect(cdk.propertyValidator("queryStringsAllowList",cdk.listValidator(cdk.validateString))(properties.queryStringsAllowList)),errors.wrap('supplied properties not correct for "QueryStringObjectProperty"')}function convertCfnDistributionQueryStringObjectPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionQueryStringObjectPropertyValidator(properties).assertSuccess(),{Option:cdk.booleanToCloudFormation(properties.option),QueryStringsAllowList:cdk.listMapper(cdk.stringToCloudFormation)(properties.queryStringsAllowList)}):properties}function CfnDistributionQueryStringObjectPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("option","Option",properties.Option!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Option):void 0),ret.addPropertyResult("queryStringsAllowList","QueryStringsAllowList",properties.QueryStringsAllowList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.QueryStringsAllowList):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionCacheSettingsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowedHttpMethods",cdk.validateString)(properties.allowedHttpMethods)),errors.collect(cdk.propertyValidator("cachedHttpMethods",cdk.validateString)(properties.cachedHttpMethods)),errors.collect(cdk.propertyValidator("defaultTtl",cdk.validateNumber)(properties.defaultTtl)),errors.collect(cdk.propertyValidator("forwardedCookies",CfnDistributionCookieObjectPropertyValidator)(properties.forwardedCookies)),errors.collect(cdk.propertyValidator("forwardedHeaders",CfnDistributionHeaderObjectPropertyValidator)(properties.forwardedHeaders)),errors.collect(cdk.propertyValidator("forwardedQueryStrings",CfnDistributionQueryStringObjectPropertyValidator)(properties.forwardedQueryStrings)),errors.collect(cdk.propertyValidator("maximumTtl",cdk.validateNumber)(properties.maximumTtl)),errors.collect(cdk.propertyValidator("minimumTtl",cdk.validateNumber)(properties.minimumTtl)),errors.wrap('supplied properties not correct for "CacheSettingsProperty"')}function convertCfnDistributionCacheSettingsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionCacheSettingsPropertyValidator(properties).assertSuccess(),{AllowedHTTPMethods:cdk.stringToCloudFormation(properties.allowedHttpMethods),CachedHTTPMethods:cdk.stringToCloudFormation(properties.cachedHttpMethods),DefaultTTL:cdk.numberToCloudFormation(properties.defaultTtl),ForwardedCookies:convertCfnDistributionCookieObjectPropertyToCloudFormation(properties.forwardedCookies),ForwardedHeaders:convertCfnDistributionHeaderObjectPropertyToCloudFormation(properties.forwardedHeaders),ForwardedQueryStrings:convertCfnDistributionQueryStringObjectPropertyToCloudFormation(properties.forwardedQueryStrings),MaximumTTL:cdk.numberToCloudFormation(properties.maximumTtl),MinimumTTL:cdk.numberToCloudFormation(properties.minimumTtl)}):properties}function CfnDistributionCacheSettingsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowedHttpMethods","AllowedHTTPMethods",properties.AllowedHTTPMethods!=null?cfn_parse.FromCloudFormation.getString(properties.AllowedHTTPMethods):void 0),ret.addPropertyResult("cachedHttpMethods","CachedHTTPMethods",properties.CachedHTTPMethods!=null?cfn_parse.FromCloudFormation.getString(properties.CachedHTTPMethods):void 0),ret.addPropertyResult("defaultTtl","DefaultTTL",properties.DefaultTTL!=null?cfn_parse.FromCloudFormation.getNumber(properties.DefaultTTL):void 0),ret.addPropertyResult("forwardedCookies","ForwardedCookies",properties.ForwardedCookies!=null?CfnDistributionCookieObjectPropertyFromCloudFormation(properties.ForwardedCookies):void 0),ret.addPropertyResult("forwardedHeaders","ForwardedHeaders",properties.ForwardedHeaders!=null?CfnDistributionHeaderObjectPropertyFromCloudFormation(properties.ForwardedHeaders):void 0),ret.addPropertyResult("forwardedQueryStrings","ForwardedQueryStrings",properties.ForwardedQueryStrings!=null?CfnDistributionQueryStringObjectPropertyFromCloudFormation(properties.ForwardedQueryStrings):void 0),ret.addPropertyResult("maximumTtl","MaximumTTL",properties.MaximumTTL!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaximumTTL):void 0),ret.addPropertyResult("minimumTtl","MinimumTTL",properties.MinimumTTL!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinimumTTL):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionCacheBehaviorPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("behavior",cdk.validateString)(properties.behavior)),errors.wrap('supplied properties not correct for "CacheBehaviorProperty"')}function convertCfnDistributionCacheBehaviorPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionCacheBehaviorPropertyValidator(properties).assertSuccess(),{Behavior:cdk.stringToCloudFormation(properties.behavior)}):properties}function CfnDistributionCacheBehaviorPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("behavior","Behavior",properties.Behavior!=null?cfn_parse.FromCloudFormation.getString(properties.Behavior):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionInputOriginPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("protocolPolicy",cdk.validateString)(properties.protocolPolicy)),errors.collect(cdk.propertyValidator("regionName",cdk.validateString)(properties.regionName)),errors.wrap('supplied properties not correct for "InputOriginProperty"')}function convertCfnDistributionInputOriginPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionInputOriginPropertyValidator(properties).assertSuccess(),{Name:cdk.stringToCloudFormation(properties.name),ProtocolPolicy:cdk.stringToCloudFormation(properties.protocolPolicy),RegionName:cdk.stringToCloudFormation(properties.regionName)}):properties}function CfnDistributionInputOriginPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("protocolPolicy","ProtocolPolicy",properties.ProtocolPolicy!=null?cfn_parse.FromCloudFormation.getString(properties.ProtocolPolicy):void 0),ret.addPropertyResult("regionName","RegionName",properties.RegionName!=null?cfn_parse.FromCloudFormation.getString(properties.RegionName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDistributionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bundleId",cdk.requiredValidator)(properties.bundleId)),errors.collect(cdk.propertyValidator("bundleId",cdk.validateString)(properties.bundleId)),errors.collect(cdk.propertyValidator("cacheBehaviorSettings",CfnDistributionCacheSettingsPropertyValidator)(properties.cacheBehaviorSettings)),errors.collect(cdk.propertyValidator("cacheBehaviors",cdk.listValidator(CfnDistributionCacheBehaviorPerPathPropertyValidator))(properties.cacheBehaviors)),errors.collect(cdk.propertyValidator("certificateName",cdk.validateString)(properties.certificateName)),errors.collect(cdk.propertyValidator("defaultCacheBehavior",cdk.requiredValidator)(properties.defaultCacheBehavior)),errors.collect(cdk.propertyValidator("defaultCacheBehavior",CfnDistributionCacheBehaviorPropertyValidator)(properties.defaultCacheBehavior)),errors.collect(cdk.propertyValidator("distributionName",cdk.requiredValidator)(properties.distributionName)),errors.collect(cdk.propertyValidator("distributionName",cdk.validateString)(properties.distributionName)),errors.collect(cdk.propertyValidator("ipAddressType",cdk.validateString)(properties.ipAddressType)),errors.collect(cdk.propertyValidator("isEnabled",cdk.validateBoolean)(properties.isEnabled)),errors.collect(cdk.propertyValidator("origin",cdk.requiredValidator)(properties.origin)),errors.collect(cdk.propertyValidator("origin",CfnDistributionInputOriginPropertyValidator)(properties.origin)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDistributionProps"')}function convertCfnDistributionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDistributionPropsValidator(properties).assertSuccess(),{BundleId:cdk.stringToCloudFormation(properties.bundleId),CacheBehaviorSettings:convertCfnDistributionCacheSettingsPropertyToCloudFormation(properties.cacheBehaviorSettings),CacheBehaviors:cdk.listMapper(convertCfnDistributionCacheBehaviorPerPathPropertyToCloudFormation)(properties.cacheBehaviors),CertificateName:cdk.stringToCloudFormation(properties.certificateName),DefaultCacheBehavior:convertCfnDistributionCacheBehaviorPropertyToCloudFormation(properties.defaultCacheBehavior),DistributionName:cdk.stringToCloudFormation(properties.distributionName),IpAddressType:cdk.stringToCloudFormation(properties.ipAddressType),IsEnabled:cdk.booleanToCloudFormation(properties.isEnabled),Origin:convertCfnDistributionInputOriginPropertyToCloudFormation(properties.origin),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDistributionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bundleId","BundleId",properties.BundleId!=null?cfn_parse.FromCloudFormation.getString(properties.BundleId):void 0),ret.addPropertyResult("cacheBehaviors","CacheBehaviors",properties.CacheBehaviors!=null?cfn_parse.FromCloudFormation.getArray(CfnDistributionCacheBehaviorPerPathPropertyFromCloudFormation)(properties.CacheBehaviors):void 0),ret.addPropertyResult("cacheBehaviorSettings","CacheBehaviorSettings",properties.CacheBehaviorSettings!=null?CfnDistributionCacheSettingsPropertyFromCloudFormation(properties.CacheBehaviorSettings):void 0),ret.addPropertyResult("certificateName","CertificateName",properties.CertificateName!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateName):void 0),ret.addPropertyResult("defaultCacheBehavior","DefaultCacheBehavior",properties.DefaultCacheBehavior!=null?CfnDistributionCacheBehaviorPropertyFromCloudFormation(properties.DefaultCacheBehavior):void 0),ret.addPropertyResult("distributionName","DistributionName",properties.DistributionName!=null?cfn_parse.FromCloudFormation.getString(properties.DistributionName):void 0),ret.addPropertyResult("ipAddressType","IpAddressType",properties.IpAddressType!=null?cfn_parse.FromCloudFormation.getString(properties.IpAddressType):void 0),ret.addPropertyResult("isEnabled","IsEnabled",properties.IsEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsEnabled):void 0),ret.addPropertyResult("origin","Origin",properties.Origin!=null?CfnDistributionInputOriginPropertyFromCloudFormation(properties.Origin):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnInstance extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnInstancePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnInstance(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnInstance.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnInstanceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnInstance),error}cdk.requireProperty(props,"blueprintId",this),cdk.requireProperty(props,"bundleId",this),cdk.requireProperty(props,"instanceName",this),this.attrHardwareCpuCount=cdk.Token.asNumber(this.getAtt("Hardware.CpuCount",cdk.ResolutionTypeHint.NUMBER)),this.attrHardwareRamSizeInGb=cdk.Token.asNumber(this.getAtt("Hardware.RamSizeInGb",cdk.ResolutionTypeHint.NUMBER)),this.attrInstanceArn=cdk.Token.asString(this.getAtt("InstanceArn",cdk.ResolutionTypeHint.STRING)),this.attrIsStaticIp=this.getAtt("IsStaticIp"),this.attrLocationAvailabilityZone=cdk.Token.asString(this.getAtt("Location.AvailabilityZone",cdk.ResolutionTypeHint.STRING)),this.attrLocationRegionName=cdk.Token.asString(this.getAtt("Location.RegionName",cdk.ResolutionTypeHint.STRING)),this.attrNetworkingMonthlyTransferGbPerMonthAllocated=cdk.Token.asString(this.getAtt("Networking.MonthlyTransfer.GbPerMonthAllocated",cdk.ResolutionTypeHint.STRING)),this.attrPrivateIpAddress=cdk.Token.asString(this.getAtt("PrivateIpAddress",cdk.ResolutionTypeHint.STRING)),this.attrPublicIpAddress=cdk.Token.asString(this.getAtt("PublicIpAddress",cdk.ResolutionTypeHint.STRING)),this.attrResourceType=cdk.Token.asString(this.getAtt("ResourceType",cdk.ResolutionTypeHint.STRING)),this.attrSshKeyName=cdk.Token.asString(this.getAtt("SshKeyName",cdk.ResolutionTypeHint.STRING)),this.attrStateCode=cdk.Token.asNumber(this.getAtt("State.Code",cdk.ResolutionTypeHint.NUMBER)),this.attrStateName=cdk.Token.asString(this.getAtt("State.Name",cdk.ResolutionTypeHint.STRING)),this.attrSupportCode=cdk.Token.asString(this.getAtt("SupportCode",cdk.ResolutionTypeHint.STRING)),this.attrUserName=cdk.Token.asString(this.getAtt("UserName",cdk.ResolutionTypeHint.STRING)),this.addOns=props.addOns,this.availabilityZone=props.availabilityZone,this.blueprintId=props.blueprintId,this.bundleId=props.bundleId,this.hardware=props.hardware,this.instanceName=props.instanceName,this.keyPairName=props.keyPairName,this.location=props.location,this.networking=props.networking,this.state=props.state,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::Instance",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.userData=props.userData}get cfnProperties(){return{addOns:this.addOns,availabilityZone:this.availabilityZone,blueprintId:this.blueprintId,bundleId:this.bundleId,hardware:this.hardware,instanceName:this.instanceName,keyPairName:this.keyPairName,location:this.location,networking:this.networking,state:this.state,tags:this.tags.renderTags(),userData:this.userData}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnInstance.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnInstancePropsToCloudFormation(props)}}exports.CfnInstance=CfnInstance,_h=JSII_RTTI_SYMBOL_1,CfnInstance[_h]={fqn:"aws-cdk-lib.aws_lightsail.CfnInstance",version:"2.94.0"},CfnInstance.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::Instance";function CfnInstanceLocationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("regionName",cdk.validateString)(properties.regionName)),errors.wrap('supplied properties not correct for "LocationProperty"')}function convertCfnInstanceLocationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceLocationPropertyValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),RegionName:cdk.stringToCloudFormation(properties.regionName)}):properties}function CfnInstanceLocationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("regionName","RegionName",properties.RegionName!=null?cfn_parse.FromCloudFormation.getString(properties.RegionName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceDiskPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachedTo",cdk.validateString)(properties.attachedTo)),errors.collect(cdk.propertyValidator("attachmentState",cdk.validateString)(properties.attachmentState)),errors.collect(cdk.propertyValidator("diskName",cdk.requiredValidator)(properties.diskName)),errors.collect(cdk.propertyValidator("diskName",cdk.validateString)(properties.diskName)),errors.collect(cdk.propertyValidator("iops",cdk.validateNumber)(properties.iops)),errors.collect(cdk.propertyValidator("isSystemDisk",cdk.validateBoolean)(properties.isSystemDisk)),errors.collect(cdk.propertyValidator("path",cdk.requiredValidator)(properties.path)),errors.collect(cdk.propertyValidator("path",cdk.validateString)(properties.path)),errors.collect(cdk.propertyValidator("sizeInGb",cdk.validateString)(properties.sizeInGb)),errors.wrap('supplied properties not correct for "DiskProperty"')}function convertCfnInstanceDiskPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceDiskPropertyValidator(properties).assertSuccess(),{AttachedTo:cdk.stringToCloudFormation(properties.attachedTo),AttachmentState:cdk.stringToCloudFormation(properties.attachmentState),DiskName:cdk.stringToCloudFormation(properties.diskName),IOPS:cdk.numberToCloudFormation(properties.iops),IsSystemDisk:cdk.booleanToCloudFormation(properties.isSystemDisk),Path:cdk.stringToCloudFormation(properties.path),SizeInGb:cdk.stringToCloudFormation(properties.sizeInGb)}):properties}function CfnInstanceDiskPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachedTo","AttachedTo",properties.AttachedTo!=null?cfn_parse.FromCloudFormation.getString(properties.AttachedTo):void 0),ret.addPropertyResult("attachmentState","AttachmentState",properties.AttachmentState!=null?cfn_parse.FromCloudFormation.getString(properties.AttachmentState):void 0),ret.addPropertyResult("diskName","DiskName",properties.DiskName!=null?cfn_parse.FromCloudFormation.getString(properties.DiskName):void 0),ret.addPropertyResult("iops","IOPS",properties.IOPS!=null?cfn_parse.FromCloudFormation.getNumber(properties.IOPS):void 0),ret.addPropertyResult("isSystemDisk","IsSystemDisk",properties.IsSystemDisk!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsSystemDisk):void 0),ret.addPropertyResult("path","Path",properties.Path!=null?cfn_parse.FromCloudFormation.getString(properties.Path):void 0),ret.addPropertyResult("sizeInGb","SizeInGb",properties.SizeInGb!=null?cfn_parse.FromCloudFormation.getString(properties.SizeInGb):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceHardwarePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cpuCount",cdk.validateNumber)(properties.cpuCount)),errors.collect(cdk.propertyValidator("disks",cdk.listValidator(CfnInstanceDiskPropertyValidator))(properties.disks)),errors.collect(cdk.propertyValidator("ramSizeInGb",cdk.validateNumber)(properties.ramSizeInGb)),errors.wrap('supplied properties not correct for "HardwareProperty"')}function convertCfnInstanceHardwarePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceHardwarePropertyValidator(properties).assertSuccess(),{CpuCount:cdk.numberToCloudFormation(properties.cpuCount),Disks:cdk.listMapper(convertCfnInstanceDiskPropertyToCloudFormation)(properties.disks),RamSizeInGb:cdk.numberToCloudFormation(properties.ramSizeInGb)}):properties}function CfnInstanceHardwarePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cpuCount","CpuCount",properties.CpuCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.CpuCount):void 0),ret.addPropertyResult("disks","Disks",properties.Disks!=null?cfn_parse.FromCloudFormation.getArray(CfnInstanceDiskPropertyFromCloudFormation)(properties.Disks):void 0),ret.addPropertyResult("ramSizeInGb","RamSizeInGb",properties.RamSizeInGb!=null?cfn_parse.FromCloudFormation.getNumber(properties.RamSizeInGb):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceStatePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("code",cdk.validateNumber)(properties.code)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.wrap('supplied properties not correct for "StateProperty"')}function convertCfnInstanceStatePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceStatePropertyValidator(properties).assertSuccess(),{Code:cdk.numberToCloudFormation(properties.code),Name:cdk.stringToCloudFormation(properties.name)}):properties}function CfnInstanceStatePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("code","Code",properties.Code!=null?cfn_parse.FromCloudFormation.getNumber(properties.Code):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstancePortPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessDirection",cdk.validateString)(properties.accessDirection)),errors.collect(cdk.propertyValidator("accessFrom",cdk.validateString)(properties.accessFrom)),errors.collect(cdk.propertyValidator("accessType",cdk.validateString)(properties.accessType)),errors.collect(cdk.propertyValidator("cidrListAliases",cdk.listValidator(cdk.validateString))(properties.cidrListAliases)),errors.collect(cdk.propertyValidator("cidrs",cdk.listValidator(cdk.validateString))(properties.cidrs)),errors.collect(cdk.propertyValidator("commonName",cdk.validateString)(properties.commonName)),errors.collect(cdk.propertyValidator("fromPort",cdk.validateNumber)(properties.fromPort)),errors.collect(cdk.propertyValidator("ipv6Cidrs",cdk.listValidator(cdk.validateString))(properties.ipv6Cidrs)),errors.collect(cdk.propertyValidator("protocol",cdk.validateString)(properties.protocol)),errors.collect(cdk.propertyValidator("toPort",cdk.validateNumber)(properties.toPort)),errors.wrap('supplied properties not correct for "PortProperty"')}function convertCfnInstancePortPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstancePortPropertyValidator(properties).assertSuccess(),{AccessDirection:cdk.stringToCloudFormation(properties.accessDirection),AccessFrom:cdk.stringToCloudFormation(properties.accessFrom),AccessType:cdk.stringToCloudFormation(properties.accessType),CidrListAliases:cdk.listMapper(cdk.stringToCloudFormation)(properties.cidrListAliases),Cidrs:cdk.listMapper(cdk.stringToCloudFormation)(properties.cidrs),CommonName:cdk.stringToCloudFormation(properties.commonName),FromPort:cdk.numberToCloudFormation(properties.fromPort),Ipv6Cidrs:cdk.listMapper(cdk.stringToCloudFormation)(properties.ipv6Cidrs),Protocol:cdk.stringToCloudFormation(properties.protocol),ToPort:cdk.numberToCloudFormation(properties.toPort)}):properties}function CfnInstancePortPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessDirection","AccessDirection",properties.AccessDirection!=null?cfn_parse.FromCloudFormation.getString(properties.AccessDirection):void 0),ret.addPropertyResult("accessFrom","AccessFrom",properties.AccessFrom!=null?cfn_parse.FromCloudFormation.getString(properties.AccessFrom):void 0),ret.addPropertyResult("accessType","AccessType",properties.AccessType!=null?cfn_parse.FromCloudFormation.getString(properties.AccessType):void 0),ret.addPropertyResult("cidrListAliases","CidrListAliases",properties.CidrListAliases!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CidrListAliases):void 0),ret.addPropertyResult("cidrs","Cidrs",properties.Cidrs!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Cidrs):void 0),ret.addPropertyResult("commonName","CommonName",properties.CommonName!=null?cfn_parse.FromCloudFormation.getString(properties.CommonName):void 0),ret.addPropertyResult("fromPort","FromPort",properties.FromPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.FromPort):void 0),ret.addPropertyResult("ipv6Cidrs","Ipv6Cidrs",properties.Ipv6Cidrs!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Ipv6Cidrs):void 0),ret.addPropertyResult("protocol","Protocol",properties.Protocol!=null?cfn_parse.FromCloudFormation.getString(properties.Protocol):void 0),ret.addPropertyResult("toPort","ToPort",properties.ToPort!=null?cfn_parse.FromCloudFormation.getNumber(properties.ToPort):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceNetworkingPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("monthlyTransfer",cdk.validateNumber)(properties.monthlyTransfer)),errors.collect(cdk.propertyValidator("ports",cdk.requiredValidator)(properties.ports)),errors.collect(cdk.propertyValidator("ports",cdk.listValidator(CfnInstancePortPropertyValidator))(properties.ports)),errors.wrap('supplied properties not correct for "NetworkingProperty"')}function convertCfnInstanceNetworkingPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceNetworkingPropertyValidator(properties).assertSuccess(),{MonthlyTransfer:cdk.numberToCloudFormation(properties.monthlyTransfer),Ports:cdk.listMapper(convertCfnInstancePortPropertyToCloudFormation)(properties.ports)}):properties}function CfnInstanceNetworkingPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("monthlyTransfer","MonthlyTransfer",properties.MonthlyTransfer!=null?cfn_parse.FromCloudFormation.getNumber(properties.MonthlyTransfer):void 0),ret.addPropertyResult("ports","Ports",properties.Ports!=null?cfn_parse.FromCloudFormation.getArray(CfnInstancePortPropertyFromCloudFormation)(properties.Ports):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceAutoSnapshotAddOnPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("snapshotTimeOfDay",cdk.validateString)(properties.snapshotTimeOfDay)),errors.wrap('supplied properties not correct for "AutoSnapshotAddOnProperty"')}function convertCfnInstanceAutoSnapshotAddOnPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceAutoSnapshotAddOnPropertyValidator(properties).assertSuccess(),{SnapshotTimeOfDay:cdk.stringToCloudFormation(properties.snapshotTimeOfDay)}):properties}function CfnInstanceAutoSnapshotAddOnPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("snapshotTimeOfDay","SnapshotTimeOfDay",properties.SnapshotTimeOfDay!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotTimeOfDay):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceAddOnPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addOnType",cdk.requiredValidator)(properties.addOnType)),errors.collect(cdk.propertyValidator("addOnType",cdk.validateString)(properties.addOnType)),errors.collect(cdk.propertyValidator("autoSnapshotAddOnRequest",CfnInstanceAutoSnapshotAddOnPropertyValidator)(properties.autoSnapshotAddOnRequest)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.wrap('supplied properties not correct for "AddOnProperty"')}function convertCfnInstanceAddOnPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceAddOnPropertyValidator(properties).assertSuccess(),{AddOnType:cdk.stringToCloudFormation(properties.addOnType),AutoSnapshotAddOnRequest:convertCfnInstanceAutoSnapshotAddOnPropertyToCloudFormation(properties.autoSnapshotAddOnRequest),Status:cdk.stringToCloudFormation(properties.status)}):properties}function CfnInstanceAddOnPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addOnType","AddOnType",properties.AddOnType!=null?cfn_parse.FromCloudFormation.getString(properties.AddOnType):void 0),ret.addPropertyResult("autoSnapshotAddOnRequest","AutoSnapshotAddOnRequest",properties.AutoSnapshotAddOnRequest!=null?CfnInstanceAutoSnapshotAddOnPropertyFromCloudFormation(properties.AutoSnapshotAddOnRequest):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstancePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addOns",cdk.listValidator(CfnInstanceAddOnPropertyValidator))(properties.addOns)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("blueprintId",cdk.requiredValidator)(properties.blueprintId)),errors.collect(cdk.propertyValidator("blueprintId",cdk.validateString)(properties.blueprintId)),errors.collect(cdk.propertyValidator("bundleId",cdk.requiredValidator)(properties.bundleId)),errors.collect(cdk.propertyValidator("bundleId",cdk.validateString)(properties.bundleId)),errors.collect(cdk.propertyValidator("hardware",CfnInstanceHardwarePropertyValidator)(properties.hardware)),errors.collect(cdk.propertyValidator("instanceName",cdk.requiredValidator)(properties.instanceName)),errors.collect(cdk.propertyValidator("instanceName",cdk.validateString)(properties.instanceName)),errors.collect(cdk.propertyValidator("keyPairName",cdk.validateString)(properties.keyPairName)),errors.collect(cdk.propertyValidator("location",CfnInstanceLocationPropertyValidator)(properties.location)),errors.collect(cdk.propertyValidator("networking",CfnInstanceNetworkingPropertyValidator)(properties.networking)),errors.collect(cdk.propertyValidator("state",CfnInstanceStatePropertyValidator)(properties.state)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("userData",cdk.validateString)(properties.userData)),errors.wrap('supplied properties not correct for "CfnInstanceProps"')}function convertCfnInstancePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstancePropsValidator(properties).assertSuccess(),{AddOns:cdk.listMapper(convertCfnInstanceAddOnPropertyToCloudFormation)(properties.addOns),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),BlueprintId:cdk.stringToCloudFormation(properties.blueprintId),BundleId:cdk.stringToCloudFormation(properties.bundleId),Hardware:convertCfnInstanceHardwarePropertyToCloudFormation(properties.hardware),InstanceName:cdk.stringToCloudFormation(properties.instanceName),KeyPairName:cdk.stringToCloudFormation(properties.keyPairName),Location:convertCfnInstanceLocationPropertyToCloudFormation(properties.location),Networking:convertCfnInstanceNetworkingPropertyToCloudFormation(properties.networking),State:convertCfnInstanceStatePropertyToCloudFormation(properties.state),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UserData:cdk.stringToCloudFormation(properties.userData)}):properties}function CfnInstancePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addOns","AddOns",properties.AddOns!=null?cfn_parse.FromCloudFormation.getArray(CfnInstanceAddOnPropertyFromCloudFormation)(properties.AddOns):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("blueprintId","BlueprintId",properties.BlueprintId!=null?cfn_parse.FromCloudFormation.getString(properties.BlueprintId):void 0),ret.addPropertyResult("bundleId","BundleId",properties.BundleId!=null?cfn_parse.FromCloudFormation.getString(properties.BundleId):void 0),ret.addPropertyResult("hardware","Hardware",properties.Hardware!=null?CfnInstanceHardwarePropertyFromCloudFormation(properties.Hardware):void 0),ret.addPropertyResult("instanceName","InstanceName",properties.InstanceName!=null?cfn_parse.FromCloudFormation.getString(properties.InstanceName):void 0),ret.addPropertyResult("keyPairName","KeyPairName",properties.KeyPairName!=null?cfn_parse.FromCloudFormation.getString(properties.KeyPairName):void 0),ret.addPropertyResult("location","Location",properties.Location!=null?CfnInstanceLocationPropertyFromCloudFormation(properties.Location):void 0),ret.addPropertyResult("networking","Networking",properties.Networking!=null?CfnInstanceNetworkingPropertyFromCloudFormation(properties.Networking):void 0),ret.addPropertyResult("state","State",properties.State!=null?CfnInstanceStatePropertyFromCloudFormation(properties.State):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("userData","UserData",properties.UserData!=null?cfn_parse.FromCloudFormation.getString(properties.UserData):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnInstanceMonthlyTransferPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("gbPerMonthAllocated",cdk.validateString)(properties.gbPerMonthAllocated)),errors.wrap('supplied properties not correct for "MonthlyTransferProperty"')}function convertCfnInstanceMonthlyTransferPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceMonthlyTransferPropertyValidator(properties).assertSuccess(),{GbPerMonthAllocated:cdk.stringToCloudFormation(properties.gbPerMonthAllocated)}):properties}function CfnInstanceMonthlyTransferPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("gbPerMonthAllocated","GbPerMonthAllocated",properties.GbPerMonthAllocated!=null?cfn_parse.FromCloudFormation.getString(properties.GbPerMonthAllocated):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLoadBalancer extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLoadBalancerPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLoadBalancer(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLoadBalancer.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnLoadBalancerProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLoadBalancer),error}cdk.requireProperty(props,"instancePort",this),cdk.requireProperty(props,"loadBalancerName",this),this.attrLoadBalancerArn=cdk.Token.asString(this.getAtt("LoadBalancerArn",cdk.ResolutionTypeHint.STRING)),this.attachedInstances=props.attachedInstances,this.healthCheckPath=props.healthCheckPath,this.instancePort=props.instancePort,this.ipAddressType=props.ipAddressType,this.loadBalancerName=props.loadBalancerName,this.sessionStickinessEnabled=props.sessionStickinessEnabled,this.sessionStickinessLbCookieDurationSeconds=props.sessionStickinessLbCookieDurationSeconds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Lightsail::LoadBalancer",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.tlsPolicyName=props.tlsPolicyName}get cfnProperties(){return{attachedInstances:this.attachedInstances,healthCheckPath:this.healthCheckPath,instancePort:this.instancePort,ipAddressType:this.ipAddressType,loadBalancerName:this.loadBalancerName,sessionStickinessEnabled:this.sessionStickinessEnabled,sessionStickinessLbCookieDurationSeconds:this.sessionStickinessLbCookieDurationSeconds,tags:this.tags.renderTags(),tlsPolicyName:this.tlsPolicyName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLoadBalancer.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLoadBalancerPropsToCloudFormation(props)}}exports.CfnLoadBalancer=CfnLoadBalancer,_j=JSII_RTTI_SYMBOL_1,CfnLoadBalancer[_j]={fqn:"aws-cdk-lib.aws_lightsail.CfnLoadBalancer",version:"2.94.0"},CfnLoadBalancer.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::LoadBalancer";function CfnLoadBalancerPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachedInstances",cdk.listValidator(cdk.validateString))(properties.attachedInstances)),errors.collect(cdk.propertyValidator("healthCheckPath",cdk.validateString)(properties.healthCheckPath)),errors.collect(cdk.propertyValidator("instancePort",cdk.requiredValidator)(properties.instancePort)),errors.collect(cdk.propertyValidator("instancePort",cdk.validateNumber)(properties.instancePort)),errors.collect(cdk.propertyValidator("ipAddressType",cdk.validateString)(properties.ipAddressType)),errors.collect(cdk.propertyValidator("loadBalancerName",cdk.requiredValidator)(properties.loadBalancerName)),errors.collect(cdk.propertyValidator("loadBalancerName",cdk.validateString)(properties.loadBalancerName)),errors.collect(cdk.propertyValidator("sessionStickinessEnabled",cdk.validateBoolean)(properties.sessionStickinessEnabled)),errors.collect(cdk.propertyValidator("sessionStickinessLbCookieDurationSeconds",cdk.validateString)(properties.sessionStickinessLbCookieDurationSeconds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("tlsPolicyName",cdk.validateString)(properties.tlsPolicyName)),errors.wrap('supplied properties not correct for "CfnLoadBalancerProps"')}function convertCfnLoadBalancerPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLoadBalancerPropsValidator(properties).assertSuccess(),{AttachedInstances:cdk.listMapper(cdk.stringToCloudFormation)(properties.attachedInstances),HealthCheckPath:cdk.stringToCloudFormation(properties.healthCheckPath),InstancePort:cdk.numberToCloudFormation(properties.instancePort),IpAddressType:cdk.stringToCloudFormation(properties.ipAddressType),LoadBalancerName:cdk.stringToCloudFormation(properties.loadBalancerName),SessionStickinessEnabled:cdk.booleanToCloudFormation(properties.sessionStickinessEnabled),SessionStickinessLBCookieDurationSeconds:cdk.stringToCloudFormation(properties.sessionStickinessLbCookieDurationSeconds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TlsPolicyName:cdk.stringToCloudFormation(properties.tlsPolicyName)}):properties}function CfnLoadBalancerPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachedInstances","AttachedInstances",properties.AttachedInstances!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AttachedInstances):void 0),ret.addPropertyResult("healthCheckPath","HealthCheckPath",properties.HealthCheckPath!=null?cfn_parse.FromCloudFormation.getString(properties.HealthCheckPath):void 0),ret.addPropertyResult("instancePort","InstancePort",properties.InstancePort!=null?cfn_parse.FromCloudFormation.getNumber(properties.InstancePort):void 0),ret.addPropertyResult("ipAddressType","IpAddressType",properties.IpAddressType!=null?cfn_parse.FromCloudFormation.getString(properties.IpAddressType):void 0),ret.addPropertyResult("loadBalancerName","LoadBalancerName",properties.LoadBalancerName!=null?cfn_parse.FromCloudFormation.getString(properties.LoadBalancerName):void 0),ret.addPropertyResult("sessionStickinessEnabled","SessionStickinessEnabled",properties.SessionStickinessEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SessionStickinessEnabled):void 0),ret.addPropertyResult("sessionStickinessLbCookieDurationSeconds","SessionStickinessLBCookieDurationSeconds",properties.SessionStickinessLBCookieDurationSeconds!=null?cfn_parse.FromCloudFormation.getString(properties.SessionStickinessLBCookieDurationSeconds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("tlsPolicyName","TlsPolicyName",properties.TlsPolicyName!=null?cfn_parse.FromCloudFormation.getString(properties.TlsPolicyName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnLoadBalancerTlsCertificate extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnLoadBalancerTlsCertificatePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnLoadBalancerTlsCertificate(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnLoadBalancerTlsCertificate.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnLoadBalancerTlsCertificateProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnLoadBalancerTlsCertificate),error}cdk.requireProperty(props,"certificateDomainName",this),cdk.requireProperty(props,"certificateName",this),cdk.requireProperty(props,"loadBalancerName",this),this.attrLoadBalancerTlsCertificateArn=cdk.Token.asString(this.getAtt("LoadBalancerTlsCertificateArn",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.certificateAlternativeNames=props.certificateAlternativeNames,this.certificateDomainName=props.certificateDomainName,this.certificateName=props.certificateName,this.httpsRedirectionEnabled=props.httpsRedirectionEnabled,this.isAttached=props.isAttached,this.loadBalancerName=props.loadBalancerName}get cfnProperties(){return{certificateAlternativeNames:this.certificateAlternativeNames,certificateDomainName:this.certificateDomainName,certificateName:this.certificateName,httpsRedirectionEnabled:this.httpsRedirectionEnabled,isAttached:this.isAttached,loadBalancerName:this.loadBalancerName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnLoadBalancerTlsCertificate.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnLoadBalancerTlsCertificatePropsToCloudFormation(props)}}exports.CfnLoadBalancerTlsCertificate=CfnLoadBalancerTlsCertificate,_k=JSII_RTTI_SYMBOL_1,CfnLoadBalancerTlsCertificate[_k]={fqn:"aws-cdk-lib.aws_lightsail.CfnLoadBalancerTlsCertificate",version:"2.94.0"},CfnLoadBalancerTlsCertificate.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::LoadBalancerTlsCertificate";function CfnLoadBalancerTlsCertificatePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("certificateAlternativeNames",cdk.listValidator(cdk.validateString))(properties.certificateAlternativeNames)),errors.collect(cdk.propertyValidator("certificateDomainName",cdk.requiredValidator)(properties.certificateDomainName)),errors.collect(cdk.propertyValidator("certificateDomainName",cdk.validateString)(properties.certificateDomainName)),errors.collect(cdk.propertyValidator("certificateName",cdk.requiredValidator)(properties.certificateName)),errors.collect(cdk.propertyValidator("certificateName",cdk.validateString)(properties.certificateName)),errors.collect(cdk.propertyValidator("httpsRedirectionEnabled",cdk.validateBoolean)(properties.httpsRedirectionEnabled)),errors.collect(cdk.propertyValidator("isAttached",cdk.validateBoolean)(properties.isAttached)),errors.collect(cdk.propertyValidator("loadBalancerName",cdk.requiredValidator)(properties.loadBalancerName)),errors.collect(cdk.propertyValidator("loadBalancerName",cdk.validateString)(properties.loadBalancerName)),errors.wrap('supplied properties not correct for "CfnLoadBalancerTlsCertificateProps"')}function convertCfnLoadBalancerTlsCertificatePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnLoadBalancerTlsCertificatePropsValidator(properties).assertSuccess(),{CertificateAlternativeNames:cdk.listMapper(cdk.stringToCloudFormation)(properties.certificateAlternativeNames),CertificateDomainName:cdk.stringToCloudFormation(properties.certificateDomainName),CertificateName:cdk.stringToCloudFormation(properties.certificateName),HttpsRedirectionEnabled:cdk.booleanToCloudFormation(properties.httpsRedirectionEnabled),IsAttached:cdk.booleanToCloudFormation(properties.isAttached),LoadBalancerName:cdk.stringToCloudFormation(properties.loadBalancerName)}):properties}function CfnLoadBalancerTlsCertificatePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("certificateAlternativeNames","CertificateAlternativeNames",properties.CertificateAlternativeNames!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CertificateAlternativeNames):void 0),ret.addPropertyResult("certificateDomainName","CertificateDomainName",properties.CertificateDomainName!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateDomainName):void 0),ret.addPropertyResult("certificateName","CertificateName",properties.CertificateName!=null?cfn_parse.FromCloudFormation.getString(properties.CertificateName):void 0),ret.addPropertyResult("httpsRedirectionEnabled","HttpsRedirectionEnabled",properties.HttpsRedirectionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.HttpsRedirectionEnabled):void 0),ret.addPropertyResult("isAttached","IsAttached",properties.IsAttached!=null?cfn_parse.FromCloudFormation.getBoolean(properties.IsAttached):void 0),ret.addPropertyResult("loadBalancerName","LoadBalancerName",properties.LoadBalancerName!=null?cfn_parse.FromCloudFormation.getString(properties.LoadBalancerName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnStaticIp extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnStaticIpPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnStaticIp(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnStaticIp.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_lightsail_CfnStaticIpProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnStaticIp),error}cdk.requireProperty(props,"staticIpName",this),this.attrIpAddress=cdk.Token.asString(this.getAtt("IpAddress",cdk.ResolutionTypeHint.STRING)),this.attrIsAttached=this.getAtt("IsAttached"),this.attrStaticIpArn=cdk.Token.asString(this.getAtt("StaticIpArn",cdk.ResolutionTypeHint.STRING)),this.attachedTo=props.attachedTo,this.staticIpName=props.staticIpName}get cfnProperties(){return{attachedTo:this.attachedTo,staticIpName:this.staticIpName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnStaticIp.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnStaticIpPropsToCloudFormation(props)}}exports.CfnStaticIp=CfnStaticIp,_l=JSII_RTTI_SYMBOL_1,CfnStaticIp[_l]={fqn:"aws-cdk-lib.aws_lightsail.CfnStaticIp",version:"2.94.0"},CfnStaticIp.CFN_RESOURCE_TYPE_NAME="AWS::Lightsail::StaticIp";function CfnStaticIpPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attachedTo",cdk.validateString)(properties.attachedTo)),errors.collect(cdk.propertyValidator("staticIpName",cdk.requiredValidator)(properties.staticIpName)),errors.collect(cdk.propertyValidator("staticIpName",cdk.validateString)(properties.staticIpName)),errors.wrap('supplied properties not correct for "CfnStaticIpProps"')}function convertCfnStaticIpPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnStaticIpPropsValidator(properties).assertSuccess(),{AttachedTo:cdk.stringToCloudFormation(properties.attachedTo),StaticIpName:cdk.stringToCloudFormation(properties.staticIpName)}):properties}function CfnStaticIpPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attachedTo","AttachedTo",properties.AttachedTo!=null?cfn_parse.FromCloudFormation.getString(properties.AttachedTo):void 0),ret.addPropertyResult("staticIpName","StaticIpName",properties.StaticIpName!=null?cfn_parse.FromCloudFormation.getString(properties.StaticIpName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
