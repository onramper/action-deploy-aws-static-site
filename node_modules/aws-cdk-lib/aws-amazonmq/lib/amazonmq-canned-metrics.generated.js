"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmazonMQMetrics=void 0;class AmazonMQMetrics{static ackRateAverage(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"AckRate",dimensionsMap:dimensions,statistic:"Average"}}static channelCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"ChannelCount",dimensionsMap:dimensions,statistic:"Sum"}}static confirmRateAverage(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"ConfirmRate",dimensionsMap:dimensions,statistic:"Average"}}static connectionCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"ConnectionCount",dimensionsMap:dimensions,statistic:"Sum"}}static consumerCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"ConsumerCount",dimensionsMap:dimensions,statistic:"Sum"}}static cpuCreditBalanceHeapUsageMaximum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"CpuCreditBalanceHeapUsage",dimensionsMap:dimensions,statistic:"Maximum"}}static cpuUtilizationAverage(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"CpuUtilization",dimensionsMap:dimensions,statistic:"Average"}}static currentConnectionsCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"CurrentConnectionsCount",dimensionsMap:dimensions,statistic:"Sum"}}static exchangeCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"ExchangeCount",dimensionsMap:dimensions,statistic:"Sum"}}static messageCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"MessageCount",dimensionsMap:dimensions,statistic:"Sum"}}static messageReadyCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"MessageReadyCount",dimensionsMap:dimensions,statistic:"Sum"}}static messageUnacknowledgedCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"MessageUnacknowledgedCount",dimensionsMap:dimensions,statistic:"Sum"}}static networkInSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"NetworkIn",dimensionsMap:dimensions,statistic:"Sum"}}static networkOutSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"NetworkOut",dimensionsMap:dimensions,statistic:"Sum"}}static publishRateAverage(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"PublishRate",dimensionsMap:dimensions,statistic:"Average"}}static queueCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"QueueCount",dimensionsMap:dimensions,statistic:"Sum"}}static totalConsumerCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"TotalConsumerCount",dimensionsMap:dimensions,statistic:"Sum"}}static totalMessageCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"TotalMessageCount",dimensionsMap:dimensions,statistic:"Sum"}}static totalProducerCountSum(dimensions){return{namespace:"AWS/AmazonMQ",metricName:"TotalProducerCount",dimensionsMap:dimensions,statistic:"Sum"}}}exports.AmazonMQMetrics=AmazonMQMetrics;
