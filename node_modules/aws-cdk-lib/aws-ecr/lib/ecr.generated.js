"use strict";var _a,_b,_c,_d,_e;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnRepository=exports.CfnReplicationConfiguration=exports.CfnRegistryPolicy=exports.CfnPullThroughCacheRule=exports.CfnPublicRepository=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnPublicRepository extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPublicRepositoryPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPublicRepository(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnPublicRepository.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnPublicRepositoryProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPublicRepository),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.repositoryCatalogData=props.repositoryCatalogData,this.repositoryName=props.repositoryName,this.repositoryPolicyText=props.repositoryPolicyText,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ECR::PublicRepository",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{repositoryCatalogData:this.repositoryCatalogData,repositoryName:this.repositoryName,repositoryPolicyText:this.repositoryPolicyText,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPublicRepository.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPublicRepositoryPropsToCloudFormation(props)}}exports.CfnPublicRepository=CfnPublicRepository,_a=JSII_RTTI_SYMBOL_1,CfnPublicRepository[_a]={fqn:"aws-cdk-lib.aws_ecr.CfnPublicRepository",version:"2.94.0"},CfnPublicRepository.CFN_RESOURCE_TYPE_NAME="AWS::ECR::PublicRepository";function CfnPublicRepositoryRepositoryCatalogDataPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("aboutText",cdk.validateString)(properties.aboutText)),errors.collect(cdk.propertyValidator("architectures",cdk.listValidator(cdk.validateString))(properties.architectures)),errors.collect(cdk.propertyValidator("operatingSystems",cdk.listValidator(cdk.validateString))(properties.operatingSystems)),errors.collect(cdk.propertyValidator("repositoryDescription",cdk.validateString)(properties.repositoryDescription)),errors.collect(cdk.propertyValidator("usageText",cdk.validateString)(properties.usageText)),errors.wrap('supplied properties not correct for "RepositoryCatalogDataProperty"')}function convertCfnPublicRepositoryRepositoryCatalogDataPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPublicRepositoryRepositoryCatalogDataPropertyValidator(properties).assertSuccess(),{AboutText:cdk.stringToCloudFormation(properties.aboutText),Architectures:cdk.listMapper(cdk.stringToCloudFormation)(properties.architectures),OperatingSystems:cdk.listMapper(cdk.stringToCloudFormation)(properties.operatingSystems),RepositoryDescription:cdk.stringToCloudFormation(properties.repositoryDescription),UsageText:cdk.stringToCloudFormation(properties.usageText)}):properties}function CfnPublicRepositoryRepositoryCatalogDataPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("aboutText","AboutText",properties.AboutText!=null?cfn_parse.FromCloudFormation.getString(properties.AboutText):void 0),ret.addPropertyResult("architectures","Architectures",properties.Architectures!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Architectures):void 0),ret.addPropertyResult("operatingSystems","OperatingSystems",properties.OperatingSystems!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.OperatingSystems):void 0),ret.addPropertyResult("repositoryDescription","RepositoryDescription",properties.RepositoryDescription!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryDescription):void 0),ret.addPropertyResult("usageText","UsageText",properties.UsageText!=null?cfn_parse.FromCloudFormation.getString(properties.UsageText):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPublicRepositoryPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("repositoryCatalogData",cdk.validateObject)(properties.repositoryCatalogData)),errors.collect(cdk.propertyValidator("repositoryName",cdk.validateString)(properties.repositoryName)),errors.collect(cdk.propertyValidator("repositoryPolicyText",cdk.validateObject)(properties.repositoryPolicyText)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnPublicRepositoryProps"')}function convertCfnPublicRepositoryPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPublicRepositoryPropsValidator(properties).assertSuccess(),{RepositoryCatalogData:cdk.objectToCloudFormation(properties.repositoryCatalogData),RepositoryName:cdk.stringToCloudFormation(properties.repositoryName),RepositoryPolicyText:cdk.objectToCloudFormation(properties.repositoryPolicyText),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnPublicRepositoryPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("repositoryCatalogData","RepositoryCatalogData",properties.RepositoryCatalogData!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryCatalogData):void 0),ret.addPropertyResult("repositoryName","RepositoryName",properties.RepositoryName!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryName):void 0),ret.addPropertyResult("repositoryPolicyText","RepositoryPolicyText",properties.RepositoryPolicyText!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryPolicyText):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPullThroughCacheRule extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPullThroughCacheRulePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPullThroughCacheRule(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnPullThroughCacheRuleProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPullThroughCacheRule),error}this.ecrRepositoryPrefix=props.ecrRepositoryPrefix,this.upstreamRegistryUrl=props.upstreamRegistryUrl}get cfnProperties(){return{ecrRepositoryPrefix:this.ecrRepositoryPrefix,upstreamRegistryUrl:this.upstreamRegistryUrl}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPullThroughCacheRulePropsToCloudFormation(props)}}exports.CfnPullThroughCacheRule=CfnPullThroughCacheRule,_b=JSII_RTTI_SYMBOL_1,CfnPullThroughCacheRule[_b]={fqn:"aws-cdk-lib.aws_ecr.CfnPullThroughCacheRule",version:"2.94.0"},CfnPullThroughCacheRule.CFN_RESOURCE_TYPE_NAME="AWS::ECR::PullThroughCacheRule";function CfnPullThroughCacheRulePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("ecrRepositoryPrefix",cdk.validateString)(properties.ecrRepositoryPrefix)),errors.collect(cdk.propertyValidator("upstreamRegistryUrl",cdk.validateString)(properties.upstreamRegistryUrl)),errors.wrap('supplied properties not correct for "CfnPullThroughCacheRuleProps"')}function convertCfnPullThroughCacheRulePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPullThroughCacheRulePropsValidator(properties).assertSuccess(),{EcrRepositoryPrefix:cdk.stringToCloudFormation(properties.ecrRepositoryPrefix),UpstreamRegistryUrl:cdk.stringToCloudFormation(properties.upstreamRegistryUrl)}):properties}function CfnPullThroughCacheRulePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("ecrRepositoryPrefix","EcrRepositoryPrefix",properties.EcrRepositoryPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.EcrRepositoryPrefix):void 0),ret.addPropertyResult("upstreamRegistryUrl","UpstreamRegistryUrl",properties.UpstreamRegistryUrl!=null?cfn_parse.FromCloudFormation.getString(properties.UpstreamRegistryUrl):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRegistryPolicy extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRegistryPolicyPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRegistryPolicy(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnRegistryPolicyProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRegistryPolicy),error}cdk.requireProperty(props,"policyText",this),this.attrRegistryId=cdk.Token.asString(this.getAtt("RegistryId",cdk.ResolutionTypeHint.STRING)),this.policyText=props.policyText}get cfnProperties(){return{policyText:this.policyText}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRegistryPolicyPropsToCloudFormation(props)}}exports.CfnRegistryPolicy=CfnRegistryPolicy,_c=JSII_RTTI_SYMBOL_1,CfnRegistryPolicy[_c]={fqn:"aws-cdk-lib.aws_ecr.CfnRegistryPolicy",version:"2.94.0"},CfnRegistryPolicy.CFN_RESOURCE_TYPE_NAME="AWS::ECR::RegistryPolicy";function CfnRegistryPolicyPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("policyText",cdk.requiredValidator)(properties.policyText)),errors.collect(cdk.propertyValidator("policyText",cdk.validateObject)(properties.policyText)),errors.wrap('supplied properties not correct for "CfnRegistryPolicyProps"')}function convertCfnRegistryPolicyPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRegistryPolicyPropsValidator(properties).assertSuccess(),{PolicyText:cdk.objectToCloudFormation(properties.policyText)}):properties}function CfnRegistryPolicyPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("policyText","PolicyText",properties.PolicyText!=null?cfn_parse.FromCloudFormation.getAny(properties.PolicyText):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationConfiguration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationConfigurationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnReplicationConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationConfiguration),error}cdk.requireProperty(props,"replicationConfiguration",this),this.attrRegistryId=cdk.Token.asString(this.getAtt("RegistryId",cdk.ResolutionTypeHint.STRING)),this.replicationConfiguration=props.replicationConfiguration}get cfnProperties(){return{replicationConfiguration:this.replicationConfiguration}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationConfigurationPropsToCloudFormation(props)}}exports.CfnReplicationConfiguration=CfnReplicationConfiguration,_d=JSII_RTTI_SYMBOL_1,CfnReplicationConfiguration[_d]={fqn:"aws-cdk-lib.aws_ecr.CfnReplicationConfiguration",version:"2.94.0"},CfnReplicationConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::ECR::ReplicationConfiguration";function CfnReplicationConfigurationRepositoryFilterPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("filter",cdk.requiredValidator)(properties.filter)),errors.collect(cdk.propertyValidator("filter",cdk.validateString)(properties.filter)),errors.collect(cdk.propertyValidator("filterType",cdk.requiredValidator)(properties.filterType)),errors.collect(cdk.propertyValidator("filterType",cdk.validateString)(properties.filterType)),errors.wrap('supplied properties not correct for "RepositoryFilterProperty"')}function convertCfnReplicationConfigurationRepositoryFilterPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationRepositoryFilterPropertyValidator(properties).assertSuccess(),{Filter:cdk.stringToCloudFormation(properties.filter),FilterType:cdk.stringToCloudFormation(properties.filterType)}):properties}function CfnReplicationConfigurationRepositoryFilterPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("filter","Filter",properties.Filter!=null?cfn_parse.FromCloudFormation.getString(properties.Filter):void 0),ret.addPropertyResult("filterType","FilterType",properties.FilterType!=null?cfn_parse.FromCloudFormation.getString(properties.FilterType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfigurationReplicationDestinationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("region",cdk.requiredValidator)(properties.region)),errors.collect(cdk.propertyValidator("region",cdk.validateString)(properties.region)),errors.collect(cdk.propertyValidator("registryId",cdk.requiredValidator)(properties.registryId)),errors.collect(cdk.propertyValidator("registryId",cdk.validateString)(properties.registryId)),errors.wrap('supplied properties not correct for "ReplicationDestinationProperty"')}function convertCfnReplicationConfigurationReplicationDestinationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationReplicationDestinationPropertyValidator(properties).assertSuccess(),{Region:cdk.stringToCloudFormation(properties.region),RegistryId:cdk.stringToCloudFormation(properties.registryId)}):properties}function CfnReplicationConfigurationReplicationDestinationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("region","Region",properties.Region!=null?cfn_parse.FromCloudFormation.getString(properties.Region):void 0),ret.addPropertyResult("registryId","RegistryId",properties.RegistryId!=null?cfn_parse.FromCloudFormation.getString(properties.RegistryId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfigurationReplicationRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinations",cdk.requiredValidator)(properties.destinations)),errors.collect(cdk.propertyValidator("destinations",cdk.listValidator(CfnReplicationConfigurationReplicationDestinationPropertyValidator))(properties.destinations)),errors.collect(cdk.propertyValidator("repositoryFilters",cdk.listValidator(CfnReplicationConfigurationRepositoryFilterPropertyValidator))(properties.repositoryFilters)),errors.wrap('supplied properties not correct for "ReplicationRuleProperty"')}function convertCfnReplicationConfigurationReplicationRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationReplicationRulePropertyValidator(properties).assertSuccess(),{Destinations:cdk.listMapper(convertCfnReplicationConfigurationReplicationDestinationPropertyToCloudFormation)(properties.destinations),RepositoryFilters:cdk.listMapper(convertCfnReplicationConfigurationRepositoryFilterPropertyToCloudFormation)(properties.repositoryFilters)}):properties}function CfnReplicationConfigurationReplicationRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinations","Destinations",properties.Destinations!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationReplicationDestinationPropertyFromCloudFormation)(properties.Destinations):void 0),ret.addPropertyResult("repositoryFilters","RepositoryFilters",properties.RepositoryFilters!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationRepositoryFilterPropertyFromCloudFormation)(properties.RepositoryFilters):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfigurationReplicationConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("rules",cdk.requiredValidator)(properties.rules)),errors.collect(cdk.propertyValidator("rules",cdk.listValidator(CfnReplicationConfigurationReplicationRulePropertyValidator))(properties.rules)),errors.wrap('supplied properties not correct for "ReplicationConfigurationProperty"')}function convertCfnReplicationConfigurationReplicationConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationReplicationConfigurationPropertyValidator(properties).assertSuccess(),{Rules:cdk.listMapper(convertCfnReplicationConfigurationReplicationRulePropertyToCloudFormation)(properties.rules)}):properties}function CfnReplicationConfigurationReplicationConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("rules","Rules",properties.Rules!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationConfigurationReplicationRulePropertyFromCloudFormation)(properties.Rules):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("replicationConfiguration",cdk.requiredValidator)(properties.replicationConfiguration)),errors.collect(cdk.propertyValidator("replicationConfiguration",CfnReplicationConfigurationReplicationConfigurationPropertyValidator)(properties.replicationConfiguration)),errors.wrap('supplied properties not correct for "CfnReplicationConfigurationProps"')}function convertCfnReplicationConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationConfigurationPropsValidator(properties).assertSuccess(),{ReplicationConfiguration:convertCfnReplicationConfigurationReplicationConfigurationPropertyToCloudFormation(properties.replicationConfiguration)}):properties}function CfnReplicationConfigurationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("replicationConfiguration","ReplicationConfiguration",properties.ReplicationConfiguration!=null?CfnReplicationConfigurationReplicationConfigurationPropertyFromCloudFormation(properties.ReplicationConfiguration):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnRepository extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnRepositoryPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnRepository(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnRepository.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ecr_CfnRepositoryProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnRepository),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrRepositoryUri=cdk.Token.asString(this.getAtt("RepositoryUri",cdk.ResolutionTypeHint.STRING)),this.emptyOnDelete=props.emptyOnDelete,this.encryptionConfiguration=props.encryptionConfiguration,this.imageScanningConfiguration=props.imageScanningConfiguration,this.imageTagMutability=props.imageTagMutability,this.lifecyclePolicy=props.lifecyclePolicy,this.repositoryName=props.repositoryName,this.repositoryPolicyText=props.repositoryPolicyText,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ECR::Repository",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{emptyOnDelete:this.emptyOnDelete,encryptionConfiguration:this.encryptionConfiguration,imageScanningConfiguration:this.imageScanningConfiguration,imageTagMutability:this.imageTagMutability,lifecyclePolicy:this.lifecyclePolicy,repositoryName:this.repositoryName,repositoryPolicyText:this.repositoryPolicyText,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnRepository.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnRepositoryPropsToCloudFormation(props)}}exports.CfnRepository=CfnRepository,_e=JSII_RTTI_SYMBOL_1,CfnRepository[_e]={fqn:"aws-cdk-lib.aws_ecr.CfnRepository",version:"2.94.0"},CfnRepository.CFN_RESOURCE_TYPE_NAME="AWS::ECR::Repository";function CfnRepositoryLifecyclePolicyPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("lifecyclePolicyText",cdk.validateString)(properties.lifecyclePolicyText)),errors.collect(cdk.propertyValidator("registryId",cdk.validateString)(properties.registryId)),errors.wrap('supplied properties not correct for "LifecyclePolicyProperty"')}function convertCfnRepositoryLifecyclePolicyPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepositoryLifecyclePolicyPropertyValidator(properties).assertSuccess(),{LifecyclePolicyText:cdk.stringToCloudFormation(properties.lifecyclePolicyText),RegistryId:cdk.stringToCloudFormation(properties.registryId)}):properties}function CfnRepositoryLifecyclePolicyPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("lifecyclePolicyText","LifecyclePolicyText",properties.LifecyclePolicyText!=null?cfn_parse.FromCloudFormation.getString(properties.LifecyclePolicyText):void 0),ret.addPropertyResult("registryId","RegistryId",properties.RegistryId!=null?cfn_parse.FromCloudFormation.getString(properties.RegistryId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepositoryImageScanningConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("scanOnPush",cdk.validateBoolean)(properties.scanOnPush)),errors.wrap('supplied properties not correct for "ImageScanningConfigurationProperty"')}function convertCfnRepositoryImageScanningConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepositoryImageScanningConfigurationPropertyValidator(properties).assertSuccess(),{ScanOnPush:cdk.booleanToCloudFormation(properties.scanOnPush)}):properties}function CfnRepositoryImageScanningConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("scanOnPush","ScanOnPush",properties.ScanOnPush!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ScanOnPush):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepositoryEncryptionConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("encryptionType",cdk.requiredValidator)(properties.encryptionType)),errors.collect(cdk.propertyValidator("encryptionType",cdk.validateString)(properties.encryptionType)),errors.collect(cdk.propertyValidator("kmsKey",cdk.validateString)(properties.kmsKey)),errors.wrap('supplied properties not correct for "EncryptionConfigurationProperty"')}function convertCfnRepositoryEncryptionConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepositoryEncryptionConfigurationPropertyValidator(properties).assertSuccess(),{EncryptionType:cdk.stringToCloudFormation(properties.encryptionType),KmsKey:cdk.stringToCloudFormation(properties.kmsKey)}):properties}function CfnRepositoryEncryptionConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("encryptionType","EncryptionType",properties.EncryptionType!=null?cfn_parse.FromCloudFormation.getString(properties.EncryptionType):void 0),ret.addPropertyResult("kmsKey","KmsKey",properties.KmsKey!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnRepositoryPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("emptyOnDelete",cdk.validateBoolean)(properties.emptyOnDelete)),errors.collect(cdk.propertyValidator("encryptionConfiguration",CfnRepositoryEncryptionConfigurationPropertyValidator)(properties.encryptionConfiguration)),errors.collect(cdk.propertyValidator("imageScanningConfiguration",CfnRepositoryImageScanningConfigurationPropertyValidator)(properties.imageScanningConfiguration)),errors.collect(cdk.propertyValidator("imageTagMutability",cdk.validateString)(properties.imageTagMutability)),errors.collect(cdk.propertyValidator("lifecyclePolicy",CfnRepositoryLifecyclePolicyPropertyValidator)(properties.lifecyclePolicy)),errors.collect(cdk.propertyValidator("repositoryName",cdk.validateString)(properties.repositoryName)),errors.collect(cdk.propertyValidator("repositoryPolicyText",cdk.validateObject)(properties.repositoryPolicyText)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnRepositoryProps"')}function convertCfnRepositoryPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnRepositoryPropsValidator(properties).assertSuccess(),{EmptyOnDelete:cdk.booleanToCloudFormation(properties.emptyOnDelete),EncryptionConfiguration:convertCfnRepositoryEncryptionConfigurationPropertyToCloudFormation(properties.encryptionConfiguration),ImageScanningConfiguration:convertCfnRepositoryImageScanningConfigurationPropertyToCloudFormation(properties.imageScanningConfiguration),ImageTagMutability:cdk.stringToCloudFormation(properties.imageTagMutability),LifecyclePolicy:convertCfnRepositoryLifecyclePolicyPropertyToCloudFormation(properties.lifecyclePolicy),RepositoryName:cdk.stringToCloudFormation(properties.repositoryName),RepositoryPolicyText:cdk.objectToCloudFormation(properties.repositoryPolicyText),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnRepositoryPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("emptyOnDelete","EmptyOnDelete",properties.EmptyOnDelete!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EmptyOnDelete):void 0),ret.addPropertyResult("encryptionConfiguration","EncryptionConfiguration",properties.EncryptionConfiguration!=null?CfnRepositoryEncryptionConfigurationPropertyFromCloudFormation(properties.EncryptionConfiguration):void 0),ret.addPropertyResult("imageScanningConfiguration","ImageScanningConfiguration",properties.ImageScanningConfiguration!=null?CfnRepositoryImageScanningConfigurationPropertyFromCloudFormation(properties.ImageScanningConfiguration):void 0),ret.addPropertyResult("imageTagMutability","ImageTagMutability",properties.ImageTagMutability!=null?cfn_parse.FromCloudFormation.getString(properties.ImageTagMutability):void 0),ret.addPropertyResult("lifecyclePolicy","LifecyclePolicy",properties.LifecyclePolicy!=null?CfnRepositoryLifecyclePolicyPropertyFromCloudFormation(properties.LifecyclePolicy):void 0),ret.addPropertyResult("repositoryName","RepositoryName",properties.RepositoryName!=null?cfn_parse.FromCloudFormation.getString(properties.RepositoryName):void 0),ret.addPropertyResult("repositoryPolicyText","RepositoryPolicyText",properties.RepositoryPolicyText!=null?cfn_parse.FromCloudFormation.getAny(properties.RepositoryPolicyText):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
