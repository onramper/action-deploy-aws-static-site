"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.KinesisMetrics=void 0;class KinesisMetrics{static readProvisionedThroughputExceededSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"ReadProvisionedThroughputExceeded",dimensionsMap:dimensions,statistic:"Sum"}}static writeProvisionedThroughputExceededSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"WriteProvisionedThroughputExceeded",dimensionsMap:dimensions,statistic:"Sum"}}static getRecordsIteratorAgeMillisecondsMaximum(dimensions){return{namespace:"AWS/Kinesis",metricName:"GetRecords.IteratorAgeMilliseconds",dimensionsMap:dimensions,statistic:"Maximum"}}static putRecordSuccessSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"PutRecord.Success",dimensionsMap:dimensions,statistic:"Sum"}}static putRecordsSuccessSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"PutRecords.Success",dimensionsMap:dimensions,statistic:"Sum"}}static putRecordsBytesSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"PutRecords.Bytes",dimensionsMap:dimensions,statistic:"Sum"}}static getRecordsSuccessSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"GetRecords.Success",dimensionsMap:dimensions,statistic:"Sum"}}static getRecordsBytesSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"GetRecords.Bytes",dimensionsMap:dimensions,statistic:"Sum"}}static getRecordsRecordsSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"GetRecords.Records",dimensionsMap:dimensions,statistic:"Sum"}}static getRecordsLatencyMaximum(dimensions){return{namespace:"AWS/Kinesis",metricName:"GetRecords.Latency",dimensionsMap:dimensions,statistic:"Maximum"}}static incomingBytesSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"IncomingBytes",dimensionsMap:dimensions,statistic:"Sum"}}static incomingRecordsSum(dimensions){return{namespace:"AWS/Kinesis",metricName:"IncomingRecords",dimensionsMap:dimensions,statistic:"Sum"}}}exports.KinesisMetrics=KinesisMetrics;
