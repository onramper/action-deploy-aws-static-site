"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClientVpnAuthorizationRule=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),ec2_generated_1=require("./ec2.generated"),core_1=require("../../core");class ClientVpnAuthorizationRule extends core_1.Resource{constructor(scope,id,props){try{jsiiDeprecationWarnings.aws_cdk_lib_aws_ec2_ClientVpnAuthorizationRuleProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,ClientVpnAuthorizationRule),error}if(!props.clientVpnEndoint&&!props.clientVpnEndpoint)throw new Error("ClientVpnAuthorizationRule: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified");if(props.clientVpnEndoint&&props.clientVpnEndpoint)throw new Error("ClientVpnAuthorizationRule: either clientVpnEndpoint or clientVpnEndoint (deprecated) must be specified, but not both");const clientVpnEndpoint=props.clientVpnEndoint||props.clientVpnEndpoint;super(scope,id),new ec2_generated_1.CfnClientVpnAuthorizationRule(this,"Resource",{clientVpnEndpointId:clientVpnEndpoint.endpointId,targetNetworkCidr:props.cidr,accessGroupId:props.groupId,authorizeAllGroups:!props.groupId,description:props.description})}}exports.ClientVpnAuthorizationRule=ClientVpnAuthorizationRule,_a=JSII_RTTI_SYMBOL_1,ClientVpnAuthorizationRule[_a]={fqn:"aws-cdk-lib.aws_ec2.ClientVpnAuthorizationRule",version:"2.94.0"};
