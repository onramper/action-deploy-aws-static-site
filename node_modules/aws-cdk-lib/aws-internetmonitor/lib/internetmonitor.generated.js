"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnMonitor=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnMonitor extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnMonitorPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnMonitor(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnMonitor.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_internetmonitor_CfnMonitorProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnMonitor),error}cdk.requireProperty(props,"monitorName",this),this.attrCreatedAt=cdk.Token.asString(this.getAtt("CreatedAt",cdk.ResolutionTypeHint.STRING)),this.attrModifiedAt=cdk.Token.asString(this.getAtt("ModifiedAt",cdk.ResolutionTypeHint.STRING)),this.attrMonitorArn=cdk.Token.asString(this.getAtt("MonitorArn",cdk.ResolutionTypeHint.STRING)),this.attrProcessingStatus=cdk.Token.asString(this.getAtt("ProcessingStatus",cdk.ResolutionTypeHint.STRING)),this.attrProcessingStatusInfo=cdk.Token.asString(this.getAtt("ProcessingStatusInfo",cdk.ResolutionTypeHint.STRING)),this.healthEventsConfig=props.healthEventsConfig,this.internetMeasurementsLogDelivery=props.internetMeasurementsLogDelivery,this.maxCityNetworksToMonitor=props.maxCityNetworksToMonitor,this.monitorName=props.monitorName,this.resources=props.resources,this.resourcesToAdd=props.resourcesToAdd,this.resourcesToRemove=props.resourcesToRemove,this.status=props.status,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::InternetMonitor::Monitor",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.trafficPercentageToMonitor=props.trafficPercentageToMonitor}get cfnProperties(){return{healthEventsConfig:this.healthEventsConfig,internetMeasurementsLogDelivery:this.internetMeasurementsLogDelivery,maxCityNetworksToMonitor:this.maxCityNetworksToMonitor,monitorName:this.monitorName,resources:this.resources,resourcesToAdd:this.resourcesToAdd,resourcesToRemove:this.resourcesToRemove,status:this.status,tags:this.tags.renderTags(),trafficPercentageToMonitor:this.trafficPercentageToMonitor}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnMonitor.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnMonitorPropsToCloudFormation(props)}}exports.CfnMonitor=CfnMonitor,_a=JSII_RTTI_SYMBOL_1,CfnMonitor[_a]={fqn:"aws-cdk-lib.aws_internetmonitor.CfnMonitor",version:"2.94.0"},CfnMonitor.CFN_RESOURCE_TYPE_NAME="AWS::InternetMonitor::Monitor";function CfnMonitorS3ConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("bucketPrefix",cdk.validateString)(properties.bucketPrefix)),errors.collect(cdk.propertyValidator("logDeliveryStatus",cdk.validateString)(properties.logDeliveryStatus)),errors.wrap('supplied properties not correct for "S3ConfigProperty"')}function convertCfnMonitorS3ConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMonitorS3ConfigPropertyValidator(properties).assertSuccess(),{BucketName:cdk.stringToCloudFormation(properties.bucketName),BucketPrefix:cdk.stringToCloudFormation(properties.bucketPrefix),LogDeliveryStatus:cdk.stringToCloudFormation(properties.logDeliveryStatus)}):properties}function CfnMonitorS3ConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("bucketPrefix","BucketPrefix",properties.BucketPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.BucketPrefix):void 0),ret.addPropertyResult("logDeliveryStatus","LogDeliveryStatus",properties.LogDeliveryStatus!=null?cfn_parse.FromCloudFormation.getString(properties.LogDeliveryStatus):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMonitorInternetMeasurementsLogDeliveryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("s3Config",CfnMonitorS3ConfigPropertyValidator)(properties.s3Config)),errors.wrap('supplied properties not correct for "InternetMeasurementsLogDeliveryProperty"')}function convertCfnMonitorInternetMeasurementsLogDeliveryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMonitorInternetMeasurementsLogDeliveryPropertyValidator(properties).assertSuccess(),{S3Config:convertCfnMonitorS3ConfigPropertyToCloudFormation(properties.s3Config)}):properties}function CfnMonitorInternetMeasurementsLogDeliveryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("s3Config","S3Config",properties.S3Config!=null?CfnMonitorS3ConfigPropertyFromCloudFormation(properties.S3Config):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMonitorLocalHealthEventsConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthScoreThreshold",cdk.validateNumber)(properties.healthScoreThreshold)),errors.collect(cdk.propertyValidator("minTrafficImpact",cdk.validateNumber)(properties.minTrafficImpact)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.wrap('supplied properties not correct for "LocalHealthEventsConfigProperty"')}function convertCfnMonitorLocalHealthEventsConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMonitorLocalHealthEventsConfigPropertyValidator(properties).assertSuccess(),{HealthScoreThreshold:cdk.numberToCloudFormation(properties.healthScoreThreshold),MinTrafficImpact:cdk.numberToCloudFormation(properties.minTrafficImpact),Status:cdk.stringToCloudFormation(properties.status)}):properties}function CfnMonitorLocalHealthEventsConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthScoreThreshold","HealthScoreThreshold",properties.HealthScoreThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.HealthScoreThreshold):void 0),ret.addPropertyResult("minTrafficImpact","MinTrafficImpact",properties.MinTrafficImpact!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinTrafficImpact):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMonitorHealthEventsConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityLocalHealthEventsConfig",CfnMonitorLocalHealthEventsConfigPropertyValidator)(properties.availabilityLocalHealthEventsConfig)),errors.collect(cdk.propertyValidator("availabilityScoreThreshold",cdk.validateNumber)(properties.availabilityScoreThreshold)),errors.collect(cdk.propertyValidator("performanceLocalHealthEventsConfig",CfnMonitorLocalHealthEventsConfigPropertyValidator)(properties.performanceLocalHealthEventsConfig)),errors.collect(cdk.propertyValidator("performanceScoreThreshold",cdk.validateNumber)(properties.performanceScoreThreshold)),errors.wrap('supplied properties not correct for "HealthEventsConfigProperty"')}function convertCfnMonitorHealthEventsConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMonitorHealthEventsConfigPropertyValidator(properties).assertSuccess(),{AvailabilityLocalHealthEventsConfig:convertCfnMonitorLocalHealthEventsConfigPropertyToCloudFormation(properties.availabilityLocalHealthEventsConfig),AvailabilityScoreThreshold:cdk.numberToCloudFormation(properties.availabilityScoreThreshold),PerformanceLocalHealthEventsConfig:convertCfnMonitorLocalHealthEventsConfigPropertyToCloudFormation(properties.performanceLocalHealthEventsConfig),PerformanceScoreThreshold:cdk.numberToCloudFormation(properties.performanceScoreThreshold)}):properties}function CfnMonitorHealthEventsConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityLocalHealthEventsConfig","AvailabilityLocalHealthEventsConfig",properties.AvailabilityLocalHealthEventsConfig!=null?CfnMonitorLocalHealthEventsConfigPropertyFromCloudFormation(properties.AvailabilityLocalHealthEventsConfig):void 0),ret.addPropertyResult("availabilityScoreThreshold","AvailabilityScoreThreshold",properties.AvailabilityScoreThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.AvailabilityScoreThreshold):void 0),ret.addPropertyResult("performanceLocalHealthEventsConfig","PerformanceLocalHealthEventsConfig",properties.PerformanceLocalHealthEventsConfig!=null?CfnMonitorLocalHealthEventsConfigPropertyFromCloudFormation(properties.PerformanceLocalHealthEventsConfig):void 0),ret.addPropertyResult("performanceScoreThreshold","PerformanceScoreThreshold",properties.PerformanceScoreThreshold!=null?cfn_parse.FromCloudFormation.getNumber(properties.PerformanceScoreThreshold):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMonitorPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("healthEventsConfig",CfnMonitorHealthEventsConfigPropertyValidator)(properties.healthEventsConfig)),errors.collect(cdk.propertyValidator("internetMeasurementsLogDelivery",CfnMonitorInternetMeasurementsLogDeliveryPropertyValidator)(properties.internetMeasurementsLogDelivery)),errors.collect(cdk.propertyValidator("maxCityNetworksToMonitor",cdk.validateNumber)(properties.maxCityNetworksToMonitor)),errors.collect(cdk.propertyValidator("monitorName",cdk.requiredValidator)(properties.monitorName)),errors.collect(cdk.propertyValidator("monitorName",cdk.validateString)(properties.monitorName)),errors.collect(cdk.propertyValidator("resources",cdk.listValidator(cdk.validateString))(properties.resources)),errors.collect(cdk.propertyValidator("resourcesToAdd",cdk.listValidator(cdk.validateString))(properties.resourcesToAdd)),errors.collect(cdk.propertyValidator("resourcesToRemove",cdk.listValidator(cdk.validateString))(properties.resourcesToRemove)),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("trafficPercentageToMonitor",cdk.validateNumber)(properties.trafficPercentageToMonitor)),errors.wrap('supplied properties not correct for "CfnMonitorProps"')}function convertCfnMonitorPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMonitorPropsValidator(properties).assertSuccess(),{HealthEventsConfig:convertCfnMonitorHealthEventsConfigPropertyToCloudFormation(properties.healthEventsConfig),InternetMeasurementsLogDelivery:convertCfnMonitorInternetMeasurementsLogDeliveryPropertyToCloudFormation(properties.internetMeasurementsLogDelivery),MaxCityNetworksToMonitor:cdk.numberToCloudFormation(properties.maxCityNetworksToMonitor),MonitorName:cdk.stringToCloudFormation(properties.monitorName),Resources:cdk.listMapper(cdk.stringToCloudFormation)(properties.resources),ResourcesToAdd:cdk.listMapper(cdk.stringToCloudFormation)(properties.resourcesToAdd),ResourcesToRemove:cdk.listMapper(cdk.stringToCloudFormation)(properties.resourcesToRemove),Status:cdk.stringToCloudFormation(properties.status),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TrafficPercentageToMonitor:cdk.numberToCloudFormation(properties.trafficPercentageToMonitor)}):properties}function CfnMonitorPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("healthEventsConfig","HealthEventsConfig",properties.HealthEventsConfig!=null?CfnMonitorHealthEventsConfigPropertyFromCloudFormation(properties.HealthEventsConfig):void 0),ret.addPropertyResult("internetMeasurementsLogDelivery","InternetMeasurementsLogDelivery",properties.InternetMeasurementsLogDelivery!=null?CfnMonitorInternetMeasurementsLogDeliveryPropertyFromCloudFormation(properties.InternetMeasurementsLogDelivery):void 0),ret.addPropertyResult("maxCityNetworksToMonitor","MaxCityNetworksToMonitor",properties.MaxCityNetworksToMonitor!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxCityNetworksToMonitor):void 0),ret.addPropertyResult("monitorName","MonitorName",properties.MonitorName!=null?cfn_parse.FromCloudFormation.getString(properties.MonitorName):void 0),ret.addPropertyResult("resources","Resources",properties.Resources!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Resources):void 0),ret.addPropertyResult("resourcesToAdd","ResourcesToAdd",properties.ResourcesToAdd!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ResourcesToAdd):void 0),ret.addPropertyResult("resourcesToRemove","ResourcesToRemove",properties.ResourcesToRemove!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ResourcesToRemove):void 0),ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("trafficPercentageToMonitor","TrafficPercentageToMonitor",properties.TrafficPercentageToMonitor!=null?cfn_parse.FromCloudFormation.getNumber(properties.TrafficPercentageToMonitor):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
