"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnUserGroup=exports.CfnUser=exports.CfnSubnetGroup=exports.CfnSecurityGroupIngress=exports.CfnSecurityGroup=exports.CfnReplicationGroup=exports.CfnParameterGroup=exports.CfnGlobalReplicationGroup=exports.CfnCacheCluster=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCacheCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnCacheClusterPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCacheCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCacheCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnCacheClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCacheCluster),error}cdk.requireProperty(props,"cacheNodeType",this),cdk.requireProperty(props,"engine",this),cdk.requireProperty(props,"numCacheNodes",this),this.attrConfigurationEndpointAddress=cdk.Token.asString(this.getAtt("ConfigurationEndpoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrConfigurationEndpointPort=cdk.Token.asString(this.getAtt("ConfigurationEndpoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrRedisEndpointAddress=cdk.Token.asString(this.getAtt("RedisEndpoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrRedisEndpointPort=cdk.Token.asString(this.getAtt("RedisEndpoint.Port",cdk.ResolutionTypeHint.STRING)),this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.azMode=props.azMode,this.cacheNodeType=props.cacheNodeType,this.cacheParameterGroupName=props.cacheParameterGroupName,this.cacheSecurityGroupNames=props.cacheSecurityGroupNames,this.cacheSubnetGroupName=props.cacheSubnetGroupName,this.clusterName=props.clusterName,this.engine=props.engine,this.engineVersion=props.engineVersion,this.ipDiscovery=props.ipDiscovery,this.logDeliveryConfigurations=props.logDeliveryConfigurations,this.networkType=props.networkType,this.notificationTopicArn=props.notificationTopicArn,this.numCacheNodes=props.numCacheNodes,this.port=props.port,this.preferredAvailabilityZone=props.preferredAvailabilityZone,this.preferredAvailabilityZones=props.preferredAvailabilityZones,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.snapshotArns=props.snapshotArns,this.snapshotName=props.snapshotName,this.snapshotRetentionLimit=props.snapshotRetentionLimit,this.snapshotWindow=props.snapshotWindow,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::CacheCluster",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.transitEncryptionEnabled=props.transitEncryptionEnabled,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds,this.node.scope!=null&&cdk.Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::ElastiCache::CacheCluster' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,azMode:this.azMode,cacheNodeType:this.cacheNodeType,cacheParameterGroupName:this.cacheParameterGroupName,cacheSecurityGroupNames:this.cacheSecurityGroupNames,cacheSubnetGroupName:this.cacheSubnetGroupName,clusterName:this.clusterName,engine:this.engine,engineVersion:this.engineVersion,ipDiscovery:this.ipDiscovery,logDeliveryConfigurations:this.logDeliveryConfigurations,networkType:this.networkType,notificationTopicArn:this.notificationTopicArn,numCacheNodes:this.numCacheNodes,port:this.port,preferredAvailabilityZone:this.preferredAvailabilityZone,preferredAvailabilityZones:this.preferredAvailabilityZones,preferredMaintenanceWindow:this.preferredMaintenanceWindow,snapshotArns:this.snapshotArns,snapshotName:this.snapshotName,snapshotRetentionLimit:this.snapshotRetentionLimit,snapshotWindow:this.snapshotWindow,tags:this.tags.renderTags(),transitEncryptionEnabled:this.transitEncryptionEnabled,vpcSecurityGroupIds:this.vpcSecurityGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCacheCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnCacheClusterPropsToCloudFormation(props)}}exports.CfnCacheCluster=CfnCacheCluster,_a=JSII_RTTI_SYMBOL_1,CfnCacheCluster[_a]={fqn:"aws-cdk-lib.aws_elasticache.CfnCacheCluster",version:"2.94.0"},CfnCacheCluster.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::CacheCluster";function CfnCacheClusterCloudWatchLogsDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("logGroup",cdk.requiredValidator)(properties.logGroup)),errors.collect(cdk.propertyValidator("logGroup",cdk.validateString)(properties.logGroup)),errors.wrap('supplied properties not correct for "CloudWatchLogsDestinationDetailsProperty"')}function convertCfnCacheClusterCloudWatchLogsDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCacheClusterCloudWatchLogsDestinationDetailsPropertyValidator(properties).assertSuccess(),{LogGroup:cdk.stringToCloudFormation(properties.logGroup)}):properties}function CfnCacheClusterCloudWatchLogsDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("logGroup","LogGroup",properties.LogGroup!=null?cfn_parse.FromCloudFormation.getString(properties.LogGroup):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCacheClusterKinesisFirehoseDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deliveryStream",cdk.requiredValidator)(properties.deliveryStream)),errors.collect(cdk.propertyValidator("deliveryStream",cdk.validateString)(properties.deliveryStream)),errors.wrap('supplied properties not correct for "KinesisFirehoseDestinationDetailsProperty"')}function convertCfnCacheClusterKinesisFirehoseDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCacheClusterKinesisFirehoseDestinationDetailsPropertyValidator(properties).assertSuccess(),{DeliveryStream:cdk.stringToCloudFormation(properties.deliveryStream)}):properties}function CfnCacheClusterKinesisFirehoseDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deliveryStream","DeliveryStream",properties.DeliveryStream!=null?cfn_parse.FromCloudFormation.getString(properties.DeliveryStream):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCacheClusterDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogsDetails",CfnCacheClusterCloudWatchLogsDestinationDetailsPropertyValidator)(properties.cloudWatchLogsDetails)),errors.collect(cdk.propertyValidator("kinesisFirehoseDetails",CfnCacheClusterKinesisFirehoseDestinationDetailsPropertyValidator)(properties.kinesisFirehoseDetails)),errors.wrap('supplied properties not correct for "DestinationDetailsProperty"')}function convertCfnCacheClusterDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCacheClusterDestinationDetailsPropertyValidator(properties).assertSuccess(),{CloudWatchLogsDetails:convertCfnCacheClusterCloudWatchLogsDestinationDetailsPropertyToCloudFormation(properties.cloudWatchLogsDetails),KinesisFirehoseDetails:convertCfnCacheClusterKinesisFirehoseDestinationDetailsPropertyToCloudFormation(properties.kinesisFirehoseDetails)}):properties}function CfnCacheClusterDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cloudWatchLogsDetails","CloudWatchLogsDetails",properties.CloudWatchLogsDetails!=null?CfnCacheClusterCloudWatchLogsDestinationDetailsPropertyFromCloudFormation(properties.CloudWatchLogsDetails):void 0),ret.addPropertyResult("kinesisFirehoseDetails","KinesisFirehoseDetails",properties.KinesisFirehoseDetails!=null?CfnCacheClusterKinesisFirehoseDestinationDetailsPropertyFromCloudFormation(properties.KinesisFirehoseDetails):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCacheClusterLogDeliveryConfigurationRequestPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinationDetails",cdk.requiredValidator)(properties.destinationDetails)),errors.collect(cdk.propertyValidator("destinationDetails",CfnCacheClusterDestinationDetailsPropertyValidator)(properties.destinationDetails)),errors.collect(cdk.propertyValidator("destinationType",cdk.requiredValidator)(properties.destinationType)),errors.collect(cdk.propertyValidator("destinationType",cdk.validateString)(properties.destinationType)),errors.collect(cdk.propertyValidator("logFormat",cdk.requiredValidator)(properties.logFormat)),errors.collect(cdk.propertyValidator("logFormat",cdk.validateString)(properties.logFormat)),errors.collect(cdk.propertyValidator("logType",cdk.requiredValidator)(properties.logType)),errors.collect(cdk.propertyValidator("logType",cdk.validateString)(properties.logType)),errors.wrap('supplied properties not correct for "LogDeliveryConfigurationRequestProperty"')}function convertCfnCacheClusterLogDeliveryConfigurationRequestPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCacheClusterLogDeliveryConfigurationRequestPropertyValidator(properties).assertSuccess(),{DestinationDetails:convertCfnCacheClusterDestinationDetailsPropertyToCloudFormation(properties.destinationDetails),DestinationType:cdk.stringToCloudFormation(properties.destinationType),LogFormat:cdk.stringToCloudFormation(properties.logFormat),LogType:cdk.stringToCloudFormation(properties.logType)}):properties}function CfnCacheClusterLogDeliveryConfigurationRequestPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationDetails","DestinationDetails",properties.DestinationDetails!=null?CfnCacheClusterDestinationDetailsPropertyFromCloudFormation(properties.DestinationDetails):void 0),ret.addPropertyResult("destinationType","DestinationType",properties.DestinationType!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationType):void 0),ret.addPropertyResult("logFormat","LogFormat",properties.LogFormat!=null?cfn_parse.FromCloudFormation.getString(properties.LogFormat):void 0),ret.addPropertyResult("logType","LogType",properties.LogType!=null?cfn_parse.FromCloudFormation.getString(properties.LogType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnCacheClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("azMode",cdk.validateString)(properties.azMode)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("cacheNodeType",cdk.requiredValidator)(properties.cacheNodeType)),errors.collect(cdk.propertyValidator("cacheNodeType",cdk.validateString)(properties.cacheNodeType)),errors.collect(cdk.propertyValidator("cacheParameterGroupName",cdk.validateString)(properties.cacheParameterGroupName)),errors.collect(cdk.propertyValidator("cacheSecurityGroupNames",cdk.listValidator(cdk.validateString))(properties.cacheSecurityGroupNames)),errors.collect(cdk.propertyValidator("cacheSubnetGroupName",cdk.validateString)(properties.cacheSubnetGroupName)),errors.collect(cdk.propertyValidator("clusterName",cdk.validateString)(properties.clusterName)),errors.collect(cdk.propertyValidator("engine",cdk.requiredValidator)(properties.engine)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("ipDiscovery",cdk.validateString)(properties.ipDiscovery)),errors.collect(cdk.propertyValidator("logDeliveryConfigurations",cdk.listValidator(CfnCacheClusterLogDeliveryConfigurationRequestPropertyValidator))(properties.logDeliveryConfigurations)),errors.collect(cdk.propertyValidator("networkType",cdk.validateString)(properties.networkType)),errors.collect(cdk.propertyValidator("notificationTopicArn",cdk.validateString)(properties.notificationTopicArn)),errors.collect(cdk.propertyValidator("numCacheNodes",cdk.requiredValidator)(properties.numCacheNodes)),errors.collect(cdk.propertyValidator("numCacheNodes",cdk.validateNumber)(properties.numCacheNodes)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("preferredAvailabilityZone",cdk.validateString)(properties.preferredAvailabilityZone)),errors.collect(cdk.propertyValidator("preferredAvailabilityZones",cdk.listValidator(cdk.validateString))(properties.preferredAvailabilityZones)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("snapshotArns",cdk.listValidator(cdk.validateString))(properties.snapshotArns)),errors.collect(cdk.propertyValidator("snapshotName",cdk.validateString)(properties.snapshotName)),errors.collect(cdk.propertyValidator("snapshotRetentionLimit",cdk.validateNumber)(properties.snapshotRetentionLimit)),errors.collect(cdk.propertyValidator("snapshotWindow",cdk.validateString)(properties.snapshotWindow)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("transitEncryptionEnabled",cdk.validateBoolean)(properties.transitEncryptionEnabled)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnCacheClusterProps"')}function convertCfnCacheClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnCacheClusterPropsValidator(properties).assertSuccess(),{AZMode:cdk.stringToCloudFormation(properties.azMode),AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),CacheNodeType:cdk.stringToCloudFormation(properties.cacheNodeType),CacheParameterGroupName:cdk.stringToCloudFormation(properties.cacheParameterGroupName),CacheSecurityGroupNames:cdk.listMapper(cdk.stringToCloudFormation)(properties.cacheSecurityGroupNames),CacheSubnetGroupName:cdk.stringToCloudFormation(properties.cacheSubnetGroupName),ClusterName:cdk.stringToCloudFormation(properties.clusterName),Engine:cdk.stringToCloudFormation(properties.engine),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),IpDiscovery:cdk.stringToCloudFormation(properties.ipDiscovery),LogDeliveryConfigurations:cdk.listMapper(convertCfnCacheClusterLogDeliveryConfigurationRequestPropertyToCloudFormation)(properties.logDeliveryConfigurations),NetworkType:cdk.stringToCloudFormation(properties.networkType),NotificationTopicArn:cdk.stringToCloudFormation(properties.notificationTopicArn),NumCacheNodes:cdk.numberToCloudFormation(properties.numCacheNodes),Port:cdk.numberToCloudFormation(properties.port),PreferredAvailabilityZone:cdk.stringToCloudFormation(properties.preferredAvailabilityZone),PreferredAvailabilityZones:cdk.listMapper(cdk.stringToCloudFormation)(properties.preferredAvailabilityZones),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),SnapshotArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.snapshotArns),SnapshotName:cdk.stringToCloudFormation(properties.snapshotName),SnapshotRetentionLimit:cdk.numberToCloudFormation(properties.snapshotRetentionLimit),SnapshotWindow:cdk.stringToCloudFormation(properties.snapshotWindow),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TransitEncryptionEnabled:cdk.booleanToCloudFormation(properties.transitEncryptionEnabled),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnCacheClusterPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",properties.AutoMinorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade):void 0),ret.addPropertyResult("azMode","AZMode",properties.AZMode!=null?cfn_parse.FromCloudFormation.getString(properties.AZMode):void 0),ret.addPropertyResult("cacheNodeType","CacheNodeType",properties.CacheNodeType!=null?cfn_parse.FromCloudFormation.getString(properties.CacheNodeType):void 0),ret.addPropertyResult("cacheParameterGroupName","CacheParameterGroupName",properties.CacheParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheParameterGroupName):void 0),ret.addPropertyResult("cacheSecurityGroupNames","CacheSecurityGroupNames",properties.CacheSecurityGroupNames!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CacheSecurityGroupNames):void 0),ret.addPropertyResult("cacheSubnetGroupName","CacheSubnetGroupName",properties.CacheSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheSubnetGroupName):void 0),ret.addPropertyResult("clusterName","ClusterName",properties.ClusterName!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterName):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("ipDiscovery","IpDiscovery",properties.IpDiscovery!=null?cfn_parse.FromCloudFormation.getString(properties.IpDiscovery):void 0),ret.addPropertyResult("logDeliveryConfigurations","LogDeliveryConfigurations",properties.LogDeliveryConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnCacheClusterLogDeliveryConfigurationRequestPropertyFromCloudFormation)(properties.LogDeliveryConfigurations):void 0),ret.addPropertyResult("networkType","NetworkType",properties.NetworkType!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkType):void 0),ret.addPropertyResult("notificationTopicArn","NotificationTopicArn",properties.NotificationTopicArn!=null?cfn_parse.FromCloudFormation.getString(properties.NotificationTopicArn):void 0),ret.addPropertyResult("numCacheNodes","NumCacheNodes",properties.NumCacheNodes!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumCacheNodes):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("preferredAvailabilityZone","PreferredAvailabilityZone",properties.PreferredAvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredAvailabilityZone):void 0),ret.addPropertyResult("preferredAvailabilityZones","PreferredAvailabilityZones",properties.PreferredAvailabilityZones!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.PreferredAvailabilityZones):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("snapshotArns","SnapshotArns",properties.SnapshotArns!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SnapshotArns):void 0),ret.addPropertyResult("snapshotName","SnapshotName",properties.SnapshotName!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotName):void 0),ret.addPropertyResult("snapshotRetentionLimit","SnapshotRetentionLimit",properties.SnapshotRetentionLimit!=null?cfn_parse.FromCloudFormation.getNumber(properties.SnapshotRetentionLimit):void 0),ret.addPropertyResult("snapshotWindow","SnapshotWindow",properties.SnapshotWindow!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotWindow):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("transitEncryptionEnabled","TransitEncryptionEnabled",properties.TransitEncryptionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.TransitEncryptionEnabled):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnGlobalReplicationGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnGlobalReplicationGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnGlobalReplicationGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnGlobalReplicationGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnGlobalReplicationGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnGlobalReplicationGroup),error}cdk.requireProperty(props,"members",this),this.attrGlobalReplicationGroupId=cdk.Token.asString(this.getAtt("GlobalReplicationGroupId",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.automaticFailoverEnabled=props.automaticFailoverEnabled,this.cacheNodeType=props.cacheNodeType,this.cacheParameterGroupName=props.cacheParameterGroupName,this.engineVersion=props.engineVersion,this.globalNodeGroupCount=props.globalNodeGroupCount,this.globalReplicationGroupDescription=props.globalReplicationGroupDescription,this.globalReplicationGroupIdSuffix=props.globalReplicationGroupIdSuffix,this.members=props.members,this.regionalConfigurations=props.regionalConfigurations}get cfnProperties(){return{automaticFailoverEnabled:this.automaticFailoverEnabled,cacheNodeType:this.cacheNodeType,cacheParameterGroupName:this.cacheParameterGroupName,engineVersion:this.engineVersion,globalNodeGroupCount:this.globalNodeGroupCount,globalReplicationGroupDescription:this.globalReplicationGroupDescription,globalReplicationGroupIdSuffix:this.globalReplicationGroupIdSuffix,members:this.members,regionalConfigurations:this.regionalConfigurations}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnGlobalReplicationGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnGlobalReplicationGroupPropsToCloudFormation(props)}}exports.CfnGlobalReplicationGroup=CfnGlobalReplicationGroup,_b=JSII_RTTI_SYMBOL_1,CfnGlobalReplicationGroup[_b]={fqn:"aws-cdk-lib.aws_elasticache.CfnGlobalReplicationGroup",version:"2.94.0"},CfnGlobalReplicationGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::GlobalReplicationGroup";function CfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("replicationGroupId",cdk.validateString)(properties.replicationGroupId)),errors.collect(cdk.propertyValidator("replicationGroupRegion",cdk.validateString)(properties.replicationGroupRegion)),errors.collect(cdk.propertyValidator("role",cdk.validateString)(properties.role)),errors.wrap('supplied properties not correct for "GlobalReplicationGroupMemberProperty"')}function convertCfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyValidator(properties).assertSuccess(),{ReplicationGroupId:cdk.stringToCloudFormation(properties.replicationGroupId),ReplicationGroupRegion:cdk.stringToCloudFormation(properties.replicationGroupRegion),Role:cdk.stringToCloudFormation(properties.role)}):properties}function CfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("replicationGroupId","ReplicationGroupId",properties.ReplicationGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupId):void 0),ret.addPropertyResult("replicationGroupRegion","ReplicationGroupRegion",properties.ReplicationGroupRegion!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupRegion):void 0),ret.addPropertyResult("role","Role",properties.Role!=null?cfn_parse.FromCloudFormation.getString(properties.Role):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnGlobalReplicationGroupReshardingConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("nodeGroupId",cdk.validateString)(properties.nodeGroupId)),errors.collect(cdk.propertyValidator("preferredAvailabilityZones",cdk.listValidator(cdk.validateString))(properties.preferredAvailabilityZones)),errors.wrap('supplied properties not correct for "ReshardingConfigurationProperty"')}function convertCfnGlobalReplicationGroupReshardingConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalReplicationGroupReshardingConfigurationPropertyValidator(properties).assertSuccess(),{NodeGroupId:cdk.stringToCloudFormation(properties.nodeGroupId),PreferredAvailabilityZones:cdk.listMapper(cdk.stringToCloudFormation)(properties.preferredAvailabilityZones)}):properties}function CfnGlobalReplicationGroupReshardingConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("nodeGroupId","NodeGroupId",properties.NodeGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.NodeGroupId):void 0),ret.addPropertyResult("preferredAvailabilityZones","PreferredAvailabilityZones",properties.PreferredAvailabilityZones!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.PreferredAvailabilityZones):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnGlobalReplicationGroupRegionalConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("replicationGroupId",cdk.validateString)(properties.replicationGroupId)),errors.collect(cdk.propertyValidator("replicationGroupRegion",cdk.validateString)(properties.replicationGroupRegion)),errors.collect(cdk.propertyValidator("reshardingConfigurations",cdk.listValidator(CfnGlobalReplicationGroupReshardingConfigurationPropertyValidator))(properties.reshardingConfigurations)),errors.wrap('supplied properties not correct for "RegionalConfigurationProperty"')}function convertCfnGlobalReplicationGroupRegionalConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalReplicationGroupRegionalConfigurationPropertyValidator(properties).assertSuccess(),{ReplicationGroupId:cdk.stringToCloudFormation(properties.replicationGroupId),ReplicationGroupRegion:cdk.stringToCloudFormation(properties.replicationGroupRegion),ReshardingConfigurations:cdk.listMapper(convertCfnGlobalReplicationGroupReshardingConfigurationPropertyToCloudFormation)(properties.reshardingConfigurations)}):properties}function CfnGlobalReplicationGroupRegionalConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("replicationGroupId","ReplicationGroupId",properties.ReplicationGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupId):void 0),ret.addPropertyResult("replicationGroupRegion","ReplicationGroupRegion",properties.ReplicationGroupRegion!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupRegion):void 0),ret.addPropertyResult("reshardingConfigurations","ReshardingConfigurations",properties.ReshardingConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnGlobalReplicationGroupReshardingConfigurationPropertyFromCloudFormation)(properties.ReshardingConfigurations):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnGlobalReplicationGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("automaticFailoverEnabled",cdk.validateBoolean)(properties.automaticFailoverEnabled)),errors.collect(cdk.propertyValidator("cacheNodeType",cdk.validateString)(properties.cacheNodeType)),errors.collect(cdk.propertyValidator("cacheParameterGroupName",cdk.validateString)(properties.cacheParameterGroupName)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("globalNodeGroupCount",cdk.validateNumber)(properties.globalNodeGroupCount)),errors.collect(cdk.propertyValidator("globalReplicationGroupDescription",cdk.validateString)(properties.globalReplicationGroupDescription)),errors.collect(cdk.propertyValidator("globalReplicationGroupIdSuffix",cdk.validateString)(properties.globalReplicationGroupIdSuffix)),errors.collect(cdk.propertyValidator("members",cdk.requiredValidator)(properties.members)),errors.collect(cdk.propertyValidator("members",cdk.listValidator(CfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyValidator))(properties.members)),errors.collect(cdk.propertyValidator("regionalConfigurations",cdk.listValidator(CfnGlobalReplicationGroupRegionalConfigurationPropertyValidator))(properties.regionalConfigurations)),errors.wrap('supplied properties not correct for "CfnGlobalReplicationGroupProps"')}function convertCfnGlobalReplicationGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnGlobalReplicationGroupPropsValidator(properties).assertSuccess(),{AutomaticFailoverEnabled:cdk.booleanToCloudFormation(properties.automaticFailoverEnabled),CacheNodeType:cdk.stringToCloudFormation(properties.cacheNodeType),CacheParameterGroupName:cdk.stringToCloudFormation(properties.cacheParameterGroupName),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),GlobalNodeGroupCount:cdk.numberToCloudFormation(properties.globalNodeGroupCount),GlobalReplicationGroupDescription:cdk.stringToCloudFormation(properties.globalReplicationGroupDescription),GlobalReplicationGroupIdSuffix:cdk.stringToCloudFormation(properties.globalReplicationGroupIdSuffix),Members:cdk.listMapper(convertCfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyToCloudFormation)(properties.members),RegionalConfigurations:cdk.listMapper(convertCfnGlobalReplicationGroupRegionalConfigurationPropertyToCloudFormation)(properties.regionalConfigurations)}):properties}function CfnGlobalReplicationGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("automaticFailoverEnabled","AutomaticFailoverEnabled",properties.AutomaticFailoverEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutomaticFailoverEnabled):void 0),ret.addPropertyResult("cacheNodeType","CacheNodeType",properties.CacheNodeType!=null?cfn_parse.FromCloudFormation.getString(properties.CacheNodeType):void 0),ret.addPropertyResult("cacheParameterGroupName","CacheParameterGroupName",properties.CacheParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheParameterGroupName):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("globalNodeGroupCount","GlobalNodeGroupCount",properties.GlobalNodeGroupCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.GlobalNodeGroupCount):void 0),ret.addPropertyResult("globalReplicationGroupDescription","GlobalReplicationGroupDescription",properties.GlobalReplicationGroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalReplicationGroupDescription):void 0),ret.addPropertyResult("globalReplicationGroupIdSuffix","GlobalReplicationGroupIdSuffix",properties.GlobalReplicationGroupIdSuffix!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalReplicationGroupIdSuffix):void 0),ret.addPropertyResult("members","Members",properties.Members!=null?cfn_parse.FromCloudFormation.getArray(CfnGlobalReplicationGroupGlobalReplicationGroupMemberPropertyFromCloudFormation)(properties.Members):void 0),ret.addPropertyResult("regionalConfigurations","RegionalConfigurations",properties.RegionalConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnGlobalReplicationGroupRegionalConfigurationPropertyFromCloudFormation)(properties.RegionalConfigurations):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnParameterGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnParameterGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnParameterGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnParameterGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnParameterGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnParameterGroup),error}cdk.requireProperty(props,"cacheParameterGroupFamily",this),cdk.requireProperty(props,"description",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.cacheParameterGroupFamily=props.cacheParameterGroupFamily,this.description=props.description,this.properties=props.properties,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::ParameterGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{cacheParameterGroupFamily:this.cacheParameterGroupFamily,description:this.description,properties:this.properties,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnParameterGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnParameterGroupPropsToCloudFormation(props)}}exports.CfnParameterGroup=CfnParameterGroup,_c=JSII_RTTI_SYMBOL_1,CfnParameterGroup[_c]={fqn:"aws-cdk-lib.aws_elasticache.CfnParameterGroup",version:"2.94.0"},CfnParameterGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::ParameterGroup";function CfnParameterGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cacheParameterGroupFamily",cdk.requiredValidator)(properties.cacheParameterGroupFamily)),errors.collect(cdk.propertyValidator("cacheParameterGroupFamily",cdk.validateString)(properties.cacheParameterGroupFamily)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("properties",cdk.hashValidator(cdk.validateString))(properties.properties)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnParameterGroupProps"')}function convertCfnParameterGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnParameterGroupPropsValidator(properties).assertSuccess(),{CacheParameterGroupFamily:cdk.stringToCloudFormation(properties.cacheParameterGroupFamily),Description:cdk.stringToCloudFormation(properties.description),Properties:cdk.hashMapper(cdk.stringToCloudFormation)(properties.properties),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnParameterGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cacheParameterGroupFamily","CacheParameterGroupFamily",properties.CacheParameterGroupFamily!=null?cfn_parse.FromCloudFormation.getString(properties.CacheParameterGroupFamily):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("properties","Properties",properties.Properties!=null?cfn_parse.FromCloudFormation.getMap(cfn_parse.FromCloudFormation.getString)(properties.Properties):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnReplicationGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReplicationGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReplicationGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReplicationGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnReplicationGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReplicationGroup),error}cdk.requireProperty(props,"replicationGroupDescription",this),this.attrConfigurationEndPointAddress=cdk.Token.asString(this.getAtt("ConfigurationEndPoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrConfigurationEndPointPort=cdk.Token.asString(this.getAtt("ConfigurationEndPoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrPrimaryEndPointAddress=cdk.Token.asString(this.getAtt("PrimaryEndPoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrPrimaryEndPointPort=cdk.Token.asString(this.getAtt("PrimaryEndPoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrReadEndPointAddresses=cdk.Token.asString(this.getAtt("ReadEndPoint.Addresses",cdk.ResolutionTypeHint.STRING)),this.attrReadEndPointAddressesList=cdk.Token.asList(this.getAtt("ReadEndPoint.Addresses.List",cdk.ResolutionTypeHint.STRING_LIST)),this.attrReadEndPointPorts=cdk.Token.asString(this.getAtt("ReadEndPoint.Ports",cdk.ResolutionTypeHint.STRING)),this.attrReadEndPointPortsList=cdk.Token.asList(this.getAtt("ReadEndPoint.Ports.List",cdk.ResolutionTypeHint.STRING_LIST)),this.attrReaderEndPointAddress=cdk.Token.asString(this.getAtt("ReaderEndPoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrReaderEndPointPort=cdk.Token.asString(this.getAtt("ReaderEndPoint.Port",cdk.ResolutionTypeHint.STRING)),this.atRestEncryptionEnabled=props.atRestEncryptionEnabled,this.authToken=props.authToken,this.automaticFailoverEnabled=props.automaticFailoverEnabled,this.autoMinorVersionUpgrade=props.autoMinorVersionUpgrade,this.cacheNodeType=props.cacheNodeType,this.cacheParameterGroupName=props.cacheParameterGroupName,this.cacheSecurityGroupNames=props.cacheSecurityGroupNames,this.cacheSubnetGroupName=props.cacheSubnetGroupName,this.clusterMode=props.clusterMode,this.dataTieringEnabled=props.dataTieringEnabled,this.engine=props.engine,this.engineVersion=props.engineVersion,this.globalReplicationGroupId=props.globalReplicationGroupId,this.ipDiscovery=props.ipDiscovery,this.kmsKeyId=props.kmsKeyId,this.logDeliveryConfigurations=props.logDeliveryConfigurations,this.multiAzEnabled=props.multiAzEnabled,this.networkType=props.networkType,this.nodeGroupConfiguration=props.nodeGroupConfiguration,this.notificationTopicArn=props.notificationTopicArn,this.numCacheClusters=props.numCacheClusters,this.numNodeGroups=props.numNodeGroups,this.port=props.port,this.preferredCacheClusterAZs=props.preferredCacheClusterAZs,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.primaryClusterId=props.primaryClusterId,this.replicasPerNodeGroup=props.replicasPerNodeGroup,this.replicationGroupDescription=props.replicationGroupDescription,this.replicationGroupId=props.replicationGroupId,this.securityGroupIds=props.securityGroupIds,this.snapshotArns=props.snapshotArns,this.snapshotName=props.snapshotName,this.snapshotRetentionLimit=props.snapshotRetentionLimit,this.snapshottingClusterId=props.snapshottingClusterId,this.snapshotWindow=props.snapshotWindow,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::ReplicationGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.transitEncryptionEnabled=props.transitEncryptionEnabled,this.transitEncryptionMode=props.transitEncryptionMode,this.userGroupIds=props.userGroupIds,this.node.scope!=null&&cdk.Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::ElastiCache::ReplicationGroup' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{atRestEncryptionEnabled:this.atRestEncryptionEnabled,authToken:this.authToken,automaticFailoverEnabled:this.automaticFailoverEnabled,autoMinorVersionUpgrade:this.autoMinorVersionUpgrade,cacheNodeType:this.cacheNodeType,cacheParameterGroupName:this.cacheParameterGroupName,cacheSecurityGroupNames:this.cacheSecurityGroupNames,cacheSubnetGroupName:this.cacheSubnetGroupName,clusterMode:this.clusterMode,dataTieringEnabled:this.dataTieringEnabled,engine:this.engine,engineVersion:this.engineVersion,globalReplicationGroupId:this.globalReplicationGroupId,ipDiscovery:this.ipDiscovery,kmsKeyId:this.kmsKeyId,logDeliveryConfigurations:this.logDeliveryConfigurations,multiAzEnabled:this.multiAzEnabled,networkType:this.networkType,nodeGroupConfiguration:this.nodeGroupConfiguration,notificationTopicArn:this.notificationTopicArn,numCacheClusters:this.numCacheClusters,numNodeGroups:this.numNodeGroups,port:this.port,preferredCacheClusterAZs:this.preferredCacheClusterAZs,preferredMaintenanceWindow:this.preferredMaintenanceWindow,primaryClusterId:this.primaryClusterId,replicasPerNodeGroup:this.replicasPerNodeGroup,replicationGroupDescription:this.replicationGroupDescription,replicationGroupId:this.replicationGroupId,securityGroupIds:this.securityGroupIds,snapshotArns:this.snapshotArns,snapshotName:this.snapshotName,snapshotRetentionLimit:this.snapshotRetentionLimit,snapshottingClusterId:this.snapshottingClusterId,snapshotWindow:this.snapshotWindow,tags:this.tags.renderTags(),transitEncryptionEnabled:this.transitEncryptionEnabled,transitEncryptionMode:this.transitEncryptionMode,userGroupIds:this.userGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReplicationGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReplicationGroupPropsToCloudFormation(props)}}exports.CfnReplicationGroup=CfnReplicationGroup,_d=JSII_RTTI_SYMBOL_1,CfnReplicationGroup[_d]={fqn:"aws-cdk-lib.aws_elasticache.CfnReplicationGroup",version:"2.94.0"},CfnReplicationGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::ReplicationGroup";function CfnReplicationGroupNodeGroupConfigurationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("nodeGroupId",cdk.validateString)(properties.nodeGroupId)),errors.collect(cdk.propertyValidator("primaryAvailabilityZone",cdk.validateString)(properties.primaryAvailabilityZone)),errors.collect(cdk.propertyValidator("replicaAvailabilityZones",cdk.listValidator(cdk.validateString))(properties.replicaAvailabilityZones)),errors.collect(cdk.propertyValidator("replicaCount",cdk.validateNumber)(properties.replicaCount)),errors.collect(cdk.propertyValidator("slots",cdk.validateString)(properties.slots)),errors.wrap('supplied properties not correct for "NodeGroupConfigurationProperty"')}function convertCfnReplicationGroupNodeGroupConfigurationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupNodeGroupConfigurationPropertyValidator(properties).assertSuccess(),{NodeGroupId:cdk.stringToCloudFormation(properties.nodeGroupId),PrimaryAvailabilityZone:cdk.stringToCloudFormation(properties.primaryAvailabilityZone),ReplicaAvailabilityZones:cdk.listMapper(cdk.stringToCloudFormation)(properties.replicaAvailabilityZones),ReplicaCount:cdk.numberToCloudFormation(properties.replicaCount),Slots:cdk.stringToCloudFormation(properties.slots)}):properties}function CfnReplicationGroupNodeGroupConfigurationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("nodeGroupId","NodeGroupId",properties.NodeGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.NodeGroupId):void 0),ret.addPropertyResult("primaryAvailabilityZone","PrimaryAvailabilityZone",properties.PrimaryAvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.PrimaryAvailabilityZone):void 0),ret.addPropertyResult("replicaAvailabilityZones","ReplicaAvailabilityZones",properties.ReplicaAvailabilityZones!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ReplicaAvailabilityZones):void 0),ret.addPropertyResult("replicaCount","ReplicaCount",properties.ReplicaCount!=null?cfn_parse.FromCloudFormation.getNumber(properties.ReplicaCount):void 0),ret.addPropertyResult("slots","Slots",properties.Slots!=null?cfn_parse.FromCloudFormation.getString(properties.Slots):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("logGroup",cdk.requiredValidator)(properties.logGroup)),errors.collect(cdk.propertyValidator("logGroup",cdk.validateString)(properties.logGroup)),errors.wrap('supplied properties not correct for "CloudWatchLogsDestinationDetailsProperty"')}function convertCfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyValidator(properties).assertSuccess(),{LogGroup:cdk.stringToCloudFormation(properties.logGroup)}):properties}function CfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("logGroup","LogGroup",properties.LogGroup!=null?cfn_parse.FromCloudFormation.getString(properties.LogGroup):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deliveryStream",cdk.requiredValidator)(properties.deliveryStream)),errors.collect(cdk.propertyValidator("deliveryStream",cdk.validateString)(properties.deliveryStream)),errors.wrap('supplied properties not correct for "KinesisFirehoseDestinationDetailsProperty"')}function convertCfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyValidator(properties).assertSuccess(),{DeliveryStream:cdk.stringToCloudFormation(properties.deliveryStream)}):properties}function CfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deliveryStream","DeliveryStream",properties.DeliveryStream!=null?cfn_parse.FromCloudFormation.getString(properties.DeliveryStream):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationGroupDestinationDetailsPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cloudWatchLogsDetails",CfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyValidator)(properties.cloudWatchLogsDetails)),errors.collect(cdk.propertyValidator("kinesisFirehoseDetails",CfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyValidator)(properties.kinesisFirehoseDetails)),errors.wrap('supplied properties not correct for "DestinationDetailsProperty"')}function convertCfnReplicationGroupDestinationDetailsPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupDestinationDetailsPropertyValidator(properties).assertSuccess(),{CloudWatchLogsDetails:convertCfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyToCloudFormation(properties.cloudWatchLogsDetails),KinesisFirehoseDetails:convertCfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyToCloudFormation(properties.kinesisFirehoseDetails)}):properties}function CfnReplicationGroupDestinationDetailsPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cloudWatchLogsDetails","CloudWatchLogsDetails",properties.CloudWatchLogsDetails!=null?CfnReplicationGroupCloudWatchLogsDestinationDetailsPropertyFromCloudFormation(properties.CloudWatchLogsDetails):void 0),ret.addPropertyResult("kinesisFirehoseDetails","KinesisFirehoseDetails",properties.KinesisFirehoseDetails!=null?CfnReplicationGroupKinesisFirehoseDestinationDetailsPropertyFromCloudFormation(properties.KinesisFirehoseDetails):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationGroupLogDeliveryConfigurationRequestPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinationDetails",cdk.requiredValidator)(properties.destinationDetails)),errors.collect(cdk.propertyValidator("destinationDetails",CfnReplicationGroupDestinationDetailsPropertyValidator)(properties.destinationDetails)),errors.collect(cdk.propertyValidator("destinationType",cdk.requiredValidator)(properties.destinationType)),errors.collect(cdk.propertyValidator("destinationType",cdk.validateString)(properties.destinationType)),errors.collect(cdk.propertyValidator("logFormat",cdk.requiredValidator)(properties.logFormat)),errors.collect(cdk.propertyValidator("logFormat",cdk.validateString)(properties.logFormat)),errors.collect(cdk.propertyValidator("logType",cdk.requiredValidator)(properties.logType)),errors.collect(cdk.propertyValidator("logType",cdk.validateString)(properties.logType)),errors.wrap('supplied properties not correct for "LogDeliveryConfigurationRequestProperty"')}function convertCfnReplicationGroupLogDeliveryConfigurationRequestPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupLogDeliveryConfigurationRequestPropertyValidator(properties).assertSuccess(),{DestinationDetails:convertCfnReplicationGroupDestinationDetailsPropertyToCloudFormation(properties.destinationDetails),DestinationType:cdk.stringToCloudFormation(properties.destinationType),LogFormat:cdk.stringToCloudFormation(properties.logFormat),LogType:cdk.stringToCloudFormation(properties.logType)}):properties}function CfnReplicationGroupLogDeliveryConfigurationRequestPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationDetails","DestinationDetails",properties.DestinationDetails!=null?CfnReplicationGroupDestinationDetailsPropertyFromCloudFormation(properties.DestinationDetails):void 0),ret.addPropertyResult("destinationType","DestinationType",properties.DestinationType!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationType):void 0),ret.addPropertyResult("logFormat","LogFormat",properties.LogFormat!=null?cfn_parse.FromCloudFormation.getString(properties.LogFormat):void 0),ret.addPropertyResult("logType","LogType",properties.LogType!=null?cfn_parse.FromCloudFormation.getString(properties.LogType):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnReplicationGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("atRestEncryptionEnabled",cdk.validateBoolean)(properties.atRestEncryptionEnabled)),errors.collect(cdk.propertyValidator("authToken",cdk.validateString)(properties.authToken)),errors.collect(cdk.propertyValidator("autoMinorVersionUpgrade",cdk.validateBoolean)(properties.autoMinorVersionUpgrade)),errors.collect(cdk.propertyValidator("automaticFailoverEnabled",cdk.validateBoolean)(properties.automaticFailoverEnabled)),errors.collect(cdk.propertyValidator("cacheNodeType",cdk.validateString)(properties.cacheNodeType)),errors.collect(cdk.propertyValidator("cacheParameterGroupName",cdk.validateString)(properties.cacheParameterGroupName)),errors.collect(cdk.propertyValidator("cacheSecurityGroupNames",cdk.listValidator(cdk.validateString))(properties.cacheSecurityGroupNames)),errors.collect(cdk.propertyValidator("cacheSubnetGroupName",cdk.validateString)(properties.cacheSubnetGroupName)),errors.collect(cdk.propertyValidator("clusterMode",cdk.validateString)(properties.clusterMode)),errors.collect(cdk.propertyValidator("dataTieringEnabled",cdk.validateBoolean)(properties.dataTieringEnabled)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("engineVersion",cdk.validateString)(properties.engineVersion)),errors.collect(cdk.propertyValidator("globalReplicationGroupId",cdk.validateString)(properties.globalReplicationGroupId)),errors.collect(cdk.propertyValidator("ipDiscovery",cdk.validateString)(properties.ipDiscovery)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("logDeliveryConfigurations",cdk.listValidator(CfnReplicationGroupLogDeliveryConfigurationRequestPropertyValidator))(properties.logDeliveryConfigurations)),errors.collect(cdk.propertyValidator("multiAzEnabled",cdk.validateBoolean)(properties.multiAzEnabled)),errors.collect(cdk.propertyValidator("networkType",cdk.validateString)(properties.networkType)),errors.collect(cdk.propertyValidator("nodeGroupConfiguration",cdk.listValidator(CfnReplicationGroupNodeGroupConfigurationPropertyValidator))(properties.nodeGroupConfiguration)),errors.collect(cdk.propertyValidator("notificationTopicArn",cdk.validateString)(properties.notificationTopicArn)),errors.collect(cdk.propertyValidator("numCacheClusters",cdk.validateNumber)(properties.numCacheClusters)),errors.collect(cdk.propertyValidator("numNodeGroups",cdk.validateNumber)(properties.numNodeGroups)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("preferredCacheClusterAZs",cdk.listValidator(cdk.validateString))(properties.preferredCacheClusterAZs)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("primaryClusterId",cdk.validateString)(properties.primaryClusterId)),errors.collect(cdk.propertyValidator("replicasPerNodeGroup",cdk.validateNumber)(properties.replicasPerNodeGroup)),errors.collect(cdk.propertyValidator("replicationGroupDescription",cdk.requiredValidator)(properties.replicationGroupDescription)),errors.collect(cdk.propertyValidator("replicationGroupDescription",cdk.validateString)(properties.replicationGroupDescription)),errors.collect(cdk.propertyValidator("replicationGroupId",cdk.validateString)(properties.replicationGroupId)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("snapshotArns",cdk.listValidator(cdk.validateString))(properties.snapshotArns)),errors.collect(cdk.propertyValidator("snapshotName",cdk.validateString)(properties.snapshotName)),errors.collect(cdk.propertyValidator("snapshotRetentionLimit",cdk.validateNumber)(properties.snapshotRetentionLimit)),errors.collect(cdk.propertyValidator("snapshotWindow",cdk.validateString)(properties.snapshotWindow)),errors.collect(cdk.propertyValidator("snapshottingClusterId",cdk.validateString)(properties.snapshottingClusterId)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("transitEncryptionEnabled",cdk.validateBoolean)(properties.transitEncryptionEnabled)),errors.collect(cdk.propertyValidator("transitEncryptionMode",cdk.validateString)(properties.transitEncryptionMode)),errors.collect(cdk.propertyValidator("userGroupIds",cdk.listValidator(cdk.validateString))(properties.userGroupIds)),errors.wrap('supplied properties not correct for "CfnReplicationGroupProps"')}function convertCfnReplicationGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReplicationGroupPropsValidator(properties).assertSuccess(),{AtRestEncryptionEnabled:cdk.booleanToCloudFormation(properties.atRestEncryptionEnabled),AuthToken:cdk.stringToCloudFormation(properties.authToken),AutoMinorVersionUpgrade:cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),AutomaticFailoverEnabled:cdk.booleanToCloudFormation(properties.automaticFailoverEnabled),CacheNodeType:cdk.stringToCloudFormation(properties.cacheNodeType),CacheParameterGroupName:cdk.stringToCloudFormation(properties.cacheParameterGroupName),CacheSecurityGroupNames:cdk.listMapper(cdk.stringToCloudFormation)(properties.cacheSecurityGroupNames),CacheSubnetGroupName:cdk.stringToCloudFormation(properties.cacheSubnetGroupName),ClusterMode:cdk.stringToCloudFormation(properties.clusterMode),DataTieringEnabled:cdk.booleanToCloudFormation(properties.dataTieringEnabled),Engine:cdk.stringToCloudFormation(properties.engine),EngineVersion:cdk.stringToCloudFormation(properties.engineVersion),GlobalReplicationGroupId:cdk.stringToCloudFormation(properties.globalReplicationGroupId),IpDiscovery:cdk.stringToCloudFormation(properties.ipDiscovery),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),LogDeliveryConfigurations:cdk.listMapper(convertCfnReplicationGroupLogDeliveryConfigurationRequestPropertyToCloudFormation)(properties.logDeliveryConfigurations),MultiAZEnabled:cdk.booleanToCloudFormation(properties.multiAzEnabled),NetworkType:cdk.stringToCloudFormation(properties.networkType),NodeGroupConfiguration:cdk.listMapper(convertCfnReplicationGroupNodeGroupConfigurationPropertyToCloudFormation)(properties.nodeGroupConfiguration),NotificationTopicArn:cdk.stringToCloudFormation(properties.notificationTopicArn),NumCacheClusters:cdk.numberToCloudFormation(properties.numCacheClusters),NumNodeGroups:cdk.numberToCloudFormation(properties.numNodeGroups),Port:cdk.numberToCloudFormation(properties.port),PreferredCacheClusterAZs:cdk.listMapper(cdk.stringToCloudFormation)(properties.preferredCacheClusterAZs),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),PrimaryClusterId:cdk.stringToCloudFormation(properties.primaryClusterId),ReplicasPerNodeGroup:cdk.numberToCloudFormation(properties.replicasPerNodeGroup),ReplicationGroupDescription:cdk.stringToCloudFormation(properties.replicationGroupDescription),ReplicationGroupId:cdk.stringToCloudFormation(properties.replicationGroupId),SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SnapshotArns:cdk.listMapper(cdk.stringToCloudFormation)(properties.snapshotArns),SnapshotName:cdk.stringToCloudFormation(properties.snapshotName),SnapshotRetentionLimit:cdk.numberToCloudFormation(properties.snapshotRetentionLimit),SnapshotWindow:cdk.stringToCloudFormation(properties.snapshotWindow),SnapshottingClusterId:cdk.stringToCloudFormation(properties.snapshottingClusterId),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TransitEncryptionEnabled:cdk.booleanToCloudFormation(properties.transitEncryptionEnabled),TransitEncryptionMode:cdk.stringToCloudFormation(properties.transitEncryptionMode),UserGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.userGroupIds)}):properties}function CfnReplicationGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("atRestEncryptionEnabled","AtRestEncryptionEnabled",properties.AtRestEncryptionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AtRestEncryptionEnabled):void 0),ret.addPropertyResult("authToken","AuthToken",properties.AuthToken!=null?cfn_parse.FromCloudFormation.getString(properties.AuthToken):void 0),ret.addPropertyResult("automaticFailoverEnabled","AutomaticFailoverEnabled",properties.AutomaticFailoverEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutomaticFailoverEnabled):void 0),ret.addPropertyResult("autoMinorVersionUpgrade","AutoMinorVersionUpgrade",properties.AutoMinorVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade):void 0),ret.addPropertyResult("cacheNodeType","CacheNodeType",properties.CacheNodeType!=null?cfn_parse.FromCloudFormation.getString(properties.CacheNodeType):void 0),ret.addPropertyResult("cacheParameterGroupName","CacheParameterGroupName",properties.CacheParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheParameterGroupName):void 0),ret.addPropertyResult("cacheSecurityGroupNames","CacheSecurityGroupNames",properties.CacheSecurityGroupNames!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.CacheSecurityGroupNames):void 0),ret.addPropertyResult("cacheSubnetGroupName","CacheSubnetGroupName",properties.CacheSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheSubnetGroupName):void 0),ret.addPropertyResult("clusterMode","ClusterMode",properties.ClusterMode!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterMode):void 0),ret.addPropertyResult("dataTieringEnabled","DataTieringEnabled",properties.DataTieringEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DataTieringEnabled):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("engineVersion","EngineVersion",properties.EngineVersion!=null?cfn_parse.FromCloudFormation.getString(properties.EngineVersion):void 0),ret.addPropertyResult("globalReplicationGroupId","GlobalReplicationGroupId",properties.GlobalReplicationGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.GlobalReplicationGroupId):void 0),ret.addPropertyResult("ipDiscovery","IpDiscovery",properties.IpDiscovery!=null?cfn_parse.FromCloudFormation.getString(properties.IpDiscovery):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("logDeliveryConfigurations","LogDeliveryConfigurations",properties.LogDeliveryConfigurations!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationGroupLogDeliveryConfigurationRequestPropertyFromCloudFormation)(properties.LogDeliveryConfigurations):void 0),ret.addPropertyResult("multiAzEnabled","MultiAZEnabled",properties.MultiAZEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZEnabled):void 0),ret.addPropertyResult("networkType","NetworkType",properties.NetworkType!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkType):void 0),ret.addPropertyResult("nodeGroupConfiguration","NodeGroupConfiguration",properties.NodeGroupConfiguration!=null?cfn_parse.FromCloudFormation.getArray(CfnReplicationGroupNodeGroupConfigurationPropertyFromCloudFormation)(properties.NodeGroupConfiguration):void 0),ret.addPropertyResult("notificationTopicArn","NotificationTopicArn",properties.NotificationTopicArn!=null?cfn_parse.FromCloudFormation.getString(properties.NotificationTopicArn):void 0),ret.addPropertyResult("numCacheClusters","NumCacheClusters",properties.NumCacheClusters!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumCacheClusters):void 0),ret.addPropertyResult("numNodeGroups","NumNodeGroups",properties.NumNodeGroups!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumNodeGroups):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("preferredCacheClusterAZs","PreferredCacheClusterAZs",properties.PreferredCacheClusterAZs!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.PreferredCacheClusterAZs):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("primaryClusterId","PrimaryClusterId",properties.PrimaryClusterId!=null?cfn_parse.FromCloudFormation.getString(properties.PrimaryClusterId):void 0),ret.addPropertyResult("replicasPerNodeGroup","ReplicasPerNodeGroup",properties.ReplicasPerNodeGroup!=null?cfn_parse.FromCloudFormation.getNumber(properties.ReplicasPerNodeGroup):void 0),ret.addPropertyResult("replicationGroupDescription","ReplicationGroupDescription",properties.ReplicationGroupDescription!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupDescription):void 0),ret.addPropertyResult("replicationGroupId","ReplicationGroupId",properties.ReplicationGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.ReplicationGroupId):void 0),ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("snapshotArns","SnapshotArns",properties.SnapshotArns!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SnapshotArns):void 0),ret.addPropertyResult("snapshotName","SnapshotName",properties.SnapshotName!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotName):void 0),ret.addPropertyResult("snapshotRetentionLimit","SnapshotRetentionLimit",properties.SnapshotRetentionLimit!=null?cfn_parse.FromCloudFormation.getNumber(properties.SnapshotRetentionLimit):void 0),ret.addPropertyResult("snapshottingClusterId","SnapshottingClusterId",properties.SnapshottingClusterId!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshottingClusterId):void 0),ret.addPropertyResult("snapshotWindow","SnapshotWindow",properties.SnapshotWindow!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotWindow):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("transitEncryptionEnabled","TransitEncryptionEnabled",properties.TransitEncryptionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.TransitEncryptionEnabled):void 0),ret.addPropertyResult("transitEncryptionMode","TransitEncryptionMode",properties.TransitEncryptionMode!=null?cfn_parse.FromCloudFormation.getString(properties.TransitEncryptionMode):void 0),ret.addPropertyResult("userGroupIds","UserGroupIds",properties.UserGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.UserGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSecurityGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSecurityGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSecurityGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSecurityGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnSecurityGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSecurityGroup),error}cdk.requireProperty(props,"description",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::SecurityGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSecurityGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSecurityGroupPropsToCloudFormation(props)}}exports.CfnSecurityGroup=CfnSecurityGroup,_e=JSII_RTTI_SYMBOL_1,CfnSecurityGroup[_e]={fqn:"aws-cdk-lib.aws_elasticache.CfnSecurityGroup",version:"2.94.0"},CfnSecurityGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::SecurityGroup";function CfnSecurityGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnSecurityGroupProps"')}function convertCfnSecurityGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSecurityGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnSecurityGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSecurityGroupIngress extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSecurityGroupIngressPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSecurityGroupIngress(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnSecurityGroupIngressProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSecurityGroupIngress),error}cdk.requireProperty(props,"cacheSecurityGroupName",this),cdk.requireProperty(props,"ec2SecurityGroupName",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.cacheSecurityGroupName=props.cacheSecurityGroupName,this.ec2SecurityGroupName=props.ec2SecurityGroupName,this.ec2SecurityGroupOwnerId=props.ec2SecurityGroupOwnerId}get cfnProperties(){return{cacheSecurityGroupName:this.cacheSecurityGroupName,ec2SecurityGroupName:this.ec2SecurityGroupName,ec2SecurityGroupOwnerId:this.ec2SecurityGroupOwnerId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSecurityGroupIngressPropsToCloudFormation(props)}}exports.CfnSecurityGroupIngress=CfnSecurityGroupIngress,_f=JSII_RTTI_SYMBOL_1,CfnSecurityGroupIngress[_f]={fqn:"aws-cdk-lib.aws_elasticache.CfnSecurityGroupIngress",version:"2.94.0"},CfnSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::SecurityGroupIngress";function CfnSecurityGroupIngressPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cacheSecurityGroupName",cdk.requiredValidator)(properties.cacheSecurityGroupName)),errors.collect(cdk.propertyValidator("cacheSecurityGroupName",cdk.validateString)(properties.cacheSecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupName",cdk.requiredValidator)(properties.ec2SecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupName",cdk.validateString)(properties.ec2SecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupOwnerId",cdk.validateString)(properties.ec2SecurityGroupOwnerId)),errors.wrap('supplied properties not correct for "CfnSecurityGroupIngressProps"')}function convertCfnSecurityGroupIngressPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSecurityGroupIngressPropsValidator(properties).assertSuccess(),{CacheSecurityGroupName:cdk.stringToCloudFormation(properties.cacheSecurityGroupName),EC2SecurityGroupName:cdk.stringToCloudFormation(properties.ec2SecurityGroupName),EC2SecurityGroupOwnerId:cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId)}):properties}function CfnSecurityGroupIngressPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cacheSecurityGroupName","CacheSecurityGroupName",properties.CacheSecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheSecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupName","EC2SecurityGroupName",properties.EC2SecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupOwnerId","EC2SecurityGroupOwnerId",properties.EC2SecurityGroupOwnerId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnSubnetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnSubnetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnSubnetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnSubnetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnSubnetGroup),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"subnetIds",this),this.cacheSubnetGroupName=props.cacheSubnetGroupName,this.description=props.description,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::SubnetGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{cacheSubnetGroupName:this.cacheSubnetGroupName,description:this.description,subnetIds:this.subnetIds,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnSubnetGroupPropsToCloudFormation(props)}}exports.CfnSubnetGroup=CfnSubnetGroup,_g=JSII_RTTI_SYMBOL_1,CfnSubnetGroup[_g]={fqn:"aws-cdk-lib.aws_elasticache.CfnSubnetGroup",version:"2.94.0"},CfnSubnetGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::SubnetGroup";function CfnSubnetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cacheSubnetGroupName",cdk.validateString)(properties.cacheSubnetGroupName)),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnSubnetGroupProps"')}function convertCfnSubnetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnSubnetGroupPropsValidator(properties).assertSuccess(),{CacheSubnetGroupName:cdk.stringToCloudFormation(properties.cacheSubnetGroupName),Description:cdk.stringToCloudFormation(properties.description),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnSubnetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cacheSubnetGroupName","CacheSubnetGroupName",properties.CacheSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.CacheSubnetGroupName):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUser extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnUser(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnUser.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnUserProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUser),error}cdk.requireProperty(props,"engine",this),cdk.requireProperty(props,"userId",this),cdk.requireProperty(props,"userName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.accessString=props.accessString,this.authenticationMode=props.authenticationMode,this.engine=props.engine,this.noPasswordRequired=props.noPasswordRequired,this.passwords=props.passwords,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::User",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.userId=props.userId,this.userName=props.userName}get cfnProperties(){return{accessString:this.accessString,authenticationMode:this.authenticationMode,engine:this.engine,noPasswordRequired:this.noPasswordRequired,passwords:this.passwords,tags:this.tags.renderTags(),userId:this.userId,userName:this.userName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUser.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnUserPropsToCloudFormation(props)}}exports.CfnUser=CfnUser,_h=JSII_RTTI_SYMBOL_1,CfnUser[_h]={fqn:"aws-cdk-lib.aws_elasticache.CfnUser",version:"2.94.0"},CfnUser.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::User";function CfnUserAuthenticationModePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("passwords",cdk.listValidator(cdk.validateString))(properties.passwords)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "AuthenticationModeProperty"')}function convertCfnUserAuthenticationModePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserAuthenticationModePropertyValidator(properties).assertSuccess(),{Passwords:cdk.listMapper(cdk.stringToCloudFormation)(properties.passwords),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnUserAuthenticationModePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("passwords","Passwords",properties.Passwords!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Passwords):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnUserPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accessString",cdk.validateString)(properties.accessString)),errors.collect(cdk.propertyValidator("authenticationMode",cdk.validateObject)(properties.authenticationMode)),errors.collect(cdk.propertyValidator("engine",cdk.requiredValidator)(properties.engine)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("noPasswordRequired",cdk.validateBoolean)(properties.noPasswordRequired)),errors.collect(cdk.propertyValidator("passwords",cdk.listValidator(cdk.validateString))(properties.passwords)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("userId",cdk.requiredValidator)(properties.userId)),errors.collect(cdk.propertyValidator("userId",cdk.validateString)(properties.userId)),errors.collect(cdk.propertyValidator("userName",cdk.requiredValidator)(properties.userName)),errors.collect(cdk.propertyValidator("userName",cdk.validateString)(properties.userName)),errors.wrap('supplied properties not correct for "CfnUserProps"')}function convertCfnUserPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserPropsValidator(properties).assertSuccess(),{AccessString:cdk.stringToCloudFormation(properties.accessString),AuthenticationMode:cdk.objectToCloudFormation(properties.authenticationMode),Engine:cdk.stringToCloudFormation(properties.engine),NoPasswordRequired:cdk.booleanToCloudFormation(properties.noPasswordRequired),Passwords:cdk.listMapper(cdk.stringToCloudFormation)(properties.passwords),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UserId:cdk.stringToCloudFormation(properties.userId),UserName:cdk.stringToCloudFormation(properties.userName)}):properties}function CfnUserPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accessString","AccessString",properties.AccessString!=null?cfn_parse.FromCloudFormation.getString(properties.AccessString):void 0),ret.addPropertyResult("authenticationMode","AuthenticationMode",properties.AuthenticationMode!=null?cfn_parse.FromCloudFormation.getAny(properties.AuthenticationMode):void 0),ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("noPasswordRequired","NoPasswordRequired",properties.NoPasswordRequired!=null?cfn_parse.FromCloudFormation.getBoolean(properties.NoPasswordRequired):void 0),ret.addPropertyResult("passwords","Passwords",properties.Passwords!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.Passwords):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("userId","UserId",properties.UserId!=null?cfn_parse.FromCloudFormation.getString(properties.UserId):void 0),ret.addPropertyResult("userName","UserName",properties.UserName!=null?cfn_parse.FromCloudFormation.getString(properties.UserName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnUserGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnUserGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnUserGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnUserGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_elasticache_CfnUserGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnUserGroup),error}cdk.requireProperty(props,"engine",this),cdk.requireProperty(props,"userGroupId",this),cdk.requireProperty(props,"userIds",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.engine=props.engine,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::ElastiCache::UserGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.userGroupId=props.userGroupId,this.userIds=props.userIds}get cfnProperties(){return{engine:this.engine,tags:this.tags.renderTags(),userGroupId:this.userGroupId,userIds:this.userIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnUserGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnUserGroupPropsToCloudFormation(props)}}exports.CfnUserGroup=CfnUserGroup,_j=JSII_RTTI_SYMBOL_1,CfnUserGroup[_j]={fqn:"aws-cdk-lib.aws_elasticache.CfnUserGroup",version:"2.94.0"},CfnUserGroup.CFN_RESOURCE_TYPE_NAME="AWS::ElastiCache::UserGroup";function CfnUserGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("engine",cdk.requiredValidator)(properties.engine)),errors.collect(cdk.propertyValidator("engine",cdk.validateString)(properties.engine)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("userGroupId",cdk.requiredValidator)(properties.userGroupId)),errors.collect(cdk.propertyValidator("userGroupId",cdk.validateString)(properties.userGroupId)),errors.collect(cdk.propertyValidator("userIds",cdk.requiredValidator)(properties.userIds)),errors.collect(cdk.propertyValidator("userIds",cdk.listValidator(cdk.validateString))(properties.userIds)),errors.wrap('supplied properties not correct for "CfnUserGroupProps"')}function convertCfnUserGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnUserGroupPropsValidator(properties).assertSuccess(),{Engine:cdk.stringToCloudFormation(properties.engine),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UserGroupId:cdk.stringToCloudFormation(properties.userGroupId),UserIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.userIds)}):properties}function CfnUserGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("engine","Engine",properties.Engine!=null?cfn_parse.FromCloudFormation.getString(properties.Engine):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("userGroupId","UserGroupId",properties.UserGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.UserGroupId):void 0),ret.addPropertyResult("userIds","UserIds",properties.UserIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.UserIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
