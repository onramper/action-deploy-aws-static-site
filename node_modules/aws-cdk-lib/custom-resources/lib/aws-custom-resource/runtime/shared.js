"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.startsWithOneOf=exports.decodeCall=exports.respond=exports.filterKeys=exports.decodeSpecialValues=exports.flatten=exports.PHYSICAL_RESOURCE_ID_REFERENCE=void 0,exports.PHYSICAL_RESOURCE_ID_REFERENCE="PHYSICAL:RESOURCEID:";const decoder=new TextDecoder;function parseField(value){return Buffer.isBuffer(value)?value.toString("utf8"):ArrayBuffer.isView(value)?decoder.decode(value.buffer):value}function flatten(object){function _flatten(child,path=[]){return[].concat(...Object.keys(child).map(key=>{const childKey=parseField(child[key]);return typeof childKey=="object"&&childKey!==null?_flatten(childKey,path.concat([key])):{[path.concat([key]).join(".")]:childKey}}))}return Object.assign({},..._flatten(object))}exports.flatten=flatten;function decodeSpecialValues(object,physicalResourceId){return JSON.parse(JSON.stringify(object),(_k,v)=>{switch(v){case exports.PHYSICAL_RESOURCE_ID_REFERENCE:return physicalResourceId;default:return v}})}exports.decodeSpecialValues=decodeSpecialValues;function filterKeys(object,pred){return Object.entries(object).reduce((acc,[k,v])=>pred(k)?{...acc,[k]:v}:acc,{})}exports.filterKeys=filterKeys;function respond(event,responseStatus,reason,physicalResourceId,data){const responseBody=JSON.stringify({Status:responseStatus,Reason:reason,PhysicalResourceId:physicalResourceId,StackId:event.StackId,RequestId:event.RequestId,LogicalResourceId:event.LogicalResourceId,NoEcho:!1,Data:data});console.log("Responding",responseBody);const parsedUrl=require("url").parse(event.ResponseURL),requestOptions={hostname:parsedUrl.hostname,path:parsedUrl.path,method:"PUT",headers:{"content-type":"","content-length":Buffer.byteLength(responseBody,"utf8")}};return new Promise((resolve,reject)=>{try{const request=require("https").request(requestOptions,resolve);request.on("error",reject),request.write(responseBody),request.end()}catch(e){reject(e)}})}exports.respond=respond;function decodeCall(call){if(call)return JSON.parse(call)}exports.decodeCall=decodeCall;function startsWithOneOf(searchStrings){return function(string){for(const searchString of searchStrings)if(string.startsWith(searchString))return!0;return!1}}exports.startsWithOneOf=startsWithOneOf;
