"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnReportDefinition=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnReportDefinition extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnReportDefinitionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnReportDefinition(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnReportDefinition.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_cur_CfnReportDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnReportDefinition),error}cdk.requireProperty(props,"compression",this),cdk.requireProperty(props,"format",this),cdk.requireProperty(props,"refreshClosedReports",this),cdk.requireProperty(props,"reportName",this),cdk.requireProperty(props,"reportVersioning",this),cdk.requireProperty(props,"s3Bucket",this),cdk.requireProperty(props,"s3Prefix",this),cdk.requireProperty(props,"s3Region",this),cdk.requireProperty(props,"timeUnit",this),this.additionalArtifacts=props.additionalArtifacts,this.additionalSchemaElements=props.additionalSchemaElements,this.billingViewArn=props.billingViewArn,this.compression=props.compression,this.format=props.format,this.refreshClosedReports=props.refreshClosedReports,this.reportName=props.reportName,this.reportVersioning=props.reportVersioning,this.s3Bucket=props.s3Bucket,this.s3Prefix=props.s3Prefix,this.s3Region=props.s3Region,this.timeUnit=props.timeUnit}get cfnProperties(){return{additionalArtifacts:this.additionalArtifacts,additionalSchemaElements:this.additionalSchemaElements,billingViewArn:this.billingViewArn,compression:this.compression,format:this.format,refreshClosedReports:this.refreshClosedReports,reportName:this.reportName,reportVersioning:this.reportVersioning,s3Bucket:this.s3Bucket,s3Prefix:this.s3Prefix,s3Region:this.s3Region,timeUnit:this.timeUnit}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnReportDefinition.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnReportDefinitionPropsToCloudFormation(props)}}exports.CfnReportDefinition=CfnReportDefinition,_a=JSII_RTTI_SYMBOL_1,CfnReportDefinition[_a]={fqn:"aws-cdk-lib.aws_cur.CfnReportDefinition",version:"2.94.0"},CfnReportDefinition.CFN_RESOURCE_TYPE_NAME="AWS::CUR::ReportDefinition";function CfnReportDefinitionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("additionalArtifacts",cdk.listValidator(cdk.validateString))(properties.additionalArtifacts)),errors.collect(cdk.propertyValidator("additionalSchemaElements",cdk.listValidator(cdk.validateString))(properties.additionalSchemaElements)),errors.collect(cdk.propertyValidator("billingViewArn",cdk.validateString)(properties.billingViewArn)),errors.collect(cdk.propertyValidator("compression",cdk.requiredValidator)(properties.compression)),errors.collect(cdk.propertyValidator("compression",cdk.validateString)(properties.compression)),errors.collect(cdk.propertyValidator("format",cdk.requiredValidator)(properties.format)),errors.collect(cdk.propertyValidator("format",cdk.validateString)(properties.format)),errors.collect(cdk.propertyValidator("refreshClosedReports",cdk.requiredValidator)(properties.refreshClosedReports)),errors.collect(cdk.propertyValidator("refreshClosedReports",cdk.validateBoolean)(properties.refreshClosedReports)),errors.collect(cdk.propertyValidator("reportName",cdk.requiredValidator)(properties.reportName)),errors.collect(cdk.propertyValidator("reportName",cdk.validateString)(properties.reportName)),errors.collect(cdk.propertyValidator("reportVersioning",cdk.requiredValidator)(properties.reportVersioning)),errors.collect(cdk.propertyValidator("reportVersioning",cdk.validateString)(properties.reportVersioning)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.requiredValidator)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Bucket",cdk.validateString)(properties.s3Bucket)),errors.collect(cdk.propertyValidator("s3Prefix",cdk.requiredValidator)(properties.s3Prefix)),errors.collect(cdk.propertyValidator("s3Prefix",cdk.validateString)(properties.s3Prefix)),errors.collect(cdk.propertyValidator("s3Region",cdk.requiredValidator)(properties.s3Region)),errors.collect(cdk.propertyValidator("s3Region",cdk.validateString)(properties.s3Region)),errors.collect(cdk.propertyValidator("timeUnit",cdk.requiredValidator)(properties.timeUnit)),errors.collect(cdk.propertyValidator("timeUnit",cdk.validateString)(properties.timeUnit)),errors.wrap('supplied properties not correct for "CfnReportDefinitionProps"')}function convertCfnReportDefinitionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnReportDefinitionPropsValidator(properties).assertSuccess(),{AdditionalArtifacts:cdk.listMapper(cdk.stringToCloudFormation)(properties.additionalArtifacts),AdditionalSchemaElements:cdk.listMapper(cdk.stringToCloudFormation)(properties.additionalSchemaElements),BillingViewArn:cdk.stringToCloudFormation(properties.billingViewArn),Compression:cdk.stringToCloudFormation(properties.compression),Format:cdk.stringToCloudFormation(properties.format),RefreshClosedReports:cdk.booleanToCloudFormation(properties.refreshClosedReports),ReportName:cdk.stringToCloudFormation(properties.reportName),ReportVersioning:cdk.stringToCloudFormation(properties.reportVersioning),S3Bucket:cdk.stringToCloudFormation(properties.s3Bucket),S3Prefix:cdk.stringToCloudFormation(properties.s3Prefix),S3Region:cdk.stringToCloudFormation(properties.s3Region),TimeUnit:cdk.stringToCloudFormation(properties.timeUnit)}):properties}function CfnReportDefinitionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("additionalArtifacts","AdditionalArtifacts",properties.AdditionalArtifacts!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AdditionalArtifacts):void 0),ret.addPropertyResult("additionalSchemaElements","AdditionalSchemaElements",properties.AdditionalSchemaElements!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.AdditionalSchemaElements):void 0),ret.addPropertyResult("billingViewArn","BillingViewArn",properties.BillingViewArn!=null?cfn_parse.FromCloudFormation.getString(properties.BillingViewArn):void 0),ret.addPropertyResult("compression","Compression",properties.Compression!=null?cfn_parse.FromCloudFormation.getString(properties.Compression):void 0),ret.addPropertyResult("format","Format",properties.Format!=null?cfn_parse.FromCloudFormation.getString(properties.Format):void 0),ret.addPropertyResult("refreshClosedReports","RefreshClosedReports",properties.RefreshClosedReports!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RefreshClosedReports):void 0),ret.addPropertyResult("reportName","ReportName",properties.ReportName!=null?cfn_parse.FromCloudFormation.getString(properties.ReportName):void 0),ret.addPropertyResult("reportVersioning","ReportVersioning",properties.ReportVersioning!=null?cfn_parse.FromCloudFormation.getString(properties.ReportVersioning):void 0),ret.addPropertyResult("s3Bucket","S3Bucket",properties.S3Bucket!=null?cfn_parse.FromCloudFormation.getString(properties.S3Bucket):void 0),ret.addPropertyResult("s3Prefix","S3Prefix",properties.S3Prefix!=null?cfn_parse.FromCloudFormation.getString(properties.S3Prefix):void 0),ret.addPropertyResult("s3Region","S3Region",properties.S3Region!=null?cfn_parse.FromCloudFormation.getString(properties.S3Region):void 0),ret.addPropertyResult("timeUnit","TimeUnit",properties.TimeUnit!=null?cfn_parse.FromCloudFormation.getString(properties.TimeUnit):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
