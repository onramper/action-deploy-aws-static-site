"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnScheduledAction=exports.CfnEventSubscription=exports.CfnEndpointAuthorization=exports.CfnEndpointAccess=exports.CfnClusterSubnetGroup=exports.CfnClusterSecurityGroupIngress=exports.CfnClusterSecurityGroup=exports.CfnClusterParameterGroup=exports.CfnCluster=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnCluster extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnCluster(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnCluster.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnClusterProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnCluster),error}cdk.requireProperty(props,"clusterType",this),cdk.requireProperty(props,"dbName",this),cdk.requireProperty(props,"masterUsername",this),cdk.requireProperty(props,"masterUserPassword",this),cdk.requireProperty(props,"nodeType",this),this.attrDeferMaintenanceIdentifier=cdk.Token.asString(this.getAtt("DeferMaintenanceIdentifier",cdk.ResolutionTypeHint.STRING)),this.attrEndpointAddress=cdk.Token.asString(this.getAtt("Endpoint.Address",cdk.ResolutionTypeHint.STRING)),this.attrEndpointPort=cdk.Token.asString(this.getAtt("Endpoint.Port",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.allowVersionUpgrade=props.allowVersionUpgrade,this.aquaConfigurationStatus=props.aquaConfigurationStatus,this.automatedSnapshotRetentionPeriod=props.automatedSnapshotRetentionPeriod,this.availabilityZone=props.availabilityZone,this.availabilityZoneRelocation=props.availabilityZoneRelocation,this.availabilityZoneRelocationStatus=props.availabilityZoneRelocationStatus,this.classic=props.classic,this.clusterIdentifier=props.clusterIdentifier,this.clusterParameterGroupName=props.clusterParameterGroupName,this.clusterSecurityGroups=props.clusterSecurityGroups,this.clusterSubnetGroupName=props.clusterSubnetGroupName,this.clusterType=props.clusterType,this.clusterVersion=props.clusterVersion,this.dbName=props.dbName,this.deferMaintenance=props.deferMaintenance,this.deferMaintenanceDuration=props.deferMaintenanceDuration,this.deferMaintenanceEndTime=props.deferMaintenanceEndTime,this.deferMaintenanceStartTime=props.deferMaintenanceStartTime,this.destinationRegion=props.destinationRegion,this.elasticIp=props.elasticIp,this.encrypted=props.encrypted,this.endpoint=props.endpoint,this.enhancedVpcRouting=props.enhancedVpcRouting,this.hsmClientCertificateIdentifier=props.hsmClientCertificateIdentifier,this.hsmConfigurationIdentifier=props.hsmConfigurationIdentifier,this.iamRoles=props.iamRoles,this.kmsKeyId=props.kmsKeyId,this.loggingProperties=props.loggingProperties,this.maintenanceTrackName=props.maintenanceTrackName,this.manualSnapshotRetentionPeriod=props.manualSnapshotRetentionPeriod,this.masterUsername=props.masterUsername,this.masterUserPassword=props.masterUserPassword,this.nodeType=props.nodeType,this.numberOfNodes=props.numberOfNodes,this.ownerAccount=props.ownerAccount,this.port=props.port,this.preferredMaintenanceWindow=props.preferredMaintenanceWindow,this.publiclyAccessible=props.publiclyAccessible,this.resourceAction=props.resourceAction,this.revisionTarget=props.revisionTarget,this.rotateEncryptionKey=props.rotateEncryptionKey,this.snapshotClusterIdentifier=props.snapshotClusterIdentifier,this.snapshotCopyGrantName=props.snapshotCopyGrantName,this.snapshotCopyManual=props.snapshotCopyManual,this.snapshotCopyRetentionPeriod=props.snapshotCopyRetentionPeriod,this.snapshotIdentifier=props.snapshotIdentifier,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Redshift::Cluster",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds,this.node.scope!=null&&cdk.Resource.isResource(this.node.scope)&&this.node.addValidation({validate:()=>this.cfnOptions.deletionPolicy===void 0?["'AWS::Redshift::Cluster' is a stateful resource type, and you must specify a Removal Policy for it. Call 'resource.applyRemovalPolicy()'."]:[]})}get cfnProperties(){return{allowVersionUpgrade:this.allowVersionUpgrade,aquaConfigurationStatus:this.aquaConfigurationStatus,automatedSnapshotRetentionPeriod:this.automatedSnapshotRetentionPeriod,availabilityZone:this.availabilityZone,availabilityZoneRelocation:this.availabilityZoneRelocation,availabilityZoneRelocationStatus:this.availabilityZoneRelocationStatus,classic:this.classic,clusterIdentifier:this.clusterIdentifier,clusterParameterGroupName:this.clusterParameterGroupName,clusterSecurityGroups:this.clusterSecurityGroups,clusterSubnetGroupName:this.clusterSubnetGroupName,clusterType:this.clusterType,clusterVersion:this.clusterVersion,dbName:this.dbName,deferMaintenance:this.deferMaintenance,deferMaintenanceDuration:this.deferMaintenanceDuration,deferMaintenanceEndTime:this.deferMaintenanceEndTime,deferMaintenanceStartTime:this.deferMaintenanceStartTime,destinationRegion:this.destinationRegion,elasticIp:this.elasticIp,encrypted:this.encrypted,endpoint:this.endpoint,enhancedVpcRouting:this.enhancedVpcRouting,hsmClientCertificateIdentifier:this.hsmClientCertificateIdentifier,hsmConfigurationIdentifier:this.hsmConfigurationIdentifier,iamRoles:this.iamRoles,kmsKeyId:this.kmsKeyId,loggingProperties:this.loggingProperties,maintenanceTrackName:this.maintenanceTrackName,manualSnapshotRetentionPeriod:this.manualSnapshotRetentionPeriod,masterUsername:this.masterUsername,masterUserPassword:this.masterUserPassword,nodeType:this.nodeType,numberOfNodes:this.numberOfNodes,ownerAccount:this.ownerAccount,port:this.port,preferredMaintenanceWindow:this.preferredMaintenanceWindow,publiclyAccessible:this.publiclyAccessible,resourceAction:this.resourceAction,revisionTarget:this.revisionTarget,rotateEncryptionKey:this.rotateEncryptionKey,snapshotClusterIdentifier:this.snapshotClusterIdentifier,snapshotCopyGrantName:this.snapshotCopyGrantName,snapshotCopyManual:this.snapshotCopyManual,snapshotCopyRetentionPeriod:this.snapshotCopyRetentionPeriod,snapshotIdentifier:this.snapshotIdentifier,tags:this.tags.renderTags(),vpcSecurityGroupIds:this.vpcSecurityGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnCluster.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterPropsToCloudFormation(props)}}exports.CfnCluster=CfnCluster,_a=JSII_RTTI_SYMBOL_1,CfnCluster[_a]={fqn:"aws-cdk-lib.aws_redshift.CfnCluster",version:"2.94.0"},CfnCluster.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::Cluster";function CfnClusterLoggingPropertiesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bucketName",cdk.requiredValidator)(properties.bucketName)),errors.collect(cdk.propertyValidator("bucketName",cdk.validateString)(properties.bucketName)),errors.collect(cdk.propertyValidator("s3KeyPrefix",cdk.validateString)(properties.s3KeyPrefix)),errors.wrap('supplied properties not correct for "LoggingPropertiesProperty"')}function convertCfnClusterLoggingPropertiesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterLoggingPropertiesPropertyValidator(properties).assertSuccess(),{BucketName:cdk.stringToCloudFormation(properties.bucketName),S3KeyPrefix:cdk.stringToCloudFormation(properties.s3KeyPrefix)}):properties}function CfnClusterLoggingPropertiesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bucketName","BucketName",properties.BucketName!=null?cfn_parse.FromCloudFormation.getString(properties.BucketName):void 0),ret.addPropertyResult("s3KeyPrefix","S3KeyPrefix",properties.S3KeyPrefix!=null?cfn_parse.FromCloudFormation.getString(properties.S3KeyPrefix):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnClusterEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("address",cdk.validateString)(properties.address)),errors.collect(cdk.propertyValidator("port",cdk.validateString)(properties.port)),errors.wrap('supplied properties not correct for "EndpointProperty"')}function convertCfnClusterEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterEndpointPropertyValidator(properties).assertSuccess(),{Address:cdk.stringToCloudFormation(properties.address),Port:cdk.stringToCloudFormation(properties.port)}):properties}function CfnClusterEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("address","Address",properties.Address!=null?cfn_parse.FromCloudFormation.getString(properties.Address):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getString(properties.Port):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnClusterPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("allowVersionUpgrade",cdk.validateBoolean)(properties.allowVersionUpgrade)),errors.collect(cdk.propertyValidator("aquaConfigurationStatus",cdk.validateString)(properties.aquaConfigurationStatus)),errors.collect(cdk.propertyValidator("automatedSnapshotRetentionPeriod",cdk.validateNumber)(properties.automatedSnapshotRetentionPeriod)),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("availabilityZoneRelocation",cdk.validateBoolean)(properties.availabilityZoneRelocation)),errors.collect(cdk.propertyValidator("availabilityZoneRelocationStatus",cdk.validateString)(properties.availabilityZoneRelocationStatus)),errors.collect(cdk.propertyValidator("classic",cdk.validateBoolean)(properties.classic)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterParameterGroupName",cdk.validateString)(properties.clusterParameterGroupName)),errors.collect(cdk.propertyValidator("clusterSecurityGroups",cdk.listValidator(cdk.validateString))(properties.clusterSecurityGroups)),errors.collect(cdk.propertyValidator("clusterSubnetGroupName",cdk.validateString)(properties.clusterSubnetGroupName)),errors.collect(cdk.propertyValidator("clusterType",cdk.requiredValidator)(properties.clusterType)),errors.collect(cdk.propertyValidator("clusterType",cdk.validateString)(properties.clusterType)),errors.collect(cdk.propertyValidator("clusterVersion",cdk.validateString)(properties.clusterVersion)),errors.collect(cdk.propertyValidator("dbName",cdk.requiredValidator)(properties.dbName)),errors.collect(cdk.propertyValidator("dbName",cdk.validateString)(properties.dbName)),errors.collect(cdk.propertyValidator("deferMaintenance",cdk.validateBoolean)(properties.deferMaintenance)),errors.collect(cdk.propertyValidator("deferMaintenanceDuration",cdk.validateNumber)(properties.deferMaintenanceDuration)),errors.collect(cdk.propertyValidator("deferMaintenanceEndTime",cdk.validateString)(properties.deferMaintenanceEndTime)),errors.collect(cdk.propertyValidator("deferMaintenanceStartTime",cdk.validateString)(properties.deferMaintenanceStartTime)),errors.collect(cdk.propertyValidator("destinationRegion",cdk.validateString)(properties.destinationRegion)),errors.collect(cdk.propertyValidator("elasticIp",cdk.validateString)(properties.elasticIp)),errors.collect(cdk.propertyValidator("encrypted",cdk.validateBoolean)(properties.encrypted)),errors.collect(cdk.propertyValidator("endpoint",CfnClusterEndpointPropertyValidator)(properties.endpoint)),errors.collect(cdk.propertyValidator("enhancedVpcRouting",cdk.validateBoolean)(properties.enhancedVpcRouting)),errors.collect(cdk.propertyValidator("hsmClientCertificateIdentifier",cdk.validateString)(properties.hsmClientCertificateIdentifier)),errors.collect(cdk.propertyValidator("hsmConfigurationIdentifier",cdk.validateString)(properties.hsmConfigurationIdentifier)),errors.collect(cdk.propertyValidator("iamRoles",cdk.listValidator(cdk.validateString))(properties.iamRoles)),errors.collect(cdk.propertyValidator("kmsKeyId",cdk.validateString)(properties.kmsKeyId)),errors.collect(cdk.propertyValidator("loggingProperties",CfnClusterLoggingPropertiesPropertyValidator)(properties.loggingProperties)),errors.collect(cdk.propertyValidator("maintenanceTrackName",cdk.validateString)(properties.maintenanceTrackName)),errors.collect(cdk.propertyValidator("manualSnapshotRetentionPeriod",cdk.validateNumber)(properties.manualSnapshotRetentionPeriod)),errors.collect(cdk.propertyValidator("masterUserPassword",cdk.requiredValidator)(properties.masterUserPassword)),errors.collect(cdk.propertyValidator("masterUserPassword",cdk.validateString)(properties.masterUserPassword)),errors.collect(cdk.propertyValidator("masterUsername",cdk.requiredValidator)(properties.masterUsername)),errors.collect(cdk.propertyValidator("masterUsername",cdk.validateString)(properties.masterUsername)),errors.collect(cdk.propertyValidator("nodeType",cdk.requiredValidator)(properties.nodeType)),errors.collect(cdk.propertyValidator("nodeType",cdk.validateString)(properties.nodeType)),errors.collect(cdk.propertyValidator("numberOfNodes",cdk.validateNumber)(properties.numberOfNodes)),errors.collect(cdk.propertyValidator("ownerAccount",cdk.validateString)(properties.ownerAccount)),errors.collect(cdk.propertyValidator("port",cdk.validateNumber)(properties.port)),errors.collect(cdk.propertyValidator("preferredMaintenanceWindow",cdk.validateString)(properties.preferredMaintenanceWindow)),errors.collect(cdk.propertyValidator("publiclyAccessible",cdk.validateBoolean)(properties.publiclyAccessible)),errors.collect(cdk.propertyValidator("resourceAction",cdk.validateString)(properties.resourceAction)),errors.collect(cdk.propertyValidator("revisionTarget",cdk.validateString)(properties.revisionTarget)),errors.collect(cdk.propertyValidator("rotateEncryptionKey",cdk.validateBoolean)(properties.rotateEncryptionKey)),errors.collect(cdk.propertyValidator("snapshotClusterIdentifier",cdk.validateString)(properties.snapshotClusterIdentifier)),errors.collect(cdk.propertyValidator("snapshotCopyGrantName",cdk.validateString)(properties.snapshotCopyGrantName)),errors.collect(cdk.propertyValidator("snapshotCopyManual",cdk.validateBoolean)(properties.snapshotCopyManual)),errors.collect(cdk.propertyValidator("snapshotCopyRetentionPeriod",cdk.validateNumber)(properties.snapshotCopyRetentionPeriod)),errors.collect(cdk.propertyValidator("snapshotIdentifier",cdk.validateString)(properties.snapshotIdentifier)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnClusterProps"')}function convertCfnClusterPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterPropsValidator(properties).assertSuccess(),{AllowVersionUpgrade:cdk.booleanToCloudFormation(properties.allowVersionUpgrade),AquaConfigurationStatus:cdk.stringToCloudFormation(properties.aquaConfigurationStatus),AutomatedSnapshotRetentionPeriod:cdk.numberToCloudFormation(properties.automatedSnapshotRetentionPeriod),AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),AvailabilityZoneRelocation:cdk.booleanToCloudFormation(properties.availabilityZoneRelocation),AvailabilityZoneRelocationStatus:cdk.stringToCloudFormation(properties.availabilityZoneRelocationStatus),Classic:cdk.booleanToCloudFormation(properties.classic),ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier),ClusterParameterGroupName:cdk.stringToCloudFormation(properties.clusterParameterGroupName),ClusterSecurityGroups:cdk.listMapper(cdk.stringToCloudFormation)(properties.clusterSecurityGroups),ClusterSubnetGroupName:cdk.stringToCloudFormation(properties.clusterSubnetGroupName),ClusterType:cdk.stringToCloudFormation(properties.clusterType),ClusterVersion:cdk.stringToCloudFormation(properties.clusterVersion),DBName:cdk.stringToCloudFormation(properties.dbName),DeferMaintenance:cdk.booleanToCloudFormation(properties.deferMaintenance),DeferMaintenanceDuration:cdk.numberToCloudFormation(properties.deferMaintenanceDuration),DeferMaintenanceEndTime:cdk.stringToCloudFormation(properties.deferMaintenanceEndTime),DeferMaintenanceStartTime:cdk.stringToCloudFormation(properties.deferMaintenanceStartTime),DestinationRegion:cdk.stringToCloudFormation(properties.destinationRegion),ElasticIp:cdk.stringToCloudFormation(properties.elasticIp),Encrypted:cdk.booleanToCloudFormation(properties.encrypted),Endpoint:convertCfnClusterEndpointPropertyToCloudFormation(properties.endpoint),EnhancedVpcRouting:cdk.booleanToCloudFormation(properties.enhancedVpcRouting),HsmClientCertificateIdentifier:cdk.stringToCloudFormation(properties.hsmClientCertificateIdentifier),HsmConfigurationIdentifier:cdk.stringToCloudFormation(properties.hsmConfigurationIdentifier),IamRoles:cdk.listMapper(cdk.stringToCloudFormation)(properties.iamRoles),KmsKeyId:cdk.stringToCloudFormation(properties.kmsKeyId),LoggingProperties:convertCfnClusterLoggingPropertiesPropertyToCloudFormation(properties.loggingProperties),MaintenanceTrackName:cdk.stringToCloudFormation(properties.maintenanceTrackName),ManualSnapshotRetentionPeriod:cdk.numberToCloudFormation(properties.manualSnapshotRetentionPeriod),MasterUserPassword:cdk.stringToCloudFormation(properties.masterUserPassword),MasterUsername:cdk.stringToCloudFormation(properties.masterUsername),NodeType:cdk.stringToCloudFormation(properties.nodeType),NumberOfNodes:cdk.numberToCloudFormation(properties.numberOfNodes),OwnerAccount:cdk.stringToCloudFormation(properties.ownerAccount),Port:cdk.numberToCloudFormation(properties.port),PreferredMaintenanceWindow:cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),PubliclyAccessible:cdk.booleanToCloudFormation(properties.publiclyAccessible),ResourceAction:cdk.stringToCloudFormation(properties.resourceAction),RevisionTarget:cdk.stringToCloudFormation(properties.revisionTarget),RotateEncryptionKey:cdk.booleanToCloudFormation(properties.rotateEncryptionKey),SnapshotClusterIdentifier:cdk.stringToCloudFormation(properties.snapshotClusterIdentifier),SnapshotCopyGrantName:cdk.stringToCloudFormation(properties.snapshotCopyGrantName),SnapshotCopyManual:cdk.booleanToCloudFormation(properties.snapshotCopyManual),SnapshotCopyRetentionPeriod:cdk.numberToCloudFormation(properties.snapshotCopyRetentionPeriod),SnapshotIdentifier:cdk.stringToCloudFormation(properties.snapshotIdentifier),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnClusterPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("allowVersionUpgrade","AllowVersionUpgrade",properties.AllowVersionUpgrade!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AllowVersionUpgrade):void 0),ret.addPropertyResult("aquaConfigurationStatus","AquaConfigurationStatus",properties.AquaConfigurationStatus!=null?cfn_parse.FromCloudFormation.getString(properties.AquaConfigurationStatus):void 0),ret.addPropertyResult("automatedSnapshotRetentionPeriod","AutomatedSnapshotRetentionPeriod",properties.AutomatedSnapshotRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.AutomatedSnapshotRetentionPeriod):void 0),ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("availabilityZoneRelocation","AvailabilityZoneRelocation",properties.AvailabilityZoneRelocation!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AvailabilityZoneRelocation):void 0),ret.addPropertyResult("availabilityZoneRelocationStatus","AvailabilityZoneRelocationStatus",properties.AvailabilityZoneRelocationStatus!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZoneRelocationStatus):void 0),ret.addPropertyResult("classic","Classic",properties.Classic!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Classic):void 0),ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addPropertyResult("clusterParameterGroupName","ClusterParameterGroupName",properties.ClusterParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterParameterGroupName):void 0),ret.addPropertyResult("clusterSecurityGroups","ClusterSecurityGroups",properties.ClusterSecurityGroups!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ClusterSecurityGroups):void 0),ret.addPropertyResult("clusterSubnetGroupName","ClusterSubnetGroupName",properties.ClusterSubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterSubnetGroupName):void 0),ret.addPropertyResult("clusterType","ClusterType",properties.ClusterType!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterType):void 0),ret.addPropertyResult("clusterVersion","ClusterVersion",properties.ClusterVersion!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterVersion):void 0),ret.addPropertyResult("dbName","DBName",properties.DBName!=null?cfn_parse.FromCloudFormation.getString(properties.DBName):void 0),ret.addPropertyResult("deferMaintenance","DeferMaintenance",properties.DeferMaintenance!=null?cfn_parse.FromCloudFormation.getBoolean(properties.DeferMaintenance):void 0),ret.addPropertyResult("deferMaintenanceDuration","DeferMaintenanceDuration",properties.DeferMaintenanceDuration!=null?cfn_parse.FromCloudFormation.getNumber(properties.DeferMaintenanceDuration):void 0),ret.addPropertyResult("deferMaintenanceEndTime","DeferMaintenanceEndTime",properties.DeferMaintenanceEndTime!=null?cfn_parse.FromCloudFormation.getString(properties.DeferMaintenanceEndTime):void 0),ret.addPropertyResult("deferMaintenanceStartTime","DeferMaintenanceStartTime",properties.DeferMaintenanceStartTime!=null?cfn_parse.FromCloudFormation.getString(properties.DeferMaintenanceStartTime):void 0),ret.addPropertyResult("destinationRegion","DestinationRegion",properties.DestinationRegion!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationRegion):void 0),ret.addPropertyResult("elasticIp","ElasticIp",properties.ElasticIp!=null?cfn_parse.FromCloudFormation.getString(properties.ElasticIp):void 0),ret.addPropertyResult("encrypted","Encrypted",properties.Encrypted!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Encrypted):void 0),ret.addPropertyResult("endpoint","Endpoint",properties.Endpoint!=null?CfnClusterEndpointPropertyFromCloudFormation(properties.Endpoint):void 0),ret.addPropertyResult("enhancedVpcRouting","EnhancedVpcRouting",properties.EnhancedVpcRouting!=null?cfn_parse.FromCloudFormation.getBoolean(properties.EnhancedVpcRouting):void 0),ret.addPropertyResult("hsmClientCertificateIdentifier","HsmClientCertificateIdentifier",properties.HsmClientCertificateIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.HsmClientCertificateIdentifier):void 0),ret.addPropertyResult("hsmConfigurationIdentifier","HsmConfigurationIdentifier",properties.HsmConfigurationIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.HsmConfigurationIdentifier):void 0),ret.addPropertyResult("iamRoles","IamRoles",properties.IamRoles!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.IamRoles):void 0),ret.addPropertyResult("kmsKeyId","KmsKeyId",properties.KmsKeyId!=null?cfn_parse.FromCloudFormation.getString(properties.KmsKeyId):void 0),ret.addPropertyResult("loggingProperties","LoggingProperties",properties.LoggingProperties!=null?CfnClusterLoggingPropertiesPropertyFromCloudFormation(properties.LoggingProperties):void 0),ret.addPropertyResult("maintenanceTrackName","MaintenanceTrackName",properties.MaintenanceTrackName!=null?cfn_parse.FromCloudFormation.getString(properties.MaintenanceTrackName):void 0),ret.addPropertyResult("manualSnapshotRetentionPeriod","ManualSnapshotRetentionPeriod",properties.ManualSnapshotRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.ManualSnapshotRetentionPeriod):void 0),ret.addPropertyResult("masterUsername","MasterUsername",properties.MasterUsername!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUsername):void 0),ret.addPropertyResult("masterUserPassword","MasterUserPassword",properties.MasterUserPassword!=null?cfn_parse.FromCloudFormation.getString(properties.MasterUserPassword):void 0),ret.addPropertyResult("nodeType","NodeType",properties.NodeType!=null?cfn_parse.FromCloudFormation.getString(properties.NodeType):void 0),ret.addPropertyResult("numberOfNodes","NumberOfNodes",properties.NumberOfNodes!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberOfNodes):void 0),ret.addPropertyResult("ownerAccount","OwnerAccount",properties.OwnerAccount!=null?cfn_parse.FromCloudFormation.getString(properties.OwnerAccount):void 0),ret.addPropertyResult("port","Port",properties.Port!=null?cfn_parse.FromCloudFormation.getNumber(properties.Port):void 0),ret.addPropertyResult("preferredMaintenanceWindow","PreferredMaintenanceWindow",properties.PreferredMaintenanceWindow!=null?cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow):void 0),ret.addPropertyResult("publiclyAccessible","PubliclyAccessible",properties.PubliclyAccessible!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible):void 0),ret.addPropertyResult("resourceAction","ResourceAction",properties.ResourceAction!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceAction):void 0),ret.addPropertyResult("revisionTarget","RevisionTarget",properties.RevisionTarget!=null?cfn_parse.FromCloudFormation.getString(properties.RevisionTarget):void 0),ret.addPropertyResult("rotateEncryptionKey","RotateEncryptionKey",properties.RotateEncryptionKey!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RotateEncryptionKey):void 0),ret.addPropertyResult("snapshotClusterIdentifier","SnapshotClusterIdentifier",properties.SnapshotClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotClusterIdentifier):void 0),ret.addPropertyResult("snapshotCopyGrantName","SnapshotCopyGrantName",properties.SnapshotCopyGrantName!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotCopyGrantName):void 0),ret.addPropertyResult("snapshotCopyManual","SnapshotCopyManual",properties.SnapshotCopyManual!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SnapshotCopyManual):void 0),ret.addPropertyResult("snapshotCopyRetentionPeriod","SnapshotCopyRetentionPeriod",properties.SnapshotCopyRetentionPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.SnapshotCopyRetentionPeriod):void 0),ret.addPropertyResult("snapshotIdentifier","SnapshotIdentifier",properties.SnapshotIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.SnapshotIdentifier):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnClusterParameterGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterParameterGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnClusterParameterGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnClusterParameterGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnClusterParameterGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnClusterParameterGroup),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"parameterGroupFamily",this),this.description=props.description,this.parameterGroupFamily=props.parameterGroupFamily,this.parameterGroupName=props.parameterGroupName,this.parameters=props.parameters,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Redshift::ClusterParameterGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,parameterGroupFamily:this.parameterGroupFamily,parameterGroupName:this.parameterGroupName,parameters:this.parameters,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnClusterParameterGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterParameterGroupPropsToCloudFormation(props)}}exports.CfnClusterParameterGroup=CfnClusterParameterGroup,_b=JSII_RTTI_SYMBOL_1,CfnClusterParameterGroup[_b]={fqn:"aws-cdk-lib.aws_redshift.CfnClusterParameterGroup",version:"2.94.0"},CfnClusterParameterGroup.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::ClusterParameterGroup";function CfnClusterParameterGroupParameterPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("parameterName",cdk.requiredValidator)(properties.parameterName)),errors.collect(cdk.propertyValidator("parameterName",cdk.validateString)(properties.parameterName)),errors.collect(cdk.propertyValidator("parameterValue",cdk.requiredValidator)(properties.parameterValue)),errors.collect(cdk.propertyValidator("parameterValue",cdk.validateString)(properties.parameterValue)),errors.wrap('supplied properties not correct for "ParameterProperty"')}function convertCfnClusterParameterGroupParameterPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterParameterGroupParameterPropertyValidator(properties).assertSuccess(),{ParameterName:cdk.stringToCloudFormation(properties.parameterName),ParameterValue:cdk.stringToCloudFormation(properties.parameterValue)}):properties}function CfnClusterParameterGroupParameterPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("parameterName","ParameterName",properties.ParameterName!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterName):void 0),ret.addPropertyResult("parameterValue","ParameterValue",properties.ParameterValue!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterValue):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnClusterParameterGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("parameterGroupFamily",cdk.requiredValidator)(properties.parameterGroupFamily)),errors.collect(cdk.propertyValidator("parameterGroupFamily",cdk.validateString)(properties.parameterGroupFamily)),errors.collect(cdk.propertyValidator("parameterGroupName",cdk.validateString)(properties.parameterGroupName)),errors.collect(cdk.propertyValidator("parameters",cdk.listValidator(CfnClusterParameterGroupParameterPropertyValidator))(properties.parameters)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnClusterParameterGroupProps"')}function convertCfnClusterParameterGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterParameterGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),ParameterGroupFamily:cdk.stringToCloudFormation(properties.parameterGroupFamily),ParameterGroupName:cdk.stringToCloudFormation(properties.parameterGroupName),Parameters:cdk.listMapper(convertCfnClusterParameterGroupParameterPropertyToCloudFormation)(properties.parameters),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnClusterParameterGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("parameterGroupFamily","ParameterGroupFamily",properties.ParameterGroupFamily!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterGroupFamily):void 0),ret.addPropertyResult("parameterGroupName","ParameterGroupName",properties.ParameterGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ParameterGroupName):void 0),ret.addPropertyResult("parameters","Parameters",properties.Parameters!=null?cfn_parse.FromCloudFormation.getArray(CfnClusterParameterGroupParameterPropertyFromCloudFormation)(properties.Parameters):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnClusterSecurityGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterSecurityGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnClusterSecurityGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnClusterSecurityGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnClusterSecurityGroup),error}cdk.requireProperty(props,"description",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Redshift::ClusterSecurityGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnClusterSecurityGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterSecurityGroupPropsToCloudFormation(props)}}exports.CfnClusterSecurityGroup=CfnClusterSecurityGroup,_c=JSII_RTTI_SYMBOL_1,CfnClusterSecurityGroup[_c]={fqn:"aws-cdk-lib.aws_redshift.CfnClusterSecurityGroup",version:"2.94.0"},CfnClusterSecurityGroup.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::ClusterSecurityGroup";function CfnClusterSecurityGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnClusterSecurityGroupProps"')}function convertCfnClusterSecurityGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterSecurityGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnClusterSecurityGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnClusterSecurityGroupIngress extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterSecurityGroupIngressPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnClusterSecurityGroupIngress(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnClusterSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnClusterSecurityGroupIngressProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnClusterSecurityGroupIngress),error}cdk.requireProperty(props,"clusterSecurityGroupName",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.cidrip=props.cidrip,this.clusterSecurityGroupName=props.clusterSecurityGroupName,this.ec2SecurityGroupName=props.ec2SecurityGroupName,this.ec2SecurityGroupOwnerId=props.ec2SecurityGroupOwnerId}get cfnProperties(){return{cidrip:this.cidrip,clusterSecurityGroupName:this.clusterSecurityGroupName,ec2SecurityGroupName:this.ec2SecurityGroupName,ec2SecurityGroupOwnerId:this.ec2SecurityGroupOwnerId}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnClusterSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterSecurityGroupIngressPropsToCloudFormation(props)}}exports.CfnClusterSecurityGroupIngress=CfnClusterSecurityGroupIngress,_d=JSII_RTTI_SYMBOL_1,CfnClusterSecurityGroupIngress[_d]={fqn:"aws-cdk-lib.aws_redshift.CfnClusterSecurityGroupIngress",version:"2.94.0"},CfnClusterSecurityGroupIngress.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::ClusterSecurityGroupIngress";function CfnClusterSecurityGroupIngressPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("cidrip",cdk.validateString)(properties.cidrip)),errors.collect(cdk.propertyValidator("clusterSecurityGroupName",cdk.requiredValidator)(properties.clusterSecurityGroupName)),errors.collect(cdk.propertyValidator("clusterSecurityGroupName",cdk.validateString)(properties.clusterSecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupName",cdk.validateString)(properties.ec2SecurityGroupName)),errors.collect(cdk.propertyValidator("ec2SecurityGroupOwnerId",cdk.validateString)(properties.ec2SecurityGroupOwnerId)),errors.wrap('supplied properties not correct for "CfnClusterSecurityGroupIngressProps"')}function convertCfnClusterSecurityGroupIngressPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterSecurityGroupIngressPropsValidator(properties).assertSuccess(),{CIDRIP:cdk.stringToCloudFormation(properties.cidrip),ClusterSecurityGroupName:cdk.stringToCloudFormation(properties.clusterSecurityGroupName),EC2SecurityGroupName:cdk.stringToCloudFormation(properties.ec2SecurityGroupName),EC2SecurityGroupOwnerId:cdk.stringToCloudFormation(properties.ec2SecurityGroupOwnerId)}):properties}function CfnClusterSecurityGroupIngressPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("cidrip","CIDRIP",properties.CIDRIP!=null?cfn_parse.FromCloudFormation.getString(properties.CIDRIP):void 0),ret.addPropertyResult("clusterSecurityGroupName","ClusterSecurityGroupName",properties.ClusterSecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterSecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupName","EC2SecurityGroupName",properties.EC2SecurityGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupName):void 0),ret.addPropertyResult("ec2SecurityGroupOwnerId","EC2SecurityGroupOwnerId",properties.EC2SecurityGroupOwnerId!=null?cfn_parse.FromCloudFormation.getString(properties.EC2SecurityGroupOwnerId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnClusterSubnetGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnClusterSubnetGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnClusterSubnetGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnClusterSubnetGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnClusterSubnetGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnClusterSubnetGroup),error}cdk.requireProperty(props,"description",this),cdk.requireProperty(props,"subnetIds",this),this.attrClusterSubnetGroupName=cdk.Token.asString(this.getAtt("ClusterSubnetGroupName",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.subnetIds=props.subnetIds,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Redshift::ClusterSubnetGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,subnetIds:this.subnetIds,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnClusterSubnetGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnClusterSubnetGroupPropsToCloudFormation(props)}}exports.CfnClusterSubnetGroup=CfnClusterSubnetGroup,_e=JSII_RTTI_SYMBOL_1,CfnClusterSubnetGroup[_e]={fqn:"aws-cdk-lib.aws_redshift.CfnClusterSubnetGroup",version:"2.94.0"},CfnClusterSubnetGroup.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::ClusterSubnetGroup";function CfnClusterSubnetGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.requiredValidator)(properties.description)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnClusterSubnetGroupProps"')}function convertCfnClusterSubnetGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnClusterSubnetGroupPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnClusterSubnetGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEndpointAccess extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEndpointAccessPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEndpointAccess(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEndpointAccess.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnEndpointAccessProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEndpointAccess),error}cdk.requireProperty(props,"clusterIdentifier",this),cdk.requireProperty(props,"endpointName",this),cdk.requireProperty(props,"subnetGroupName",this),cdk.requireProperty(props,"vpcSecurityGroupIds",this),this.attrAddress=cdk.Token.asString(this.getAtt("Address",cdk.ResolutionTypeHint.STRING)),this.attrEndpointCreateTime=cdk.Token.asString(this.getAtt("EndpointCreateTime",cdk.ResolutionTypeHint.STRING)),this.attrEndpointStatus=cdk.Token.asString(this.getAtt("EndpointStatus",cdk.ResolutionTypeHint.STRING)),this.attrPort=cdk.Token.asNumber(this.getAtt("Port",cdk.ResolutionTypeHint.NUMBER)),this.attrVpcEndpoint=this.getAtt("VpcEndpoint"),this.attrVpcEndpointNetworkInterfaces=this.getAtt("VpcEndpoint.NetworkInterfaces"),this.attrVpcEndpointVpcEndpointId=cdk.Token.asString(this.getAtt("VpcEndpoint.VpcEndpointId",cdk.ResolutionTypeHint.STRING)),this.attrVpcEndpointVpcId=cdk.Token.asString(this.getAtt("VpcEndpoint.VpcId",cdk.ResolutionTypeHint.STRING)),this.attrVpcSecurityGroups=this.getAtt("VpcSecurityGroups"),this.clusterIdentifier=props.clusterIdentifier,this.endpointName=props.endpointName,this.resourceOwner=props.resourceOwner,this.subnetGroupName=props.subnetGroupName,this.vpcSecurityGroupIds=props.vpcSecurityGroupIds}get cfnProperties(){return{clusterIdentifier:this.clusterIdentifier,endpointName:this.endpointName,resourceOwner:this.resourceOwner,subnetGroupName:this.subnetGroupName,vpcSecurityGroupIds:this.vpcSecurityGroupIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEndpointAccess.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEndpointAccessPropsToCloudFormation(props)}}exports.CfnEndpointAccess=CfnEndpointAccess,_f=JSII_RTTI_SYMBOL_1,CfnEndpointAccess[_f]={fqn:"aws-cdk-lib.aws_redshift.CfnEndpointAccess",version:"2.94.0"},CfnEndpointAccess.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::EndpointAccess";function CfnEndpointAccessVpcSecurityGroupPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("status",cdk.validateString)(properties.status)),errors.collect(cdk.propertyValidator("vpcSecurityGroupId",cdk.validateString)(properties.vpcSecurityGroupId)),errors.wrap('supplied properties not correct for "VpcSecurityGroupProperty"')}function convertCfnEndpointAccessVpcSecurityGroupPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointAccessVpcSecurityGroupPropertyValidator(properties).assertSuccess(),{Status:cdk.stringToCloudFormation(properties.status),VpcSecurityGroupId:cdk.stringToCloudFormation(properties.vpcSecurityGroupId)}):properties}function CfnEndpointAccessVpcSecurityGroupPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("status","Status",properties.Status!=null?cfn_parse.FromCloudFormation.getString(properties.Status):void 0),ret.addPropertyResult("vpcSecurityGroupId","VpcSecurityGroupId",properties.VpcSecurityGroupId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcSecurityGroupId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointAccessNetworkInterfacePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("availabilityZone",cdk.validateString)(properties.availabilityZone)),errors.collect(cdk.propertyValidator("networkInterfaceId",cdk.validateString)(properties.networkInterfaceId)),errors.collect(cdk.propertyValidator("privateIpAddress",cdk.validateString)(properties.privateIpAddress)),errors.collect(cdk.propertyValidator("subnetId",cdk.validateString)(properties.subnetId)),errors.wrap('supplied properties not correct for "NetworkInterfaceProperty"')}function convertCfnEndpointAccessNetworkInterfacePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointAccessNetworkInterfacePropertyValidator(properties).assertSuccess(),{AvailabilityZone:cdk.stringToCloudFormation(properties.availabilityZone),NetworkInterfaceId:cdk.stringToCloudFormation(properties.networkInterfaceId),PrivateIpAddress:cdk.stringToCloudFormation(properties.privateIpAddress),SubnetId:cdk.stringToCloudFormation(properties.subnetId)}):properties}function CfnEndpointAccessNetworkInterfacePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("availabilityZone","AvailabilityZone",properties.AvailabilityZone!=null?cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone):void 0),ret.addPropertyResult("networkInterfaceId","NetworkInterfaceId",properties.NetworkInterfaceId!=null?cfn_parse.FromCloudFormation.getString(properties.NetworkInterfaceId):void 0),ret.addPropertyResult("privateIpAddress","PrivateIpAddress",properties.PrivateIpAddress!=null?cfn_parse.FromCloudFormation.getString(properties.PrivateIpAddress):void 0),ret.addPropertyResult("subnetId","SubnetId",properties.SubnetId!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointAccessVpcEndpointPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("networkInterfaces",cdk.listValidator(CfnEndpointAccessNetworkInterfacePropertyValidator))(properties.networkInterfaces)),errors.collect(cdk.propertyValidator("vpcEndpointId",cdk.validateString)(properties.vpcEndpointId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "VpcEndpointProperty"')}function convertCfnEndpointAccessVpcEndpointPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointAccessVpcEndpointPropertyValidator(properties).assertSuccess(),{NetworkInterfaces:cdk.listMapper(convertCfnEndpointAccessNetworkInterfacePropertyToCloudFormation)(properties.networkInterfaces),VpcEndpointId:cdk.stringToCloudFormation(properties.vpcEndpointId),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnEndpointAccessVpcEndpointPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("networkInterfaces","NetworkInterfaces",properties.NetworkInterfaces!=null?cfn_parse.FromCloudFormation.getArray(CfnEndpointAccessNetworkInterfacePropertyFromCloudFormation)(properties.NetworkInterfaces):void 0),ret.addPropertyResult("vpcEndpointId","VpcEndpointId",properties.VpcEndpointId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcEndpointId):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnEndpointAccessPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.requiredValidator)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("endpointName",cdk.requiredValidator)(properties.endpointName)),errors.collect(cdk.propertyValidator("endpointName",cdk.validateString)(properties.endpointName)),errors.collect(cdk.propertyValidator("resourceOwner",cdk.validateString)(properties.resourceOwner)),errors.collect(cdk.propertyValidator("subnetGroupName",cdk.requiredValidator)(properties.subnetGroupName)),errors.collect(cdk.propertyValidator("subnetGroupName",cdk.validateString)(properties.subnetGroupName)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.requiredValidator)(properties.vpcSecurityGroupIds)),errors.collect(cdk.propertyValidator("vpcSecurityGroupIds",cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds)),errors.wrap('supplied properties not correct for "CfnEndpointAccessProps"')}function convertCfnEndpointAccessPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointAccessPropsValidator(properties).assertSuccess(),{ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier),EndpointName:cdk.stringToCloudFormation(properties.endpointName),ResourceOwner:cdk.stringToCloudFormation(properties.resourceOwner),SubnetGroupName:cdk.stringToCloudFormation(properties.subnetGroupName),VpcSecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds)}):properties}function CfnEndpointAccessPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addPropertyResult("endpointName","EndpointName",properties.EndpointName!=null?cfn_parse.FromCloudFormation.getString(properties.EndpointName):void 0),ret.addPropertyResult("resourceOwner","ResourceOwner",properties.ResourceOwner!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceOwner):void 0),ret.addPropertyResult("subnetGroupName","SubnetGroupName",properties.SubnetGroupName!=null?cfn_parse.FromCloudFormation.getString(properties.SubnetGroupName):void 0),ret.addPropertyResult("vpcSecurityGroupIds","VpcSecurityGroupIds",properties.VpcSecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcSecurityGroupIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEndpointAuthorization extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEndpointAuthorizationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEndpointAuthorization(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEndpointAuthorization.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnEndpointAuthorizationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEndpointAuthorization),error}cdk.requireProperty(props,"account",this),cdk.requireProperty(props,"clusterIdentifier",this),this.attrAllowedAllVpCs=this.getAtt("AllowedAllVPCs"),this.attrAllowedVpCs=cdk.Token.asList(this.getAtt("AllowedVPCs",cdk.ResolutionTypeHint.STRING_LIST)),this.attrAuthorizeTime=cdk.Token.asString(this.getAtt("AuthorizeTime",cdk.ResolutionTypeHint.STRING)),this.attrClusterStatus=cdk.Token.asString(this.getAtt("ClusterStatus",cdk.ResolutionTypeHint.STRING)),this.attrEndpointCount=cdk.Token.asNumber(this.getAtt("EndpointCount",cdk.ResolutionTypeHint.NUMBER)),this.attrGrantee=cdk.Token.asString(this.getAtt("Grantee",cdk.ResolutionTypeHint.STRING)),this.attrGrantor=cdk.Token.asString(this.getAtt("Grantor",cdk.ResolutionTypeHint.STRING)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.account=props.account,this.clusterIdentifier=props.clusterIdentifier,this.force=props.force,this.vpcIds=props.vpcIds}get cfnProperties(){return{account:this.account,clusterIdentifier:this.clusterIdentifier,force:this.force,vpcIds:this.vpcIds}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEndpointAuthorization.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEndpointAuthorizationPropsToCloudFormation(props)}}exports.CfnEndpointAuthorization=CfnEndpointAuthorization,_g=JSII_RTTI_SYMBOL_1,CfnEndpointAuthorization[_g]={fqn:"aws-cdk-lib.aws_redshift.CfnEndpointAuthorization",version:"2.94.0"},CfnEndpointAuthorization.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::EndpointAuthorization";function CfnEndpointAuthorizationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("account",cdk.requiredValidator)(properties.account)),errors.collect(cdk.propertyValidator("account",cdk.validateString)(properties.account)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.requiredValidator)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("force",cdk.validateBoolean)(properties.force)),errors.collect(cdk.propertyValidator("vpcIds",cdk.listValidator(cdk.validateString))(properties.vpcIds)),errors.wrap('supplied properties not correct for "CfnEndpointAuthorizationProps"')}function convertCfnEndpointAuthorizationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEndpointAuthorizationPropsValidator(properties).assertSuccess(),{Account:cdk.stringToCloudFormation(properties.account),ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier),Force:cdk.booleanToCloudFormation(properties.force),VpcIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcIds)}):properties}function CfnEndpointAuthorizationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("account","Account",properties.Account!=null?cfn_parse.FromCloudFormation.getString(properties.Account):void 0),ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addPropertyResult("force","Force",properties.Force!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Force):void 0),ret.addPropertyResult("vpcIds","VpcIds",properties.VpcIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.VpcIds):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnEventSubscription extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnEventSubscriptionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnEventSubscription(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnEventSubscription.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnEventSubscriptionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnEventSubscription),error}cdk.requireProperty(props,"subscriptionName",this),this.attrCustomerAwsId=cdk.Token.asString(this.getAtt("CustomerAwsId",cdk.ResolutionTypeHint.STRING)),this.attrCustSubscriptionId=cdk.Token.asString(this.getAtt("CustSubscriptionId",cdk.ResolutionTypeHint.STRING)),this.attrEventCategoriesList=cdk.Token.asList(this.getAtt("EventCategoriesList",cdk.ResolutionTypeHint.STRING_LIST)),this.attrSourceIdsList=cdk.Token.asList(this.getAtt("SourceIdsList",cdk.ResolutionTypeHint.STRING_LIST)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.attrSubscriptionCreationTime=cdk.Token.asString(this.getAtt("SubscriptionCreationTime",cdk.ResolutionTypeHint.STRING)),this.enabled=props.enabled,this.eventCategories=props.eventCategories,this.severity=props.severity,this.snsTopicArn=props.snsTopicArn,this.sourceIds=props.sourceIds,this.sourceType=props.sourceType,this.subscriptionName=props.subscriptionName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::Redshift::EventSubscription",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{enabled:this.enabled,eventCategories:this.eventCategories,severity:this.severity,snsTopicArn:this.snsTopicArn,sourceIds:this.sourceIds,sourceType:this.sourceType,subscriptionName:this.subscriptionName,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnEventSubscription.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnEventSubscriptionPropsToCloudFormation(props)}}exports.CfnEventSubscription=CfnEventSubscription,_h=JSII_RTTI_SYMBOL_1,CfnEventSubscription[_h]={fqn:"aws-cdk-lib.aws_redshift.CfnEventSubscription",version:"2.94.0"},CfnEventSubscription.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::EventSubscription";function CfnEventSubscriptionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("enabled",cdk.validateBoolean)(properties.enabled)),errors.collect(cdk.propertyValidator("eventCategories",cdk.listValidator(cdk.validateString))(properties.eventCategories)),errors.collect(cdk.propertyValidator("severity",cdk.validateString)(properties.severity)),errors.collect(cdk.propertyValidator("snsTopicArn",cdk.validateString)(properties.snsTopicArn)),errors.collect(cdk.propertyValidator("sourceIds",cdk.listValidator(cdk.validateString))(properties.sourceIds)),errors.collect(cdk.propertyValidator("sourceType",cdk.validateString)(properties.sourceType)),errors.collect(cdk.propertyValidator("subscriptionName",cdk.requiredValidator)(properties.subscriptionName)),errors.collect(cdk.propertyValidator("subscriptionName",cdk.validateString)(properties.subscriptionName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnEventSubscriptionProps"')}function convertCfnEventSubscriptionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnEventSubscriptionPropsValidator(properties).assertSuccess(),{Enabled:cdk.booleanToCloudFormation(properties.enabled),EventCategories:cdk.listMapper(cdk.stringToCloudFormation)(properties.eventCategories),Severity:cdk.stringToCloudFormation(properties.severity),SnsTopicArn:cdk.stringToCloudFormation(properties.snsTopicArn),SourceIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceIds),SourceType:cdk.stringToCloudFormation(properties.sourceType),SubscriptionName:cdk.stringToCloudFormation(properties.subscriptionName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnEventSubscriptionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("enabled","Enabled",properties.Enabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enabled):void 0),ret.addPropertyResult("eventCategories","EventCategories",properties.EventCategories!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.EventCategories):void 0),ret.addPropertyResult("severity","Severity",properties.Severity!=null?cfn_parse.FromCloudFormation.getString(properties.Severity):void 0),ret.addPropertyResult("snsTopicArn","SnsTopicArn",properties.SnsTopicArn!=null?cfn_parse.FromCloudFormation.getString(properties.SnsTopicArn):void 0),ret.addPropertyResult("sourceIds","SourceIds",properties.SourceIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SourceIds):void 0),ret.addPropertyResult("sourceType","SourceType",properties.SourceType!=null?cfn_parse.FromCloudFormation.getString(properties.SourceType):void 0),ret.addPropertyResult("subscriptionName","SubscriptionName",properties.SubscriptionName!=null?cfn_parse.FromCloudFormation.getString(properties.SubscriptionName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnScheduledAction extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnScheduledActionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnScheduledAction(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnScheduledAction.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_redshift_CfnScheduledActionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnScheduledAction),error}cdk.requireProperty(props,"scheduledActionName",this),this.attrNextInvocations=cdk.Token.asList(this.getAtt("NextInvocations",cdk.ResolutionTypeHint.STRING_LIST)),this.attrState=cdk.Token.asString(this.getAtt("State",cdk.ResolutionTypeHint.STRING)),this.enable=props.enable,this.endTime=props.endTime,this.iamRole=props.iamRole,this.schedule=props.schedule,this.scheduledActionDescription=props.scheduledActionDescription,this.scheduledActionName=props.scheduledActionName,this.startTime=props.startTime,this.targetAction=props.targetAction}get cfnProperties(){return{enable:this.enable,endTime:this.endTime,iamRole:this.iamRole,schedule:this.schedule,scheduledActionDescription:this.scheduledActionDescription,scheduledActionName:this.scheduledActionName,startTime:this.startTime,targetAction:this.targetAction}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnScheduledAction.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnScheduledActionPropsToCloudFormation(props)}}exports.CfnScheduledAction=CfnScheduledAction,_j=JSII_RTTI_SYMBOL_1,CfnScheduledAction[_j]={fqn:"aws-cdk-lib.aws_redshift.CfnScheduledAction",version:"2.94.0"},CfnScheduledAction.CFN_RESOURCE_TYPE_NAME="AWS::Redshift::ScheduledAction";function CfnScheduledActionResizeClusterMessagePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("classic",cdk.validateBoolean)(properties.classic)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.requiredValidator)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterType",cdk.validateString)(properties.clusterType)),errors.collect(cdk.propertyValidator("nodeType",cdk.validateString)(properties.nodeType)),errors.collect(cdk.propertyValidator("numberOfNodes",cdk.validateNumber)(properties.numberOfNodes)),errors.wrap('supplied properties not correct for "ResizeClusterMessageProperty"')}function convertCfnScheduledActionResizeClusterMessagePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnScheduledActionResizeClusterMessagePropertyValidator(properties).assertSuccess(),{Classic:cdk.booleanToCloudFormation(properties.classic),ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier),ClusterType:cdk.stringToCloudFormation(properties.clusterType),NodeType:cdk.stringToCloudFormation(properties.nodeType),NumberOfNodes:cdk.numberToCloudFormation(properties.numberOfNodes)}):properties}function CfnScheduledActionResizeClusterMessagePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("classic","Classic",properties.Classic!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Classic):void 0),ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addPropertyResult("clusterType","ClusterType",properties.ClusterType!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterType):void 0),ret.addPropertyResult("nodeType","NodeType",properties.NodeType!=null?cfn_parse.FromCloudFormation.getString(properties.NodeType):void 0),ret.addPropertyResult("numberOfNodes","NumberOfNodes",properties.NumberOfNodes!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberOfNodes):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnScheduledActionPauseClusterMessagePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.requiredValidator)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.wrap('supplied properties not correct for "PauseClusterMessageProperty"')}function convertCfnScheduledActionPauseClusterMessagePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnScheduledActionPauseClusterMessagePropertyValidator(properties).assertSuccess(),{ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier)}):properties}function CfnScheduledActionPauseClusterMessagePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnScheduledActionResumeClusterMessagePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.requiredValidator)(properties.clusterIdentifier)),errors.collect(cdk.propertyValidator("clusterIdentifier",cdk.validateString)(properties.clusterIdentifier)),errors.wrap('supplied properties not correct for "ResumeClusterMessageProperty"')}function convertCfnScheduledActionResumeClusterMessagePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnScheduledActionResumeClusterMessagePropertyValidator(properties).assertSuccess(),{ClusterIdentifier:cdk.stringToCloudFormation(properties.clusterIdentifier)}):properties}function CfnScheduledActionResumeClusterMessagePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("clusterIdentifier","ClusterIdentifier",properties.ClusterIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ClusterIdentifier):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnScheduledActionScheduledActionTypePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("pauseCluster",CfnScheduledActionPauseClusterMessagePropertyValidator)(properties.pauseCluster)),errors.collect(cdk.propertyValidator("resizeCluster",CfnScheduledActionResizeClusterMessagePropertyValidator)(properties.resizeCluster)),errors.collect(cdk.propertyValidator("resumeCluster",CfnScheduledActionResumeClusterMessagePropertyValidator)(properties.resumeCluster)),errors.wrap('supplied properties not correct for "ScheduledActionTypeProperty"')}function convertCfnScheduledActionScheduledActionTypePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnScheduledActionScheduledActionTypePropertyValidator(properties).assertSuccess(),{PauseCluster:convertCfnScheduledActionPauseClusterMessagePropertyToCloudFormation(properties.pauseCluster),ResizeCluster:convertCfnScheduledActionResizeClusterMessagePropertyToCloudFormation(properties.resizeCluster),ResumeCluster:convertCfnScheduledActionResumeClusterMessagePropertyToCloudFormation(properties.resumeCluster)}):properties}function CfnScheduledActionScheduledActionTypePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("pauseCluster","PauseCluster",properties.PauseCluster!=null?CfnScheduledActionPauseClusterMessagePropertyFromCloudFormation(properties.PauseCluster):void 0),ret.addPropertyResult("resizeCluster","ResizeCluster",properties.ResizeCluster!=null?CfnScheduledActionResizeClusterMessagePropertyFromCloudFormation(properties.ResizeCluster):void 0),ret.addPropertyResult("resumeCluster","ResumeCluster",properties.ResumeCluster!=null?CfnScheduledActionResumeClusterMessagePropertyFromCloudFormation(properties.ResumeCluster):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnScheduledActionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("enable",cdk.validateBoolean)(properties.enable)),errors.collect(cdk.propertyValidator("endTime",cdk.validateString)(properties.endTime)),errors.collect(cdk.propertyValidator("iamRole",cdk.validateString)(properties.iamRole)),errors.collect(cdk.propertyValidator("schedule",cdk.validateString)(properties.schedule)),errors.collect(cdk.propertyValidator("scheduledActionDescription",cdk.validateString)(properties.scheduledActionDescription)),errors.collect(cdk.propertyValidator("scheduledActionName",cdk.requiredValidator)(properties.scheduledActionName)),errors.collect(cdk.propertyValidator("scheduledActionName",cdk.validateString)(properties.scheduledActionName)),errors.collect(cdk.propertyValidator("startTime",cdk.validateString)(properties.startTime)),errors.collect(cdk.propertyValidator("targetAction",CfnScheduledActionScheduledActionTypePropertyValidator)(properties.targetAction)),errors.wrap('supplied properties not correct for "CfnScheduledActionProps"')}function convertCfnScheduledActionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnScheduledActionPropsValidator(properties).assertSuccess(),{Enable:cdk.booleanToCloudFormation(properties.enable),EndTime:cdk.stringToCloudFormation(properties.endTime),IamRole:cdk.stringToCloudFormation(properties.iamRole),Schedule:cdk.stringToCloudFormation(properties.schedule),ScheduledActionDescription:cdk.stringToCloudFormation(properties.scheduledActionDescription),ScheduledActionName:cdk.stringToCloudFormation(properties.scheduledActionName),StartTime:cdk.stringToCloudFormation(properties.startTime),TargetAction:convertCfnScheduledActionScheduledActionTypePropertyToCloudFormation(properties.targetAction)}):properties}function CfnScheduledActionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("enable","Enable",properties.Enable!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Enable):void 0),ret.addPropertyResult("endTime","EndTime",properties.EndTime!=null?cfn_parse.FromCloudFormation.getString(properties.EndTime):void 0),ret.addPropertyResult("iamRole","IamRole",properties.IamRole!=null?cfn_parse.FromCloudFormation.getString(properties.IamRole):void 0),ret.addPropertyResult("schedule","Schedule",properties.Schedule!=null?cfn_parse.FromCloudFormation.getString(properties.Schedule):void 0),ret.addPropertyResult("scheduledActionDescription","ScheduledActionDescription",properties.ScheduledActionDescription!=null?cfn_parse.FromCloudFormation.getString(properties.ScheduledActionDescription):void 0),ret.addPropertyResult("scheduledActionName","ScheduledActionName",properties.ScheduledActionName!=null?cfn_parse.FromCloudFormation.getString(properties.ScheduledActionName):void 0),ret.addPropertyResult("startTime","StartTime",properties.StartTime!=null?cfn_parse.FromCloudFormation.getString(properties.StartTime):void 0),ret.addPropertyResult("targetAction","TargetAction",properties.TargetAction!=null?CfnScheduledActionScheduledActionTypePropertyFromCloudFormation(properties.TargetAction):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
