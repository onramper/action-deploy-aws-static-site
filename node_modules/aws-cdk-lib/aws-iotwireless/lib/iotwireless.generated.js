"use strict";var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnWirelessGateway=exports.CfnWirelessDeviceImportTask=exports.CfnWirelessDevice=exports.CfnTaskDefinition=exports.CfnServiceProfile=exports.CfnPartnerAccount=exports.CfnNetworkAnalyzerConfiguration=exports.CfnMulticastGroup=exports.CfnFuotaTask=exports.CfnDeviceProfile=exports.CfnDestination=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnDestination extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDestinationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDestination(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDestination.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnDestinationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDestination),error}cdk.requireProperty(props,"expression",this),cdk.requireProperty(props,"expressionType",this),cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"roleArn",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.expression=props.expression,this.expressionType=props.expressionType,this.name=props.name,this.roleArn=props.roleArn,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::Destination",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,expression:this.expression,expressionType:this.expressionType,name:this.name,roleArn:this.roleArn,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDestination.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDestinationPropsToCloudFormation(props)}}exports.CfnDestination=CfnDestination,_a=JSII_RTTI_SYMBOL_1,CfnDestination[_a]={fqn:"aws-cdk-lib.aws_iotwireless.CfnDestination",version:"2.94.0"},CfnDestination.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::Destination";function CfnDestinationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("expression",cdk.requiredValidator)(properties.expression)),errors.collect(cdk.propertyValidator("expression",cdk.validateString)(properties.expression)),errors.collect(cdk.propertyValidator("expressionType",cdk.requiredValidator)(properties.expressionType)),errors.collect(cdk.propertyValidator("expressionType",cdk.validateString)(properties.expressionType)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("roleArn",cdk.requiredValidator)(properties.roleArn)),errors.collect(cdk.propertyValidator("roleArn",cdk.validateString)(properties.roleArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDestinationProps"')}function convertCfnDestinationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDestinationPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Expression:cdk.stringToCloudFormation(properties.expression),ExpressionType:cdk.stringToCloudFormation(properties.expressionType),Name:cdk.stringToCloudFormation(properties.name),RoleArn:cdk.stringToCloudFormation(properties.roleArn),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDestinationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("expression","Expression",properties.Expression!=null?cfn_parse.FromCloudFormation.getString(properties.Expression):void 0),ret.addPropertyResult("expressionType","ExpressionType",properties.ExpressionType!=null?cfn_parse.FromCloudFormation.getString(properties.ExpressionType):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse.FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnDeviceProfile extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDeviceProfilePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDeviceProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnDeviceProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnDeviceProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDeviceProfile),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::DeviceProfile",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDeviceProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDeviceProfilePropsToCloudFormation(props)}}exports.CfnDeviceProfile=CfnDeviceProfile,_b=JSII_RTTI_SYMBOL_1,CfnDeviceProfile[_b]={fqn:"aws-cdk-lib.aws_iotwireless.CfnDeviceProfile",version:"2.94.0"},CfnDeviceProfile.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::DeviceProfile";function CfnDeviceProfileLoRaWANDeviceProfilePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("classBTimeout",cdk.validateNumber)(properties.classBTimeout)),errors.collect(cdk.propertyValidator("classCTimeout",cdk.validateNumber)(properties.classCTimeout)),errors.collect(cdk.propertyValidator("factoryPresetFreqsList",cdk.listValidator(cdk.validateNumber))(properties.factoryPresetFreqsList)),errors.collect(cdk.propertyValidator("macVersion",cdk.validateString)(properties.macVersion)),errors.collect(cdk.propertyValidator("maxDutyCycle",cdk.validateNumber)(properties.maxDutyCycle)),errors.collect(cdk.propertyValidator("maxEirp",cdk.validateNumber)(properties.maxEirp)),errors.collect(cdk.propertyValidator("pingSlotDr",cdk.validateNumber)(properties.pingSlotDr)),errors.collect(cdk.propertyValidator("pingSlotFreq",cdk.validateNumber)(properties.pingSlotFreq)),errors.collect(cdk.propertyValidator("pingSlotPeriod",cdk.validateNumber)(properties.pingSlotPeriod)),errors.collect(cdk.propertyValidator("regParamsRevision",cdk.validateString)(properties.regParamsRevision)),errors.collect(cdk.propertyValidator("rfRegion",cdk.validateString)(properties.rfRegion)),errors.collect(cdk.propertyValidator("rxDataRate2",cdk.validateNumber)(properties.rxDataRate2)),errors.collect(cdk.propertyValidator("rxDelay1",cdk.validateNumber)(properties.rxDelay1)),errors.collect(cdk.propertyValidator("rxDrOffset1",cdk.validateNumber)(properties.rxDrOffset1)),errors.collect(cdk.propertyValidator("rxFreq2",cdk.validateNumber)(properties.rxFreq2)),errors.collect(cdk.propertyValidator("supports32BitFCnt",cdk.validateBoolean)(properties.supports32BitFCnt)),errors.collect(cdk.propertyValidator("supportsClassB",cdk.validateBoolean)(properties.supportsClassB)),errors.collect(cdk.propertyValidator("supportsClassC",cdk.validateBoolean)(properties.supportsClassC)),errors.collect(cdk.propertyValidator("supportsJoin",cdk.validateBoolean)(properties.supportsJoin)),errors.wrap('supplied properties not correct for "LoRaWANDeviceProfileProperty"')}function convertCfnDeviceProfileLoRaWANDeviceProfilePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDeviceProfileLoRaWANDeviceProfilePropertyValidator(properties).assertSuccess(),{ClassBTimeout:cdk.numberToCloudFormation(properties.classBTimeout),ClassCTimeout:cdk.numberToCloudFormation(properties.classCTimeout),FactoryPresetFreqsList:cdk.listMapper(cdk.numberToCloudFormation)(properties.factoryPresetFreqsList),MacVersion:cdk.stringToCloudFormation(properties.macVersion),MaxDutyCycle:cdk.numberToCloudFormation(properties.maxDutyCycle),MaxEirp:cdk.numberToCloudFormation(properties.maxEirp),PingSlotDr:cdk.numberToCloudFormation(properties.pingSlotDr),PingSlotFreq:cdk.numberToCloudFormation(properties.pingSlotFreq),PingSlotPeriod:cdk.numberToCloudFormation(properties.pingSlotPeriod),RegParamsRevision:cdk.stringToCloudFormation(properties.regParamsRevision),RfRegion:cdk.stringToCloudFormation(properties.rfRegion),RxDataRate2:cdk.numberToCloudFormation(properties.rxDataRate2),RxDelay1:cdk.numberToCloudFormation(properties.rxDelay1),RxDrOffset1:cdk.numberToCloudFormation(properties.rxDrOffset1),RxFreq2:cdk.numberToCloudFormation(properties.rxFreq2),Supports32BitFCnt:cdk.booleanToCloudFormation(properties.supports32BitFCnt),SupportsClassB:cdk.booleanToCloudFormation(properties.supportsClassB),SupportsClassC:cdk.booleanToCloudFormation(properties.supportsClassC),SupportsJoin:cdk.booleanToCloudFormation(properties.supportsJoin)}):properties}function CfnDeviceProfileLoRaWANDeviceProfilePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("classBTimeout","ClassBTimeout",properties.ClassBTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ClassBTimeout):void 0),ret.addPropertyResult("classCTimeout","ClassCTimeout",properties.ClassCTimeout!=null?cfn_parse.FromCloudFormation.getNumber(properties.ClassCTimeout):void 0),ret.addPropertyResult("factoryPresetFreqsList","FactoryPresetFreqsList",properties.FactoryPresetFreqsList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getNumber)(properties.FactoryPresetFreqsList):void 0),ret.addPropertyResult("macVersion","MacVersion",properties.MacVersion!=null?cfn_parse.FromCloudFormation.getString(properties.MacVersion):void 0),ret.addPropertyResult("maxDutyCycle","MaxDutyCycle",properties.MaxDutyCycle!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxDutyCycle):void 0),ret.addPropertyResult("maxEirp","MaxEirp",properties.MaxEirp!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxEirp):void 0),ret.addPropertyResult("pingSlotDr","PingSlotDr",properties.PingSlotDr!=null?cfn_parse.FromCloudFormation.getNumber(properties.PingSlotDr):void 0),ret.addPropertyResult("pingSlotFreq","PingSlotFreq",properties.PingSlotFreq!=null?cfn_parse.FromCloudFormation.getNumber(properties.PingSlotFreq):void 0),ret.addPropertyResult("pingSlotPeriod","PingSlotPeriod",properties.PingSlotPeriod!=null?cfn_parse.FromCloudFormation.getNumber(properties.PingSlotPeriod):void 0),ret.addPropertyResult("regParamsRevision","RegParamsRevision",properties.RegParamsRevision!=null?cfn_parse.FromCloudFormation.getString(properties.RegParamsRevision):void 0),ret.addPropertyResult("rfRegion","RfRegion",properties.RfRegion!=null?cfn_parse.FromCloudFormation.getString(properties.RfRegion):void 0),ret.addPropertyResult("rxDataRate2","RxDataRate2",properties.RxDataRate2!=null?cfn_parse.FromCloudFormation.getNumber(properties.RxDataRate2):void 0),ret.addPropertyResult("rxDelay1","RxDelay1",properties.RxDelay1!=null?cfn_parse.FromCloudFormation.getNumber(properties.RxDelay1):void 0),ret.addPropertyResult("rxDrOffset1","RxDrOffset1",properties.RxDrOffset1!=null?cfn_parse.FromCloudFormation.getNumber(properties.RxDrOffset1):void 0),ret.addPropertyResult("rxFreq2","RxFreq2",properties.RxFreq2!=null?cfn_parse.FromCloudFormation.getNumber(properties.RxFreq2):void 0),ret.addPropertyResult("supports32BitFCnt","Supports32BitFCnt",properties.Supports32BitFCnt!=null?cfn_parse.FromCloudFormation.getBoolean(properties.Supports32BitFCnt):void 0),ret.addPropertyResult("supportsClassB","SupportsClassB",properties.SupportsClassB!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SupportsClassB):void 0),ret.addPropertyResult("supportsClassC","SupportsClassC",properties.SupportsClassC!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SupportsClassC):void 0),ret.addPropertyResult("supportsJoin","SupportsJoin",properties.SupportsJoin!=null?cfn_parse.FromCloudFormation.getBoolean(properties.SupportsJoin):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDeviceProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("loRaWan",CfnDeviceProfileLoRaWANDeviceProfilePropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDeviceProfileProps"')}function convertCfnDeviceProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDeviceProfilePropsValidator(properties).assertSuccess(),{LoRaWAN:convertCfnDeviceProfileLoRaWANDeviceProfilePropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDeviceProfilePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnDeviceProfileLoRaWANDeviceProfilePropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnFuotaTask extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnFuotaTaskPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnFuotaTask(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnFuotaTask.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnFuotaTaskProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnFuotaTask),error}cdk.requireProperty(props,"firmwareUpdateImage",this),cdk.requireProperty(props,"firmwareUpdateRole",this),cdk.requireProperty(props,"loRaWan",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrFuotaTaskStatus=cdk.Token.asString(this.getAtt("FuotaTaskStatus",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrLoRaWanStartTime=cdk.Token.asString(this.getAtt("LoRaWAN.StartTime",cdk.ResolutionTypeHint.STRING)),this.associateMulticastGroup=props.associateMulticastGroup,this.associateWirelessDevice=props.associateWirelessDevice,this.description=props.description,this.disassociateMulticastGroup=props.disassociateMulticastGroup,this.disassociateWirelessDevice=props.disassociateWirelessDevice,this.firmwareUpdateImage=props.firmwareUpdateImage,this.firmwareUpdateRole=props.firmwareUpdateRole,this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::FuotaTask",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{associateMulticastGroup:this.associateMulticastGroup,associateWirelessDevice:this.associateWirelessDevice,description:this.description,disassociateMulticastGroup:this.disassociateMulticastGroup,disassociateWirelessDevice:this.disassociateWirelessDevice,firmwareUpdateImage:this.firmwareUpdateImage,firmwareUpdateRole:this.firmwareUpdateRole,loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnFuotaTask.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnFuotaTaskPropsToCloudFormation(props)}}exports.CfnFuotaTask=CfnFuotaTask,_c=JSII_RTTI_SYMBOL_1,CfnFuotaTask[_c]={fqn:"aws-cdk-lib.aws_iotwireless.CfnFuotaTask",version:"2.94.0"},CfnFuotaTask.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::FuotaTask";function CfnFuotaTaskLoRaWANPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("rfRegion",cdk.requiredValidator)(properties.rfRegion)),errors.collect(cdk.propertyValidator("rfRegion",cdk.validateString)(properties.rfRegion)),errors.collect(cdk.propertyValidator("startTime",cdk.validateString)(properties.startTime)),errors.wrap('supplied properties not correct for "LoRaWANProperty"')}function convertCfnFuotaTaskLoRaWANPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFuotaTaskLoRaWANPropertyValidator(properties).assertSuccess(),{RfRegion:cdk.stringToCloudFormation(properties.rfRegion),StartTime:cdk.stringToCloudFormation(properties.startTime)}):properties}function CfnFuotaTaskLoRaWANPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("rfRegion","RfRegion",properties.RfRegion!=null?cfn_parse.FromCloudFormation.getString(properties.RfRegion):void 0),ret.addPropertyResult("startTime","StartTime",properties.StartTime!=null?cfn_parse.FromCloudFormation.getString(properties.StartTime):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnFuotaTaskPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("associateMulticastGroup",cdk.validateString)(properties.associateMulticastGroup)),errors.collect(cdk.propertyValidator("associateWirelessDevice",cdk.validateString)(properties.associateWirelessDevice)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("disassociateMulticastGroup",cdk.validateString)(properties.disassociateMulticastGroup)),errors.collect(cdk.propertyValidator("disassociateWirelessDevice",cdk.validateString)(properties.disassociateWirelessDevice)),errors.collect(cdk.propertyValidator("firmwareUpdateImage",cdk.requiredValidator)(properties.firmwareUpdateImage)),errors.collect(cdk.propertyValidator("firmwareUpdateImage",cdk.validateString)(properties.firmwareUpdateImage)),errors.collect(cdk.propertyValidator("firmwareUpdateRole",cdk.requiredValidator)(properties.firmwareUpdateRole)),errors.collect(cdk.propertyValidator("firmwareUpdateRole",cdk.validateString)(properties.firmwareUpdateRole)),errors.collect(cdk.propertyValidator("loRaWan",cdk.requiredValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("loRaWan",CfnFuotaTaskLoRaWANPropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnFuotaTaskProps"')}function convertCfnFuotaTaskPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnFuotaTaskPropsValidator(properties).assertSuccess(),{AssociateMulticastGroup:cdk.stringToCloudFormation(properties.associateMulticastGroup),AssociateWirelessDevice:cdk.stringToCloudFormation(properties.associateWirelessDevice),Description:cdk.stringToCloudFormation(properties.description),DisassociateMulticastGroup:cdk.stringToCloudFormation(properties.disassociateMulticastGroup),DisassociateWirelessDevice:cdk.stringToCloudFormation(properties.disassociateWirelessDevice),FirmwareUpdateImage:cdk.stringToCloudFormation(properties.firmwareUpdateImage),FirmwareUpdateRole:cdk.stringToCloudFormation(properties.firmwareUpdateRole),LoRaWAN:convertCfnFuotaTaskLoRaWANPropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnFuotaTaskPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("associateMulticastGroup","AssociateMulticastGroup",properties.AssociateMulticastGroup!=null?cfn_parse.FromCloudFormation.getString(properties.AssociateMulticastGroup):void 0),ret.addPropertyResult("associateWirelessDevice","AssociateWirelessDevice",properties.AssociateWirelessDevice!=null?cfn_parse.FromCloudFormation.getString(properties.AssociateWirelessDevice):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("disassociateMulticastGroup","DisassociateMulticastGroup",properties.DisassociateMulticastGroup!=null?cfn_parse.FromCloudFormation.getString(properties.DisassociateMulticastGroup):void 0),ret.addPropertyResult("disassociateWirelessDevice","DisassociateWirelessDevice",properties.DisassociateWirelessDevice!=null?cfn_parse.FromCloudFormation.getString(properties.DisassociateWirelessDevice):void 0),ret.addPropertyResult("firmwareUpdateImage","FirmwareUpdateImage",properties.FirmwareUpdateImage!=null?cfn_parse.FromCloudFormation.getString(properties.FirmwareUpdateImage):void 0),ret.addPropertyResult("firmwareUpdateRole","FirmwareUpdateRole",properties.FirmwareUpdateRole!=null?cfn_parse.FromCloudFormation.getString(properties.FirmwareUpdateRole):void 0),ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnFuotaTaskLoRaWANPropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnMulticastGroup extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnMulticastGroupPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnMulticastGroup(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnMulticastGroup.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnMulticastGroupProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnMulticastGroup),error}cdk.requireProperty(props,"loRaWan",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrLoRaWanNumberOfDevicesInGroup=cdk.Token.asNumber(this.getAtt("LoRaWAN.NumberOfDevicesInGroup",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanNumberOfDevicesRequested=cdk.Token.asNumber(this.getAtt("LoRaWAN.NumberOfDevicesRequested",cdk.ResolutionTypeHint.NUMBER)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.associateWirelessDevice=props.associateWirelessDevice,this.description=props.description,this.disassociateWirelessDevice=props.disassociateWirelessDevice,this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::MulticastGroup",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{associateWirelessDevice:this.associateWirelessDevice,description:this.description,disassociateWirelessDevice:this.disassociateWirelessDevice,loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnMulticastGroup.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnMulticastGroupPropsToCloudFormation(props)}}exports.CfnMulticastGroup=CfnMulticastGroup,_d=JSII_RTTI_SYMBOL_1,CfnMulticastGroup[_d]={fqn:"aws-cdk-lib.aws_iotwireless.CfnMulticastGroup",version:"2.94.0"},CfnMulticastGroup.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::MulticastGroup";function CfnMulticastGroupLoRaWANPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("dlClass",cdk.requiredValidator)(properties.dlClass)),errors.collect(cdk.propertyValidator("dlClass",cdk.validateString)(properties.dlClass)),errors.collect(cdk.propertyValidator("numberOfDevicesInGroup",cdk.validateNumber)(properties.numberOfDevicesInGroup)),errors.collect(cdk.propertyValidator("numberOfDevicesRequested",cdk.validateNumber)(properties.numberOfDevicesRequested)),errors.collect(cdk.propertyValidator("rfRegion",cdk.requiredValidator)(properties.rfRegion)),errors.collect(cdk.propertyValidator("rfRegion",cdk.validateString)(properties.rfRegion)),errors.wrap('supplied properties not correct for "LoRaWANProperty"')}function convertCfnMulticastGroupLoRaWANPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMulticastGroupLoRaWANPropertyValidator(properties).assertSuccess(),{DlClass:cdk.stringToCloudFormation(properties.dlClass),NumberOfDevicesInGroup:cdk.numberToCloudFormation(properties.numberOfDevicesInGroup),NumberOfDevicesRequested:cdk.numberToCloudFormation(properties.numberOfDevicesRequested),RfRegion:cdk.stringToCloudFormation(properties.rfRegion)}):properties}function CfnMulticastGroupLoRaWANPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("dlClass","DlClass",properties.DlClass!=null?cfn_parse.FromCloudFormation.getString(properties.DlClass):void 0),ret.addPropertyResult("numberOfDevicesInGroup","NumberOfDevicesInGroup",properties.NumberOfDevicesInGroup!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberOfDevicesInGroup):void 0),ret.addPropertyResult("numberOfDevicesRequested","NumberOfDevicesRequested",properties.NumberOfDevicesRequested!=null?cfn_parse.FromCloudFormation.getNumber(properties.NumberOfDevicesRequested):void 0),ret.addPropertyResult("rfRegion","RfRegion",properties.RfRegion!=null?cfn_parse.FromCloudFormation.getString(properties.RfRegion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnMulticastGroupPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("associateWirelessDevice",cdk.validateString)(properties.associateWirelessDevice)),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("disassociateWirelessDevice",cdk.validateString)(properties.disassociateWirelessDevice)),errors.collect(cdk.propertyValidator("loRaWan",cdk.requiredValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("loRaWan",CfnMulticastGroupLoRaWANPropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnMulticastGroupProps"')}function convertCfnMulticastGroupPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnMulticastGroupPropsValidator(properties).assertSuccess(),{AssociateWirelessDevice:cdk.stringToCloudFormation(properties.associateWirelessDevice),Description:cdk.stringToCloudFormation(properties.description),DisassociateWirelessDevice:cdk.stringToCloudFormation(properties.disassociateWirelessDevice),LoRaWAN:convertCfnMulticastGroupLoRaWANPropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnMulticastGroupPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("associateWirelessDevice","AssociateWirelessDevice",properties.AssociateWirelessDevice!=null?cfn_parse.FromCloudFormation.getString(properties.AssociateWirelessDevice):void 0),ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("disassociateWirelessDevice","DisassociateWirelessDevice",properties.DisassociateWirelessDevice!=null?cfn_parse.FromCloudFormation.getString(properties.DisassociateWirelessDevice):void 0),ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnMulticastGroupLoRaWANPropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNetworkAnalyzerConfiguration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNetworkAnalyzerConfigurationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnNetworkAnalyzerConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnNetworkAnalyzerConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnNetworkAnalyzerConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnNetworkAnalyzerConfiguration),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::NetworkAnalyzerConfiguration",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.traceContent=props.traceContent,this.wirelessDevices=props.wirelessDevices,this.wirelessGateways=props.wirelessGateways}get cfnProperties(){return{description:this.description,name:this.name,tags:this.tags.renderTags(),traceContent:this.traceContent,wirelessDevices:this.wirelessDevices,wirelessGateways:this.wirelessGateways}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnNetworkAnalyzerConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnNetworkAnalyzerConfigurationPropsToCloudFormation(props)}}exports.CfnNetworkAnalyzerConfiguration=CfnNetworkAnalyzerConfiguration,_e=JSII_RTTI_SYMBOL_1,CfnNetworkAnalyzerConfiguration[_e]={fqn:"aws-cdk-lib.aws_iotwireless.CfnNetworkAnalyzerConfiguration",version:"2.94.0"},CfnNetworkAnalyzerConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::NetworkAnalyzerConfiguration";function CfnNetworkAnalyzerConfigurationTraceContentPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("logLevel",cdk.validateString)(properties.logLevel)),errors.collect(cdk.propertyValidator("wirelessDeviceFrameInfo",cdk.validateString)(properties.wirelessDeviceFrameInfo)),errors.wrap('supplied properties not correct for "TraceContentProperty"')}function convertCfnNetworkAnalyzerConfigurationTraceContentPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNetworkAnalyzerConfigurationTraceContentPropertyValidator(properties).assertSuccess(),{LogLevel:cdk.stringToCloudFormation(properties.logLevel),WirelessDeviceFrameInfo:cdk.stringToCloudFormation(properties.wirelessDeviceFrameInfo)}):properties}function CfnNetworkAnalyzerConfigurationTraceContentPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("logLevel","LogLevel",properties.LogLevel!=null?cfn_parse.FromCloudFormation.getString(properties.LogLevel):void 0),ret.addPropertyResult("wirelessDeviceFrameInfo","WirelessDeviceFrameInfo",properties.WirelessDeviceFrameInfo!=null?cfn_parse.FromCloudFormation.getString(properties.WirelessDeviceFrameInfo):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnNetworkAnalyzerConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("traceContent",cdk.validateObject)(properties.traceContent)),errors.collect(cdk.propertyValidator("wirelessDevices",cdk.listValidator(cdk.validateString))(properties.wirelessDevices)),errors.collect(cdk.propertyValidator("wirelessGateways",cdk.listValidator(cdk.validateString))(properties.wirelessGateways)),errors.wrap('supplied properties not correct for "CfnNetworkAnalyzerConfigurationProps"')}function convertCfnNetworkAnalyzerConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNetworkAnalyzerConfigurationPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TraceContent:cdk.objectToCloudFormation(properties.traceContent),WirelessDevices:cdk.listMapper(cdk.stringToCloudFormation)(properties.wirelessDevices),WirelessGateways:cdk.listMapper(cdk.stringToCloudFormation)(properties.wirelessGateways)}):properties}function CfnNetworkAnalyzerConfigurationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("traceContent","TraceContent",properties.TraceContent!=null?cfn_parse.FromCloudFormation.getAny(properties.TraceContent):void 0),ret.addPropertyResult("wirelessDevices","WirelessDevices",properties.WirelessDevices!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.WirelessDevices):void 0),ret.addPropertyResult("wirelessGateways","WirelessGateways",properties.WirelessGateways!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.WirelessGateways):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnPartnerAccount extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnPartnerAccountPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnPartnerAccount(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnPartnerAccount.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnPartnerAccountProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnPartnerAccount),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrFingerprint=cdk.Token.asString(this.getAtt("Fingerprint",cdk.ResolutionTypeHint.STRING)),this.accountLinked=props.accountLinked,this.partnerAccountId=props.partnerAccountId,this.partnerType=props.partnerType,this.sidewalk=props.sidewalk,this.sidewalkResponse=props.sidewalkResponse,this.sidewalkUpdate=props.sidewalkUpdate,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::PartnerAccount",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{accountLinked:this.accountLinked,partnerAccountId:this.partnerAccountId,partnerType:this.partnerType,sidewalk:this.sidewalk,sidewalkResponse:this.sidewalkResponse,sidewalkUpdate:this.sidewalkUpdate,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnPartnerAccount.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnPartnerAccountPropsToCloudFormation(props)}}exports.CfnPartnerAccount=CfnPartnerAccount,_f=JSII_RTTI_SYMBOL_1,CfnPartnerAccount[_f]={fqn:"aws-cdk-lib.aws_iotwireless.CfnPartnerAccount",version:"2.94.0"},CfnPartnerAccount.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::PartnerAccount";function CfnPartnerAccountSidewalkAccountInfoPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appServerPrivateKey",cdk.requiredValidator)(properties.appServerPrivateKey)),errors.collect(cdk.propertyValidator("appServerPrivateKey",cdk.validateString)(properties.appServerPrivateKey)),errors.wrap('supplied properties not correct for "SidewalkAccountInfoProperty"')}function convertCfnPartnerAccountSidewalkAccountInfoPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPartnerAccountSidewalkAccountInfoPropertyValidator(properties).assertSuccess(),{AppServerPrivateKey:cdk.stringToCloudFormation(properties.appServerPrivateKey)}):properties}function CfnPartnerAccountSidewalkAccountInfoPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appServerPrivateKey","AppServerPrivateKey",properties.AppServerPrivateKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppServerPrivateKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("amazonId",cdk.validateString)(properties.amazonId)),errors.collect(cdk.propertyValidator("arn",cdk.validateString)(properties.arn)),errors.collect(cdk.propertyValidator("fingerprint",cdk.validateString)(properties.fingerprint)),errors.wrap('supplied properties not correct for "SidewalkAccountInfoWithFingerprintProperty"')}function convertCfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyValidator(properties).assertSuccess(),{AmazonId:cdk.stringToCloudFormation(properties.amazonId),Arn:cdk.stringToCloudFormation(properties.arn),Fingerprint:cdk.stringToCloudFormation(properties.fingerprint)}):properties}function CfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("amazonId","AmazonId",properties.AmazonId!=null?cfn_parse.FromCloudFormation.getString(properties.AmazonId):void 0),ret.addPropertyResult("arn","Arn",properties.Arn!=null?cfn_parse.FromCloudFormation.getString(properties.Arn):void 0),ret.addPropertyResult("fingerprint","Fingerprint",properties.Fingerprint!=null?cfn_parse.FromCloudFormation.getString(properties.Fingerprint):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPartnerAccountSidewalkUpdateAccountPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appServerPrivateKey",cdk.validateString)(properties.appServerPrivateKey)),errors.wrap('supplied properties not correct for "SidewalkUpdateAccountProperty"')}function convertCfnPartnerAccountSidewalkUpdateAccountPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPartnerAccountSidewalkUpdateAccountPropertyValidator(properties).assertSuccess(),{AppServerPrivateKey:cdk.stringToCloudFormation(properties.appServerPrivateKey)}):properties}function CfnPartnerAccountSidewalkUpdateAccountPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appServerPrivateKey","AppServerPrivateKey",properties.AppServerPrivateKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppServerPrivateKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnPartnerAccountPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("accountLinked",cdk.validateBoolean)(properties.accountLinked)),errors.collect(cdk.propertyValidator("partnerAccountId",cdk.validateString)(properties.partnerAccountId)),errors.collect(cdk.propertyValidator("partnerType",cdk.validateString)(properties.partnerType)),errors.collect(cdk.propertyValidator("sidewalk",CfnPartnerAccountSidewalkAccountInfoPropertyValidator)(properties.sidewalk)),errors.collect(cdk.propertyValidator("sidewalkResponse",CfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyValidator)(properties.sidewalkResponse)),errors.collect(cdk.propertyValidator("sidewalkUpdate",CfnPartnerAccountSidewalkUpdateAccountPropertyValidator)(properties.sidewalkUpdate)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnPartnerAccountProps"')}function convertCfnPartnerAccountPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnPartnerAccountPropsValidator(properties).assertSuccess(),{AccountLinked:cdk.booleanToCloudFormation(properties.accountLinked),PartnerAccountId:cdk.stringToCloudFormation(properties.partnerAccountId),PartnerType:cdk.stringToCloudFormation(properties.partnerType),Sidewalk:convertCfnPartnerAccountSidewalkAccountInfoPropertyToCloudFormation(properties.sidewalk),SidewalkResponse:convertCfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyToCloudFormation(properties.sidewalkResponse),SidewalkUpdate:convertCfnPartnerAccountSidewalkUpdateAccountPropertyToCloudFormation(properties.sidewalkUpdate),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnPartnerAccountPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("accountLinked","AccountLinked",properties.AccountLinked!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AccountLinked):void 0),ret.addPropertyResult("partnerAccountId","PartnerAccountId",properties.PartnerAccountId!=null?cfn_parse.FromCloudFormation.getString(properties.PartnerAccountId):void 0),ret.addPropertyResult("partnerType","PartnerType",properties.PartnerType!=null?cfn_parse.FromCloudFormation.getString(properties.PartnerType):void 0),ret.addPropertyResult("sidewalk","Sidewalk",properties.Sidewalk!=null?CfnPartnerAccountSidewalkAccountInfoPropertyFromCloudFormation(properties.Sidewalk):void 0),ret.addPropertyResult("sidewalkResponse","SidewalkResponse",properties.SidewalkResponse!=null?CfnPartnerAccountSidewalkAccountInfoWithFingerprintPropertyFromCloudFormation(properties.SidewalkResponse):void 0),ret.addPropertyResult("sidewalkUpdate","SidewalkUpdate",properties.SidewalkUpdate!=null?CfnPartnerAccountSidewalkUpdateAccountPropertyFromCloudFormation(properties.SidewalkUpdate):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnServiceProfile extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnServiceProfilePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnServiceProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props={}){super(scope,id,{type:CfnServiceProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnServiceProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnServiceProfile),error}this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrLoRaWanChannelMask=cdk.Token.asString(this.getAtt("LoRaWAN.ChannelMask",cdk.ResolutionTypeHint.STRING)),this.attrLoRaWanDevStatusReqFreq=cdk.Token.asNumber(this.getAtt("LoRaWAN.DevStatusReqFreq",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanDlBucketSize=cdk.Token.asNumber(this.getAtt("LoRaWAN.DlBucketSize",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanDlRate=cdk.Token.asNumber(this.getAtt("LoRaWAN.DlRate",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanDlRatePolicy=cdk.Token.asString(this.getAtt("LoRaWAN.DlRatePolicy",cdk.ResolutionTypeHint.STRING)),this.attrLoRaWanDrMax=cdk.Token.asNumber(this.getAtt("LoRaWAN.DrMax",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanDrMin=cdk.Token.asNumber(this.getAtt("LoRaWAN.DrMin",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanHrAllowed=this.getAtt("LoRaWAN.HrAllowed"),this.attrLoRaWanMinGwDiversity=cdk.Token.asNumber(this.getAtt("LoRaWAN.MinGwDiversity",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanNwkGeoLoc=this.getAtt("LoRaWAN.NwkGeoLoc"),this.attrLoRaWanPrAllowed=this.getAtt("LoRaWAN.PrAllowed"),this.attrLoRaWanRaAllowed=this.getAtt("LoRaWAN.RaAllowed"),this.attrLoRaWanReportDevStatusBattery=this.getAtt("LoRaWAN.ReportDevStatusBattery"),this.attrLoRaWanReportDevStatusMargin=this.getAtt("LoRaWAN.ReportDevStatusMargin"),this.attrLoRaWanResponse=this.getAtt("LoRaWANResponse"),this.attrLoRaWanTargetPer=cdk.Token.asNumber(this.getAtt("LoRaWAN.TargetPer",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanUlBucketSize=cdk.Token.asNumber(this.getAtt("LoRaWAN.UlBucketSize",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanUlRate=cdk.Token.asNumber(this.getAtt("LoRaWAN.UlRate",cdk.ResolutionTypeHint.NUMBER)),this.attrLoRaWanUlRatePolicy=cdk.Token.asString(this.getAtt("LoRaWAN.UlRatePolicy",cdk.ResolutionTypeHint.STRING)),this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::ServiceProfile",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnServiceProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnServiceProfilePropsToCloudFormation(props)}}exports.CfnServiceProfile=CfnServiceProfile,_g=JSII_RTTI_SYMBOL_1,CfnServiceProfile[_g]={fqn:"aws-cdk-lib.aws_iotwireless.CfnServiceProfile",version:"2.94.0"},CfnServiceProfile.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::ServiceProfile";function CfnServiceProfileLoRaWANServiceProfilePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("addGwMetadata",cdk.validateBoolean)(properties.addGwMetadata)),errors.collect(cdk.propertyValidator("channelMask",cdk.validateString)(properties.channelMask)),errors.collect(cdk.propertyValidator("devStatusReqFreq",cdk.validateNumber)(properties.devStatusReqFreq)),errors.collect(cdk.propertyValidator("dlBucketSize",cdk.validateNumber)(properties.dlBucketSize)),errors.collect(cdk.propertyValidator("dlRate",cdk.validateNumber)(properties.dlRate)),errors.collect(cdk.propertyValidator("dlRatePolicy",cdk.validateString)(properties.dlRatePolicy)),errors.collect(cdk.propertyValidator("drMax",cdk.validateNumber)(properties.drMax)),errors.collect(cdk.propertyValidator("drMin",cdk.validateNumber)(properties.drMin)),errors.collect(cdk.propertyValidator("hrAllowed",cdk.validateBoolean)(properties.hrAllowed)),errors.collect(cdk.propertyValidator("minGwDiversity",cdk.validateNumber)(properties.minGwDiversity)),errors.collect(cdk.propertyValidator("nwkGeoLoc",cdk.validateBoolean)(properties.nwkGeoLoc)),errors.collect(cdk.propertyValidator("prAllowed",cdk.validateBoolean)(properties.prAllowed)),errors.collect(cdk.propertyValidator("raAllowed",cdk.validateBoolean)(properties.raAllowed)),errors.collect(cdk.propertyValidator("reportDevStatusBattery",cdk.validateBoolean)(properties.reportDevStatusBattery)),errors.collect(cdk.propertyValidator("reportDevStatusMargin",cdk.validateBoolean)(properties.reportDevStatusMargin)),errors.collect(cdk.propertyValidator("targetPer",cdk.validateNumber)(properties.targetPer)),errors.collect(cdk.propertyValidator("ulBucketSize",cdk.validateNumber)(properties.ulBucketSize)),errors.collect(cdk.propertyValidator("ulRate",cdk.validateNumber)(properties.ulRate)),errors.collect(cdk.propertyValidator("ulRatePolicy",cdk.validateString)(properties.ulRatePolicy)),errors.wrap('supplied properties not correct for "LoRaWANServiceProfileProperty"')}function convertCfnServiceProfileLoRaWANServiceProfilePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceProfileLoRaWANServiceProfilePropertyValidator(properties).assertSuccess(),{AddGwMetadata:cdk.booleanToCloudFormation(properties.addGwMetadata),ChannelMask:cdk.stringToCloudFormation(properties.channelMask),DevStatusReqFreq:cdk.numberToCloudFormation(properties.devStatusReqFreq),DlBucketSize:cdk.numberToCloudFormation(properties.dlBucketSize),DlRate:cdk.numberToCloudFormation(properties.dlRate),DlRatePolicy:cdk.stringToCloudFormation(properties.dlRatePolicy),DrMax:cdk.numberToCloudFormation(properties.drMax),DrMin:cdk.numberToCloudFormation(properties.drMin),HrAllowed:cdk.booleanToCloudFormation(properties.hrAllowed),MinGwDiversity:cdk.numberToCloudFormation(properties.minGwDiversity),NwkGeoLoc:cdk.booleanToCloudFormation(properties.nwkGeoLoc),PrAllowed:cdk.booleanToCloudFormation(properties.prAllowed),RaAllowed:cdk.booleanToCloudFormation(properties.raAllowed),ReportDevStatusBattery:cdk.booleanToCloudFormation(properties.reportDevStatusBattery),ReportDevStatusMargin:cdk.booleanToCloudFormation(properties.reportDevStatusMargin),TargetPer:cdk.numberToCloudFormation(properties.targetPer),UlBucketSize:cdk.numberToCloudFormation(properties.ulBucketSize),UlRate:cdk.numberToCloudFormation(properties.ulRate),UlRatePolicy:cdk.stringToCloudFormation(properties.ulRatePolicy)}):properties}function CfnServiceProfileLoRaWANServiceProfilePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("addGwMetadata","AddGwMetadata",properties.AddGwMetadata!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AddGwMetadata):void 0),ret.addPropertyResult("channelMask","ChannelMask",properties.ChannelMask!=null?cfn_parse.FromCloudFormation.getString(properties.ChannelMask):void 0),ret.addPropertyResult("devStatusReqFreq","DevStatusReqFreq",properties.DevStatusReqFreq!=null?cfn_parse.FromCloudFormation.getNumber(properties.DevStatusReqFreq):void 0),ret.addPropertyResult("dlBucketSize","DlBucketSize",properties.DlBucketSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.DlBucketSize):void 0),ret.addPropertyResult("dlRate","DlRate",properties.DlRate!=null?cfn_parse.FromCloudFormation.getNumber(properties.DlRate):void 0),ret.addPropertyResult("dlRatePolicy","DlRatePolicy",properties.DlRatePolicy!=null?cfn_parse.FromCloudFormation.getString(properties.DlRatePolicy):void 0),ret.addPropertyResult("drMax","DrMax",properties.DrMax!=null?cfn_parse.FromCloudFormation.getNumber(properties.DrMax):void 0),ret.addPropertyResult("drMin","DrMin",properties.DrMin!=null?cfn_parse.FromCloudFormation.getNumber(properties.DrMin):void 0),ret.addPropertyResult("hrAllowed","HrAllowed",properties.HrAllowed!=null?cfn_parse.FromCloudFormation.getBoolean(properties.HrAllowed):void 0),ret.addPropertyResult("minGwDiversity","MinGwDiversity",properties.MinGwDiversity!=null?cfn_parse.FromCloudFormation.getNumber(properties.MinGwDiversity):void 0),ret.addPropertyResult("nwkGeoLoc","NwkGeoLoc",properties.NwkGeoLoc!=null?cfn_parse.FromCloudFormation.getBoolean(properties.NwkGeoLoc):void 0),ret.addPropertyResult("prAllowed","PrAllowed",properties.PrAllowed!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PrAllowed):void 0),ret.addPropertyResult("raAllowed","RaAllowed",properties.RaAllowed!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RaAllowed):void 0),ret.addPropertyResult("reportDevStatusBattery","ReportDevStatusBattery",properties.ReportDevStatusBattery!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ReportDevStatusBattery):void 0),ret.addPropertyResult("reportDevStatusMargin","ReportDevStatusMargin",properties.ReportDevStatusMargin!=null?cfn_parse.FromCloudFormation.getBoolean(properties.ReportDevStatusMargin):void 0),ret.addPropertyResult("targetPer","TargetPer",properties.TargetPer!=null?cfn_parse.FromCloudFormation.getNumber(properties.TargetPer):void 0),ret.addPropertyResult("ulBucketSize","UlBucketSize",properties.UlBucketSize!=null?cfn_parse.FromCloudFormation.getNumber(properties.UlBucketSize):void 0),ret.addPropertyResult("ulRate","UlRate",properties.UlRate!=null?cfn_parse.FromCloudFormation.getNumber(properties.UlRate):void 0),ret.addPropertyResult("ulRatePolicy","UlRatePolicy",properties.UlRatePolicy!=null?cfn_parse.FromCloudFormation.getString(properties.UlRatePolicy):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnServiceProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("loRaWan",CfnServiceProfileLoRaWANServiceProfilePropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnServiceProfileProps"')}function convertCfnServiceProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnServiceProfilePropsValidator(properties).assertSuccess(),{LoRaWAN:convertCfnServiceProfileLoRaWANServiceProfilePropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnServiceProfilePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnServiceProfileLoRaWANServiceProfilePropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTaskDefinition extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTaskDefinitionPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTaskDefinition(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTaskDefinition.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnTaskDefinitionProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTaskDefinition),error}cdk.requireProperty(props,"autoCreateTasks",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.autoCreateTasks=props.autoCreateTasks,this.loRaWanUpdateGatewayTaskEntry=props.loRaWanUpdateGatewayTaskEntry,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::TaskDefinition",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.taskDefinitionType=props.taskDefinitionType,this.update=props.update}get cfnProperties(){return{autoCreateTasks:this.autoCreateTasks,loRaWanUpdateGatewayTaskEntry:this.loRaWanUpdateGatewayTaskEntry,name:this.name,tags:this.tags.renderTags(),taskDefinitionType:this.taskDefinitionType,update:this.update}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTaskDefinition.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTaskDefinitionPropsToCloudFormation(props)}}exports.CfnTaskDefinition=CfnTaskDefinition,_h=JSII_RTTI_SYMBOL_1,CfnTaskDefinition[_h]={fqn:"aws-cdk-lib.aws_iotwireless.CfnTaskDefinition",version:"2.94.0"},CfnTaskDefinition.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::TaskDefinition";function CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("model",cdk.validateString)(properties.model)),errors.collect(cdk.propertyValidator("packageVersion",cdk.validateString)(properties.packageVersion)),errors.collect(cdk.propertyValidator("station",cdk.validateString)(properties.station)),errors.wrap('supplied properties not correct for "LoRaWANGatewayVersionProperty"')}function convertCfnTaskDefinitionLoRaWANGatewayVersionPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator(properties).assertSuccess(),{Model:cdk.stringToCloudFormation(properties.model),PackageVersion:cdk.stringToCloudFormation(properties.packageVersion),Station:cdk.stringToCloudFormation(properties.station)}):properties}function CfnTaskDefinitionLoRaWANGatewayVersionPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("model","Model",properties.Model!=null?cfn_parse.FromCloudFormation.getString(properties.Model):void 0),ret.addPropertyResult("packageVersion","PackageVersion",properties.PackageVersion!=null?cfn_parse.FromCloudFormation.getString(properties.PackageVersion):void 0),ret.addPropertyResult("station","Station",properties.Station!=null?cfn_parse.FromCloudFormation.getString(properties.Station):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("currentVersion",CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator)(properties.currentVersion)),errors.collect(cdk.propertyValidator("sigKeyCrc",cdk.validateNumber)(properties.sigKeyCrc)),errors.collect(cdk.propertyValidator("updateSignature",cdk.validateString)(properties.updateSignature)),errors.collect(cdk.propertyValidator("updateVersion",CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator)(properties.updateVersion)),errors.wrap('supplied properties not correct for "LoRaWANUpdateGatewayTaskCreateProperty"')}function convertCfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyValidator(properties).assertSuccess(),{CurrentVersion:convertCfnTaskDefinitionLoRaWANGatewayVersionPropertyToCloudFormation(properties.currentVersion),SigKeyCrc:cdk.numberToCloudFormation(properties.sigKeyCrc),UpdateSignature:cdk.stringToCloudFormation(properties.updateSignature),UpdateVersion:convertCfnTaskDefinitionLoRaWANGatewayVersionPropertyToCloudFormation(properties.updateVersion)}):properties}function CfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("currentVersion","CurrentVersion",properties.CurrentVersion!=null?CfnTaskDefinitionLoRaWANGatewayVersionPropertyFromCloudFormation(properties.CurrentVersion):void 0),ret.addPropertyResult("sigKeyCrc","SigKeyCrc",properties.SigKeyCrc!=null?cfn_parse.FromCloudFormation.getNumber(properties.SigKeyCrc):void 0),ret.addPropertyResult("updateSignature","UpdateSignature",properties.UpdateSignature!=null?cfn_parse.FromCloudFormation.getString(properties.UpdateSignature):void 0),ret.addPropertyResult("updateVersion","UpdateVersion",properties.UpdateVersion!=null?CfnTaskDefinitionLoRaWANGatewayVersionPropertyFromCloudFormation(properties.UpdateVersion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("loRaWan",CfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("updateDataRole",cdk.validateString)(properties.updateDataRole)),errors.collect(cdk.propertyValidator("updateDataSource",cdk.validateString)(properties.updateDataSource)),errors.wrap('supplied properties not correct for "UpdateWirelessGatewayTaskCreateProperty"')}function convertCfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyValidator(properties).assertSuccess(),{LoRaWAN:convertCfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyToCloudFormation(properties.loRaWan),UpdateDataRole:cdk.stringToCloudFormation(properties.updateDataRole),UpdateDataSource:cdk.stringToCloudFormation(properties.updateDataSource)}):properties}function CfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnTaskDefinitionLoRaWANUpdateGatewayTaskCreatePropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("updateDataRole","UpdateDataRole",properties.UpdateDataRole!=null?cfn_parse.FromCloudFormation.getString(properties.UpdateDataRole):void 0),ret.addPropertyResult("updateDataSource","UpdateDataSource",properties.UpdateDataSource!=null?cfn_parse.FromCloudFormation.getString(properties.UpdateDataSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("currentVersion",CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator)(properties.currentVersion)),errors.collect(cdk.propertyValidator("updateVersion",CfnTaskDefinitionLoRaWANGatewayVersionPropertyValidator)(properties.updateVersion)),errors.wrap('supplied properties not correct for "LoRaWANUpdateGatewayTaskEntryProperty"')}function convertCfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyValidator(properties).assertSuccess(),{CurrentVersion:convertCfnTaskDefinitionLoRaWANGatewayVersionPropertyToCloudFormation(properties.currentVersion),UpdateVersion:convertCfnTaskDefinitionLoRaWANGatewayVersionPropertyToCloudFormation(properties.updateVersion)}):properties}function CfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("currentVersion","CurrentVersion",properties.CurrentVersion!=null?CfnTaskDefinitionLoRaWANGatewayVersionPropertyFromCloudFormation(properties.CurrentVersion):void 0),ret.addPropertyResult("updateVersion","UpdateVersion",properties.UpdateVersion!=null?CfnTaskDefinitionLoRaWANGatewayVersionPropertyFromCloudFormation(properties.UpdateVersion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTaskDefinitionPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("autoCreateTasks",cdk.requiredValidator)(properties.autoCreateTasks)),errors.collect(cdk.propertyValidator("autoCreateTasks",cdk.validateBoolean)(properties.autoCreateTasks)),errors.collect(cdk.propertyValidator("loRaWanUpdateGatewayTaskEntry",CfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyValidator)(properties.loRaWanUpdateGatewayTaskEntry)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("taskDefinitionType",cdk.validateString)(properties.taskDefinitionType)),errors.collect(cdk.propertyValidator("update",CfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyValidator)(properties.update)),errors.wrap('supplied properties not correct for "CfnTaskDefinitionProps"')}function convertCfnTaskDefinitionPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTaskDefinitionPropsValidator(properties).assertSuccess(),{AutoCreateTasks:cdk.booleanToCloudFormation(properties.autoCreateTasks),LoRaWANUpdateGatewayTaskEntry:convertCfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyToCloudFormation(properties.loRaWanUpdateGatewayTaskEntry),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),TaskDefinitionType:cdk.stringToCloudFormation(properties.taskDefinitionType),Update:convertCfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyToCloudFormation(properties.update)}):properties}function CfnTaskDefinitionPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("autoCreateTasks","AutoCreateTasks",properties.AutoCreateTasks!=null?cfn_parse.FromCloudFormation.getBoolean(properties.AutoCreateTasks):void 0),ret.addPropertyResult("loRaWanUpdateGatewayTaskEntry","LoRaWANUpdateGatewayTaskEntry",properties.LoRaWANUpdateGatewayTaskEntry!=null?CfnTaskDefinitionLoRaWANUpdateGatewayTaskEntryPropertyFromCloudFormation(properties.LoRaWANUpdateGatewayTaskEntry):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("taskDefinitionType","TaskDefinitionType",properties.TaskDefinitionType!=null?cfn_parse.FromCloudFormation.getString(properties.TaskDefinitionType):void 0),ret.addPropertyResult("update","Update",properties.Update!=null?CfnTaskDefinitionUpdateWirelessGatewayTaskCreatePropertyFromCloudFormation(properties.Update):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWirelessDevice extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWirelessDevicePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnWirelessDevice(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnWirelessDevice.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnWirelessDeviceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWirelessDevice),error}cdk.requireProperty(props,"destinationName",this),cdk.requireProperty(props,"type",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrThingName=cdk.Token.asString(this.getAtt("ThingName",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.destinationName=props.destinationName,this.lastUplinkReceivedAt=props.lastUplinkReceivedAt,this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::WirelessDevice",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.thingArn=props.thingArn,this.type=props.type}get cfnProperties(){return{description:this.description,destinationName:this.destinationName,lastUplinkReceivedAt:this.lastUplinkReceivedAt,loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags(),thingArn:this.thingArn,type:this.type}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWirelessDevice.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnWirelessDevicePropsToCloudFormation(props)}}exports.CfnWirelessDevice=CfnWirelessDevice,_j=JSII_RTTI_SYMBOL_1,CfnWirelessDevice[_j]={fqn:"aws-cdk-lib.aws_iotwireless.CfnWirelessDevice",version:"2.94.0"},CfnWirelessDevice.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::WirelessDevice";function CfnWirelessDeviceSessionKeysAbpV10xPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appSKey",cdk.requiredValidator)(properties.appSKey)),errors.collect(cdk.propertyValidator("appSKey",cdk.validateString)(properties.appSKey)),errors.collect(cdk.propertyValidator("nwkSKey",cdk.requiredValidator)(properties.nwkSKey)),errors.collect(cdk.propertyValidator("nwkSKey",cdk.validateString)(properties.nwkSKey)),errors.wrap('supplied properties not correct for "SessionKeysAbpV10xProperty"')}function convertCfnWirelessDeviceSessionKeysAbpV10xPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceSessionKeysAbpV10xPropertyValidator(properties).assertSuccess(),{AppSKey:cdk.stringToCloudFormation(properties.appSKey),NwkSKey:cdk.stringToCloudFormation(properties.nwkSKey)}):properties}function CfnWirelessDeviceSessionKeysAbpV10xPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appSKey","AppSKey",properties.AppSKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppSKey):void 0),ret.addPropertyResult("nwkSKey","NwkSKey",properties.NwkSKey!=null?cfn_parse.FromCloudFormation.getString(properties.NwkSKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceAbpV10xPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("devAddr",cdk.requiredValidator)(properties.devAddr)),errors.collect(cdk.propertyValidator("devAddr",cdk.validateString)(properties.devAddr)),errors.collect(cdk.propertyValidator("sessionKeys",cdk.requiredValidator)(properties.sessionKeys)),errors.collect(cdk.propertyValidator("sessionKeys",CfnWirelessDeviceSessionKeysAbpV10xPropertyValidator)(properties.sessionKeys)),errors.wrap('supplied properties not correct for "AbpV10xProperty"')}function convertCfnWirelessDeviceAbpV10xPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceAbpV10xPropertyValidator(properties).assertSuccess(),{DevAddr:cdk.stringToCloudFormation(properties.devAddr),SessionKeys:convertCfnWirelessDeviceSessionKeysAbpV10xPropertyToCloudFormation(properties.sessionKeys)}):properties}function CfnWirelessDeviceAbpV10xPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("devAddr","DevAddr",properties.DevAddr!=null?cfn_parse.FromCloudFormation.getString(properties.DevAddr):void 0),ret.addPropertyResult("sessionKeys","SessionKeys",properties.SessionKeys!=null?CfnWirelessDeviceSessionKeysAbpV10xPropertyFromCloudFormation(properties.SessionKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceOtaaV11PropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appKey",cdk.requiredValidator)(properties.appKey)),errors.collect(cdk.propertyValidator("appKey",cdk.validateString)(properties.appKey)),errors.collect(cdk.propertyValidator("joinEui",cdk.requiredValidator)(properties.joinEui)),errors.collect(cdk.propertyValidator("joinEui",cdk.validateString)(properties.joinEui)),errors.collect(cdk.propertyValidator("nwkKey",cdk.requiredValidator)(properties.nwkKey)),errors.collect(cdk.propertyValidator("nwkKey",cdk.validateString)(properties.nwkKey)),errors.wrap('supplied properties not correct for "OtaaV11Property"')}function convertCfnWirelessDeviceOtaaV11PropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceOtaaV11PropertyValidator(properties).assertSuccess(),{AppKey:cdk.stringToCloudFormation(properties.appKey),JoinEui:cdk.stringToCloudFormation(properties.joinEui),NwkKey:cdk.stringToCloudFormation(properties.nwkKey)}):properties}function CfnWirelessDeviceOtaaV11PropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appKey","AppKey",properties.AppKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppKey):void 0),ret.addPropertyResult("joinEui","JoinEui",properties.JoinEui!=null?cfn_parse.FromCloudFormation.getString(properties.JoinEui):void 0),ret.addPropertyResult("nwkKey","NwkKey",properties.NwkKey!=null?cfn_parse.FromCloudFormation.getString(properties.NwkKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceSessionKeysAbpV11PropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appSKey",cdk.requiredValidator)(properties.appSKey)),errors.collect(cdk.propertyValidator("appSKey",cdk.validateString)(properties.appSKey)),errors.collect(cdk.propertyValidator("fNwkSIntKey",cdk.requiredValidator)(properties.fNwkSIntKey)),errors.collect(cdk.propertyValidator("fNwkSIntKey",cdk.validateString)(properties.fNwkSIntKey)),errors.collect(cdk.propertyValidator("nwkSEncKey",cdk.requiredValidator)(properties.nwkSEncKey)),errors.collect(cdk.propertyValidator("nwkSEncKey",cdk.validateString)(properties.nwkSEncKey)),errors.collect(cdk.propertyValidator("sNwkSIntKey",cdk.requiredValidator)(properties.sNwkSIntKey)),errors.collect(cdk.propertyValidator("sNwkSIntKey",cdk.validateString)(properties.sNwkSIntKey)),errors.wrap('supplied properties not correct for "SessionKeysAbpV11Property"')}function convertCfnWirelessDeviceSessionKeysAbpV11PropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceSessionKeysAbpV11PropertyValidator(properties).assertSuccess(),{AppSKey:cdk.stringToCloudFormation(properties.appSKey),FNwkSIntKey:cdk.stringToCloudFormation(properties.fNwkSIntKey),NwkSEncKey:cdk.stringToCloudFormation(properties.nwkSEncKey),SNwkSIntKey:cdk.stringToCloudFormation(properties.sNwkSIntKey)}):properties}function CfnWirelessDeviceSessionKeysAbpV11PropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appSKey","AppSKey",properties.AppSKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppSKey):void 0),ret.addPropertyResult("fNwkSIntKey","FNwkSIntKey",properties.FNwkSIntKey!=null?cfn_parse.FromCloudFormation.getString(properties.FNwkSIntKey):void 0),ret.addPropertyResult("nwkSEncKey","NwkSEncKey",properties.NwkSEncKey!=null?cfn_parse.FromCloudFormation.getString(properties.NwkSEncKey):void 0),ret.addPropertyResult("sNwkSIntKey","SNwkSIntKey",properties.SNwkSIntKey!=null?cfn_parse.FromCloudFormation.getString(properties.SNwkSIntKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceAbpV11PropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("devAddr",cdk.requiredValidator)(properties.devAddr)),errors.collect(cdk.propertyValidator("devAddr",cdk.validateString)(properties.devAddr)),errors.collect(cdk.propertyValidator("sessionKeys",cdk.requiredValidator)(properties.sessionKeys)),errors.collect(cdk.propertyValidator("sessionKeys",CfnWirelessDeviceSessionKeysAbpV11PropertyValidator)(properties.sessionKeys)),errors.wrap('supplied properties not correct for "AbpV11Property"')}function convertCfnWirelessDeviceAbpV11PropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceAbpV11PropertyValidator(properties).assertSuccess(),{DevAddr:cdk.stringToCloudFormation(properties.devAddr),SessionKeys:convertCfnWirelessDeviceSessionKeysAbpV11PropertyToCloudFormation(properties.sessionKeys)}):properties}function CfnWirelessDeviceAbpV11PropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("devAddr","DevAddr",properties.DevAddr!=null?cfn_parse.FromCloudFormation.getString(properties.DevAddr):void 0),ret.addPropertyResult("sessionKeys","SessionKeys",properties.SessionKeys!=null?CfnWirelessDeviceSessionKeysAbpV11PropertyFromCloudFormation(properties.SessionKeys):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceOtaaV10xPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("appEui",cdk.requiredValidator)(properties.appEui)),errors.collect(cdk.propertyValidator("appEui",cdk.validateString)(properties.appEui)),errors.collect(cdk.propertyValidator("appKey",cdk.requiredValidator)(properties.appKey)),errors.collect(cdk.propertyValidator("appKey",cdk.validateString)(properties.appKey)),errors.wrap('supplied properties not correct for "OtaaV10xProperty"')}function convertCfnWirelessDeviceOtaaV10xPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceOtaaV10xPropertyValidator(properties).assertSuccess(),{AppEui:cdk.stringToCloudFormation(properties.appEui),AppKey:cdk.stringToCloudFormation(properties.appKey)}):properties}function CfnWirelessDeviceOtaaV10xPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("appEui","AppEui",properties.AppEui!=null?cfn_parse.FromCloudFormation.getString(properties.AppEui):void 0),ret.addPropertyResult("appKey","AppKey",properties.AppKey!=null?cfn_parse.FromCloudFormation.getString(properties.AppKey):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceLoRaWANDevicePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("abpV10X",CfnWirelessDeviceAbpV10xPropertyValidator)(properties.abpV10X)),errors.collect(cdk.propertyValidator("abpV11",CfnWirelessDeviceAbpV11PropertyValidator)(properties.abpV11)),errors.collect(cdk.propertyValidator("devEui",cdk.validateString)(properties.devEui)),errors.collect(cdk.propertyValidator("deviceProfileId",cdk.validateString)(properties.deviceProfileId)),errors.collect(cdk.propertyValidator("otaaV10X",CfnWirelessDeviceOtaaV10xPropertyValidator)(properties.otaaV10X)),errors.collect(cdk.propertyValidator("otaaV11",CfnWirelessDeviceOtaaV11PropertyValidator)(properties.otaaV11)),errors.collect(cdk.propertyValidator("serviceProfileId",cdk.validateString)(properties.serviceProfileId)),errors.wrap('supplied properties not correct for "LoRaWANDeviceProperty"')}function convertCfnWirelessDeviceLoRaWANDevicePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceLoRaWANDevicePropertyValidator(properties).assertSuccess(),{AbpV10x:convertCfnWirelessDeviceAbpV10xPropertyToCloudFormation(properties.abpV10X),AbpV11:convertCfnWirelessDeviceAbpV11PropertyToCloudFormation(properties.abpV11),DevEui:cdk.stringToCloudFormation(properties.devEui),DeviceProfileId:cdk.stringToCloudFormation(properties.deviceProfileId),OtaaV10x:convertCfnWirelessDeviceOtaaV10xPropertyToCloudFormation(properties.otaaV10X),OtaaV11:convertCfnWirelessDeviceOtaaV11PropertyToCloudFormation(properties.otaaV11),ServiceProfileId:cdk.stringToCloudFormation(properties.serviceProfileId)}):properties}function CfnWirelessDeviceLoRaWANDevicePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("abpV10X","AbpV10x",properties.AbpV10x!=null?CfnWirelessDeviceAbpV10xPropertyFromCloudFormation(properties.AbpV10x):void 0),ret.addPropertyResult("abpV11","AbpV11",properties.AbpV11!=null?CfnWirelessDeviceAbpV11PropertyFromCloudFormation(properties.AbpV11):void 0),ret.addPropertyResult("devEui","DevEui",properties.DevEui!=null?cfn_parse.FromCloudFormation.getString(properties.DevEui):void 0),ret.addPropertyResult("deviceProfileId","DeviceProfileId",properties.DeviceProfileId!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceProfileId):void 0),ret.addPropertyResult("otaaV10X","OtaaV10x",properties.OtaaV10x!=null?CfnWirelessDeviceOtaaV10xPropertyFromCloudFormation(properties.OtaaV10x):void 0),ret.addPropertyResult("otaaV11","OtaaV11",properties.OtaaV11!=null?CfnWirelessDeviceOtaaV11PropertyFromCloudFormation(properties.OtaaV11):void 0),ret.addPropertyResult("serviceProfileId","ServiceProfileId",properties.ServiceProfileId!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceProfileId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDevicePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("destinationName",cdk.requiredValidator)(properties.destinationName)),errors.collect(cdk.propertyValidator("destinationName",cdk.validateString)(properties.destinationName)),errors.collect(cdk.propertyValidator("lastUplinkReceivedAt",cdk.validateString)(properties.lastUplinkReceivedAt)),errors.collect(cdk.propertyValidator("loRaWan",CfnWirelessDeviceLoRaWANDevicePropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("thingArn",cdk.validateString)(properties.thingArn)),errors.collect(cdk.propertyValidator("type",cdk.requiredValidator)(properties.type)),errors.collect(cdk.propertyValidator("type",cdk.validateString)(properties.type)),errors.wrap('supplied properties not correct for "CfnWirelessDeviceProps"')}function convertCfnWirelessDevicePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDevicePropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),DestinationName:cdk.stringToCloudFormation(properties.destinationName),LastUplinkReceivedAt:cdk.stringToCloudFormation(properties.lastUplinkReceivedAt),LoRaWAN:convertCfnWirelessDeviceLoRaWANDevicePropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),ThingArn:cdk.stringToCloudFormation(properties.thingArn),Type:cdk.stringToCloudFormation(properties.type)}):properties}function CfnWirelessDevicePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("destinationName","DestinationName",properties.DestinationName!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationName):void 0),ret.addPropertyResult("lastUplinkReceivedAt","LastUplinkReceivedAt",properties.LastUplinkReceivedAt!=null?cfn_parse.FromCloudFormation.getString(properties.LastUplinkReceivedAt):void 0),ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnWirelessDeviceLoRaWANDevicePropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("thingArn","ThingArn",properties.ThingArn!=null?cfn_parse.FromCloudFormation.getString(properties.ThingArn):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse.FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWirelessDeviceImportTask extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWirelessDeviceImportTaskPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnWirelessDeviceImportTask(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnWirelessDeviceImportTask.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnWirelessDeviceImportTaskProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWirelessDeviceImportTask),error}cdk.requireProperty(props,"destinationName",this),cdk.requireProperty(props,"sidewalk",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrCreationDate=cdk.Token.asString(this.getAtt("CreationDate",cdk.ResolutionTypeHint.STRING)),this.attrFailedImportedDevicesCount=cdk.Token.asNumber(this.getAtt("FailedImportedDevicesCount",cdk.ResolutionTypeHint.NUMBER)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.attrInitializedImportedDevicesCount=cdk.Token.asNumber(this.getAtt("InitializedImportedDevicesCount",cdk.ResolutionTypeHint.NUMBER)),this.attrOnboardedImportedDevicesCount=cdk.Token.asNumber(this.getAtt("OnboardedImportedDevicesCount",cdk.ResolutionTypeHint.NUMBER)),this.attrPendingImportedDevicesCount=cdk.Token.asNumber(this.getAtt("PendingImportedDevicesCount",cdk.ResolutionTypeHint.NUMBER)),this.attrSidewalkDeviceCreationFileList=cdk.Token.asList(this.getAtt("Sidewalk.DeviceCreationFileList",cdk.ResolutionTypeHint.STRING_LIST)),this.attrStatus=cdk.Token.asString(this.getAtt("Status",cdk.ResolutionTypeHint.STRING)),this.attrStatusReason=cdk.Token.asString(this.getAtt("StatusReason",cdk.ResolutionTypeHint.STRING)),this.destinationName=props.destinationName,this.sidewalk=props.sidewalk,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::WirelessDeviceImportTask",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{destinationName:this.destinationName,sidewalk:this.sidewalk,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWirelessDeviceImportTask.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnWirelessDeviceImportTaskPropsToCloudFormation(props)}}exports.CfnWirelessDeviceImportTask=CfnWirelessDeviceImportTask,_k=JSII_RTTI_SYMBOL_1,CfnWirelessDeviceImportTask[_k]={fqn:"aws-cdk-lib.aws_iotwireless.CfnWirelessDeviceImportTask",version:"2.94.0"},CfnWirelessDeviceImportTask.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::WirelessDeviceImportTask";function CfnWirelessDeviceImportTaskSidewalkPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("deviceCreationFile",cdk.validateString)(properties.deviceCreationFile)),errors.collect(cdk.propertyValidator("deviceCreationFileList",cdk.listValidator(cdk.validateString))(properties.deviceCreationFileList)),errors.collect(cdk.propertyValidator("role",cdk.validateString)(properties.role)),errors.collect(cdk.propertyValidator("sidewalkManufacturingSn",cdk.validateString)(properties.sidewalkManufacturingSn)),errors.wrap('supplied properties not correct for "SidewalkProperty"')}function convertCfnWirelessDeviceImportTaskSidewalkPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceImportTaskSidewalkPropertyValidator(properties).assertSuccess(),{DeviceCreationFile:cdk.stringToCloudFormation(properties.deviceCreationFile),DeviceCreationFileList:cdk.listMapper(cdk.stringToCloudFormation)(properties.deviceCreationFileList),Role:cdk.stringToCloudFormation(properties.role),SidewalkManufacturingSn:cdk.stringToCloudFormation(properties.sidewalkManufacturingSn)}):properties}function CfnWirelessDeviceImportTaskSidewalkPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("deviceCreationFile","DeviceCreationFile",properties.DeviceCreationFile!=null?cfn_parse.FromCloudFormation.getString(properties.DeviceCreationFile):void 0),ret.addPropertyResult("deviceCreationFileList","DeviceCreationFileList",properties.DeviceCreationFileList!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.DeviceCreationFileList):void 0),ret.addPropertyResult("role","Role",properties.Role!=null?cfn_parse.FromCloudFormation.getString(properties.Role):void 0),ret.addPropertyResult("sidewalkManufacturingSn","SidewalkManufacturingSn",properties.SidewalkManufacturingSn!=null?cfn_parse.FromCloudFormation.getString(properties.SidewalkManufacturingSn):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessDeviceImportTaskPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("destinationName",cdk.requiredValidator)(properties.destinationName)),errors.collect(cdk.propertyValidator("destinationName",cdk.validateString)(properties.destinationName)),errors.collect(cdk.propertyValidator("sidewalk",cdk.requiredValidator)(properties.sidewalk)),errors.collect(cdk.propertyValidator("sidewalk",CfnWirelessDeviceImportTaskSidewalkPropertyValidator)(properties.sidewalk)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnWirelessDeviceImportTaskProps"')}function convertCfnWirelessDeviceImportTaskPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessDeviceImportTaskPropsValidator(properties).assertSuccess(),{DestinationName:cdk.stringToCloudFormation(properties.destinationName),Sidewalk:convertCfnWirelessDeviceImportTaskSidewalkPropertyToCloudFormation(properties.sidewalk),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnWirelessDeviceImportTaskPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("destinationName","DestinationName",properties.DestinationName!=null?cfn_parse.FromCloudFormation.getString(properties.DestinationName):void 0),ret.addPropertyResult("sidewalk","Sidewalk",properties.Sidewalk!=null?CfnWirelessDeviceImportTaskSidewalkPropertyFromCloudFormation(properties.Sidewalk):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWirelessGateway extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWirelessGatewayPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnWirelessGateway(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnWirelessGateway.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_iotwireless_CfnWirelessGatewayProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWirelessGateway),error}cdk.requireProperty(props,"loRaWan",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.lastUplinkReceivedAt=props.lastUplinkReceivedAt,this.loRaWan=props.loRaWan,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::IoTWireless::WirelessGateway",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.thingArn=props.thingArn,this.thingName=props.thingName}get cfnProperties(){return{description:this.description,lastUplinkReceivedAt:this.lastUplinkReceivedAt,loRaWan:this.loRaWan,name:this.name,tags:this.tags.renderTags(),thingArn:this.thingArn,thingName:this.thingName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWirelessGateway.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnWirelessGatewayPropsToCloudFormation(props)}}exports.CfnWirelessGateway=CfnWirelessGateway,_l=JSII_RTTI_SYMBOL_1,CfnWirelessGateway[_l]={fqn:"aws-cdk-lib.aws_iotwireless.CfnWirelessGateway",version:"2.94.0"},CfnWirelessGateway.CFN_RESOURCE_TYPE_NAME="AWS::IoTWireless::WirelessGateway";function CfnWirelessGatewayLoRaWANGatewayPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("gatewayEui",cdk.requiredValidator)(properties.gatewayEui)),errors.collect(cdk.propertyValidator("gatewayEui",cdk.validateString)(properties.gatewayEui)),errors.collect(cdk.propertyValidator("rfRegion",cdk.requiredValidator)(properties.rfRegion)),errors.collect(cdk.propertyValidator("rfRegion",cdk.validateString)(properties.rfRegion)),errors.wrap('supplied properties not correct for "LoRaWANGatewayProperty"')}function convertCfnWirelessGatewayLoRaWANGatewayPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessGatewayLoRaWANGatewayPropertyValidator(properties).assertSuccess(),{GatewayEui:cdk.stringToCloudFormation(properties.gatewayEui),RfRegion:cdk.stringToCloudFormation(properties.rfRegion)}):properties}function CfnWirelessGatewayLoRaWANGatewayPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("gatewayEui","GatewayEui",properties.GatewayEui!=null?cfn_parse.FromCloudFormation.getString(properties.GatewayEui):void 0),ret.addPropertyResult("rfRegion","RfRegion",properties.RfRegion!=null?cfn_parse.FromCloudFormation.getString(properties.RfRegion):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWirelessGatewayPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("lastUplinkReceivedAt",cdk.validateString)(properties.lastUplinkReceivedAt)),errors.collect(cdk.propertyValidator("loRaWan",cdk.requiredValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("loRaWan",CfnWirelessGatewayLoRaWANGatewayPropertyValidator)(properties.loRaWan)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("thingArn",cdk.validateString)(properties.thingArn)),errors.collect(cdk.propertyValidator("thingName",cdk.validateString)(properties.thingName)),errors.wrap('supplied properties not correct for "CfnWirelessGatewayProps"')}function convertCfnWirelessGatewayPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWirelessGatewayPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),LastUplinkReceivedAt:cdk.stringToCloudFormation(properties.lastUplinkReceivedAt),LoRaWAN:convertCfnWirelessGatewayLoRaWANGatewayPropertyToCloudFormation(properties.loRaWan),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),ThingArn:cdk.stringToCloudFormation(properties.thingArn),ThingName:cdk.stringToCloudFormation(properties.thingName)}):properties}function CfnWirelessGatewayPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("lastUplinkReceivedAt","LastUplinkReceivedAt",properties.LastUplinkReceivedAt!=null?cfn_parse.FromCloudFormation.getString(properties.LastUplinkReceivedAt):void 0),ret.addPropertyResult("loRaWan","LoRaWAN",properties.LoRaWAN!=null?CfnWirelessGatewayLoRaWANGatewayPropertyFromCloudFormation(properties.LoRaWAN):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("thingArn","ThingArn",properties.ThingArn!=null?cfn_parse.FromCloudFormation.getString(properties.ThingArn):void 0),ret.addPropertyResult("thingName","ThingName",properties.ThingName!=null?cfn_parse.FromCloudFormation.getString(properties.ThingName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
