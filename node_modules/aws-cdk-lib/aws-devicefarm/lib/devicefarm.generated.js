"use strict";var _a,_b,_c,_d,_e,_f;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnVPCEConfiguration=exports.CfnTestGridProject=exports.CfnProject=exports.CfnNetworkProfile=exports.CfnInstanceProfile=exports.CfnDevicePool=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnDevicePool extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnDevicePoolPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnDevicePool(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnDevicePool.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnDevicePoolProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnDevicePool),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"projectArn",this),cdk.requireProperty(props,"rules",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.maxDevices=props.maxDevices,this.name=props.name,this.projectArn=props.projectArn,this.rules=props.rules,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::DevicePool",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,maxDevices:this.maxDevices,name:this.name,projectArn:this.projectArn,rules:this.rules,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnDevicePool.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnDevicePoolPropsToCloudFormation(props)}}exports.CfnDevicePool=CfnDevicePool,_a=JSII_RTTI_SYMBOL_1,CfnDevicePool[_a]={fqn:"aws-cdk-lib.aws_devicefarm.CfnDevicePool",version:"2.94.0"},CfnDevicePool.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::DevicePool";function CfnDevicePoolRulePropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("attribute",cdk.validateString)(properties.attribute)),errors.collect(cdk.propertyValidator("operator",cdk.validateString)(properties.operator)),errors.collect(cdk.propertyValidator("value",cdk.validateString)(properties.value)),errors.wrap('supplied properties not correct for "RuleProperty"')}function convertCfnDevicePoolRulePropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDevicePoolRulePropertyValidator(properties).assertSuccess(),{Attribute:cdk.stringToCloudFormation(properties.attribute),Operator:cdk.stringToCloudFormation(properties.operator),Value:cdk.stringToCloudFormation(properties.value)}):properties}function CfnDevicePoolRulePropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("attribute","Attribute",properties.Attribute!=null?cfn_parse.FromCloudFormation.getString(properties.Attribute):void 0),ret.addPropertyResult("operator","Operator",properties.Operator!=null?cfn_parse.FromCloudFormation.getString(properties.Operator):void 0),ret.addPropertyResult("value","Value",properties.Value!=null?cfn_parse.FromCloudFormation.getString(properties.Value):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnDevicePoolPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("maxDevices",cdk.validateNumber)(properties.maxDevices)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("projectArn",cdk.requiredValidator)(properties.projectArn)),errors.collect(cdk.propertyValidator("projectArn",cdk.validateString)(properties.projectArn)),errors.collect(cdk.propertyValidator("rules",cdk.requiredValidator)(properties.rules)),errors.collect(cdk.propertyValidator("rules",cdk.listValidator(CfnDevicePoolRulePropertyValidator))(properties.rules)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnDevicePoolProps"')}function convertCfnDevicePoolPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnDevicePoolPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),MaxDevices:cdk.numberToCloudFormation(properties.maxDevices),Name:cdk.stringToCloudFormation(properties.name),ProjectArn:cdk.stringToCloudFormation(properties.projectArn),Rules:cdk.listMapper(convertCfnDevicePoolRulePropertyToCloudFormation)(properties.rules),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnDevicePoolPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("maxDevices","MaxDevices",properties.MaxDevices!=null?cfn_parse.FromCloudFormation.getNumber(properties.MaxDevices):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("projectArn","ProjectArn",properties.ProjectArn!=null?cfn_parse.FromCloudFormation.getString(properties.ProjectArn):void 0),ret.addPropertyResult("rules","Rules",properties.Rules!=null?cfn_parse.FromCloudFormation.getArray(CfnDevicePoolRulePropertyFromCloudFormation)(properties.Rules):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnInstanceProfile extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnInstanceProfilePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnInstanceProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnInstanceProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnInstanceProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnInstanceProfile),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.excludeAppPackagesFromCleanup=props.excludeAppPackagesFromCleanup,this.name=props.name,this.packageCleanup=props.packageCleanup,this.rebootAfterUse=props.rebootAfterUse,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::InstanceProfile",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{description:this.description,excludeAppPackagesFromCleanup:this.excludeAppPackagesFromCleanup,name:this.name,packageCleanup:this.packageCleanup,rebootAfterUse:this.rebootAfterUse,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnInstanceProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnInstanceProfilePropsToCloudFormation(props)}}exports.CfnInstanceProfile=CfnInstanceProfile,_b=JSII_RTTI_SYMBOL_1,CfnInstanceProfile[_b]={fqn:"aws-cdk-lib.aws_devicefarm.CfnInstanceProfile",version:"2.94.0"},CfnInstanceProfile.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::InstanceProfile";function CfnInstanceProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("excludeAppPackagesFromCleanup",cdk.listValidator(cdk.validateString))(properties.excludeAppPackagesFromCleanup)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("packageCleanup",cdk.validateBoolean)(properties.packageCleanup)),errors.collect(cdk.propertyValidator("rebootAfterUse",cdk.validateBoolean)(properties.rebootAfterUse)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnInstanceProfileProps"')}function convertCfnInstanceProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnInstanceProfilePropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),ExcludeAppPackagesFromCleanup:cdk.listMapper(cdk.stringToCloudFormation)(properties.excludeAppPackagesFromCleanup),Name:cdk.stringToCloudFormation(properties.name),PackageCleanup:cdk.booleanToCloudFormation(properties.packageCleanup),RebootAfterUse:cdk.booleanToCloudFormation(properties.rebootAfterUse),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnInstanceProfilePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("excludeAppPackagesFromCleanup","ExcludeAppPackagesFromCleanup",properties.ExcludeAppPackagesFromCleanup!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.ExcludeAppPackagesFromCleanup):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("packageCleanup","PackageCleanup",properties.PackageCleanup!=null?cfn_parse.FromCloudFormation.getBoolean(properties.PackageCleanup):void 0),ret.addPropertyResult("rebootAfterUse","RebootAfterUse",properties.RebootAfterUse!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RebootAfterUse):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnNetworkProfile extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnNetworkProfilePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnNetworkProfile(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnNetworkProfile.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnNetworkProfileProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnNetworkProfile),error}cdk.requireProperty(props,"name",this),cdk.requireProperty(props,"projectArn",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.downlinkBandwidthBits=props.downlinkBandwidthBits,this.downlinkDelayMs=props.downlinkDelayMs,this.downlinkJitterMs=props.downlinkJitterMs,this.downlinkLossPercent=props.downlinkLossPercent,this.name=props.name,this.projectArn=props.projectArn,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::NetworkProfile",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.uplinkBandwidthBits=props.uplinkBandwidthBits,this.uplinkDelayMs=props.uplinkDelayMs,this.uplinkJitterMs=props.uplinkJitterMs,this.uplinkLossPercent=props.uplinkLossPercent}get cfnProperties(){return{description:this.description,downlinkBandwidthBits:this.downlinkBandwidthBits,downlinkDelayMs:this.downlinkDelayMs,downlinkJitterMs:this.downlinkJitterMs,downlinkLossPercent:this.downlinkLossPercent,name:this.name,projectArn:this.projectArn,tags:this.tags.renderTags(),uplinkBandwidthBits:this.uplinkBandwidthBits,uplinkDelayMs:this.uplinkDelayMs,uplinkJitterMs:this.uplinkJitterMs,uplinkLossPercent:this.uplinkLossPercent}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnNetworkProfile.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnNetworkProfilePropsToCloudFormation(props)}}exports.CfnNetworkProfile=CfnNetworkProfile,_c=JSII_RTTI_SYMBOL_1,CfnNetworkProfile[_c]={fqn:"aws-cdk-lib.aws_devicefarm.CfnNetworkProfile",version:"2.94.0"},CfnNetworkProfile.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::NetworkProfile";function CfnNetworkProfilePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("downlinkBandwidthBits",cdk.validateNumber)(properties.downlinkBandwidthBits)),errors.collect(cdk.propertyValidator("downlinkDelayMs",cdk.validateNumber)(properties.downlinkDelayMs)),errors.collect(cdk.propertyValidator("downlinkJitterMs",cdk.validateNumber)(properties.downlinkJitterMs)),errors.collect(cdk.propertyValidator("downlinkLossPercent",cdk.validateNumber)(properties.downlinkLossPercent)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("projectArn",cdk.requiredValidator)(properties.projectArn)),errors.collect(cdk.propertyValidator("projectArn",cdk.validateString)(properties.projectArn)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("uplinkBandwidthBits",cdk.validateNumber)(properties.uplinkBandwidthBits)),errors.collect(cdk.propertyValidator("uplinkDelayMs",cdk.validateNumber)(properties.uplinkDelayMs)),errors.collect(cdk.propertyValidator("uplinkJitterMs",cdk.validateNumber)(properties.uplinkJitterMs)),errors.collect(cdk.propertyValidator("uplinkLossPercent",cdk.validateNumber)(properties.uplinkLossPercent)),errors.wrap('supplied properties not correct for "CfnNetworkProfileProps"')}function convertCfnNetworkProfilePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnNetworkProfilePropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),DownlinkBandwidthBits:cdk.numberToCloudFormation(properties.downlinkBandwidthBits),DownlinkDelayMs:cdk.numberToCloudFormation(properties.downlinkDelayMs),DownlinkJitterMs:cdk.numberToCloudFormation(properties.downlinkJitterMs),DownlinkLossPercent:cdk.numberToCloudFormation(properties.downlinkLossPercent),Name:cdk.stringToCloudFormation(properties.name),ProjectArn:cdk.stringToCloudFormation(properties.projectArn),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UplinkBandwidthBits:cdk.numberToCloudFormation(properties.uplinkBandwidthBits),UplinkDelayMs:cdk.numberToCloudFormation(properties.uplinkDelayMs),UplinkJitterMs:cdk.numberToCloudFormation(properties.uplinkJitterMs),UplinkLossPercent:cdk.numberToCloudFormation(properties.uplinkLossPercent)}):properties}function CfnNetworkProfilePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("downlinkBandwidthBits","DownlinkBandwidthBits",properties.DownlinkBandwidthBits!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownlinkBandwidthBits):void 0),ret.addPropertyResult("downlinkDelayMs","DownlinkDelayMs",properties.DownlinkDelayMs!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownlinkDelayMs):void 0),ret.addPropertyResult("downlinkJitterMs","DownlinkJitterMs",properties.DownlinkJitterMs!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownlinkJitterMs):void 0),ret.addPropertyResult("downlinkLossPercent","DownlinkLossPercent",properties.DownlinkLossPercent!=null?cfn_parse.FromCloudFormation.getNumber(properties.DownlinkLossPercent):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("projectArn","ProjectArn",properties.ProjectArn!=null?cfn_parse.FromCloudFormation.getString(properties.ProjectArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("uplinkBandwidthBits","UplinkBandwidthBits",properties.UplinkBandwidthBits!=null?cfn_parse.FromCloudFormation.getNumber(properties.UplinkBandwidthBits):void 0),ret.addPropertyResult("uplinkDelayMs","UplinkDelayMs",properties.UplinkDelayMs!=null?cfn_parse.FromCloudFormation.getNumber(properties.UplinkDelayMs):void 0),ret.addPropertyResult("uplinkJitterMs","UplinkJitterMs",properties.UplinkJitterMs!=null?cfn_parse.FromCloudFormation.getNumber(properties.UplinkJitterMs):void 0),ret.addPropertyResult("uplinkLossPercent","UplinkLossPercent",properties.UplinkLossPercent!=null?cfn_parse.FromCloudFormation.getNumber(properties.UplinkLossPercent):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnProject extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnProjectPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnProject(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnProject.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnProjectProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnProject),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.defaultJobTimeoutMinutes=props.defaultJobTimeoutMinutes,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::Project",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcConfig=props.vpcConfig}get cfnProperties(){return{defaultJobTimeoutMinutes:this.defaultJobTimeoutMinutes,name:this.name,tags:this.tags.renderTags(),vpcConfig:this.vpcConfig}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnProject.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnProjectPropsToCloudFormation(props)}}exports.CfnProject=CfnProject,_d=JSII_RTTI_SYMBOL_1,CfnProject[_d]={fqn:"aws-cdk-lib.aws_devicefarm.CfnProject",version:"2.94.0"},CfnProject.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::Project";function CfnProjectVpcConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.requiredValidator)(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "VpcConfigProperty"')}function convertCfnProjectVpcConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnProjectVpcConfigPropertyValidator(properties).assertSuccess(),{SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnProjectVpcConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnProjectPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("defaultJobTimeoutMinutes",cdk.validateNumber)(properties.defaultJobTimeoutMinutes)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcConfig",CfnProjectVpcConfigPropertyValidator)(properties.vpcConfig)),errors.wrap('supplied properties not correct for "CfnProjectProps"')}function convertCfnProjectPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnProjectPropsValidator(properties).assertSuccess(),{DefaultJobTimeoutMinutes:cdk.numberToCloudFormation(properties.defaultJobTimeoutMinutes),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcConfig:convertCfnProjectVpcConfigPropertyToCloudFormation(properties.vpcConfig)}):properties}function CfnProjectPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("defaultJobTimeoutMinutes","DefaultJobTimeoutMinutes",properties.DefaultJobTimeoutMinutes!=null?cfn_parse.FromCloudFormation.getNumber(properties.DefaultJobTimeoutMinutes):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcConfig","VpcConfig",properties.VpcConfig!=null?CfnProjectVpcConfigPropertyFromCloudFormation(properties.VpcConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnTestGridProject extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTestGridProjectPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTestGridProject(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTestGridProject.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnTestGridProjectProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTestGridProject),error}cdk.requireProperty(props,"name",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.description=props.description,this.name=props.name,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::TestGridProject",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpcConfig=props.vpcConfig}get cfnProperties(){return{description:this.description,name:this.name,tags:this.tags.renderTags(),vpcConfig:this.vpcConfig}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTestGridProject.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTestGridProjectPropsToCloudFormation(props)}}exports.CfnTestGridProject=CfnTestGridProject,_e=JSII_RTTI_SYMBOL_1,CfnTestGridProject[_e]={fqn:"aws-cdk-lib.aws_devicefarm.CfnTestGridProject",version:"2.94.0"},CfnTestGridProject.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::TestGridProject";function CfnTestGridProjectVpcConfigPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.requiredValidator)(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("securityGroupIds",cdk.listValidator(cdk.validateString))(properties.securityGroupIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.requiredValidator)(properties.subnetIds)),errors.collect(cdk.propertyValidator("subnetIds",cdk.listValidator(cdk.validateString))(properties.subnetIds)),errors.collect(cdk.propertyValidator("vpcId",cdk.requiredValidator)(properties.vpcId)),errors.collect(cdk.propertyValidator("vpcId",cdk.validateString)(properties.vpcId)),errors.wrap('supplied properties not correct for "VpcConfigProperty"')}function convertCfnTestGridProjectVpcConfigPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTestGridProjectVpcConfigPropertyValidator(properties).assertSuccess(),{SecurityGroupIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.securityGroupIds),SubnetIds:cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),VpcId:cdk.stringToCloudFormation(properties.vpcId)}):properties}function CfnTestGridProjectVpcConfigPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("securityGroupIds","SecurityGroupIds",properties.SecurityGroupIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SecurityGroupIds):void 0),ret.addPropertyResult("subnetIds","SubnetIds",properties.SubnetIds!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getString)(properties.SubnetIds):void 0),ret.addPropertyResult("vpcId","VpcId",properties.VpcId!=null?cfn_parse.FromCloudFormation.getString(properties.VpcId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTestGridProjectPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("description",cdk.validateString)(properties.description)),errors.collect(cdk.propertyValidator("name",cdk.requiredValidator)(properties.name)),errors.collect(cdk.propertyValidator("name",cdk.validateString)(properties.name)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpcConfig",CfnTestGridProjectVpcConfigPropertyValidator)(properties.vpcConfig)),errors.wrap('supplied properties not correct for "CfnTestGridProjectProps"')}function convertCfnTestGridProjectPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnTestGridProjectPropsValidator(properties).assertSuccess(),{Description:cdk.stringToCloudFormation(properties.description),Name:cdk.stringToCloudFormation(properties.name),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpcConfig:convertCfnTestGridProjectVpcConfigPropertyToCloudFormation(properties.vpcConfig)}):properties}function CfnTestGridProjectPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse.FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse.FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpcConfig","VpcConfig",properties.VpcConfig!=null?CfnTestGridProjectVpcConfigPropertyFromCloudFormation(properties.VpcConfig):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnVPCEConfiguration extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnVPCEConfigurationPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnVPCEConfiguration(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnVPCEConfiguration.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_devicefarm_CfnVPCEConfigurationProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnVPCEConfiguration),error}cdk.requireProperty(props,"serviceDnsName",this),cdk.requireProperty(props,"vpceConfigurationName",this),cdk.requireProperty(props,"vpceServiceName",this),this.attrArn=cdk.Token.asString(this.getAtt("Arn",cdk.ResolutionTypeHint.STRING)),this.serviceDnsName=props.serviceDnsName,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::DeviceFarm::VPCEConfiguration",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.vpceConfigurationDescription=props.vpceConfigurationDescription,this.vpceConfigurationName=props.vpceConfigurationName,this.vpceServiceName=props.vpceServiceName}get cfnProperties(){return{serviceDnsName:this.serviceDnsName,tags:this.tags.renderTags(),vpceConfigurationDescription:this.vpceConfigurationDescription,vpceConfigurationName:this.vpceConfigurationName,vpceServiceName:this.vpceServiceName}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnVPCEConfiguration.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnVPCEConfigurationPropsToCloudFormation(props)}}exports.CfnVPCEConfiguration=CfnVPCEConfiguration,_f=JSII_RTTI_SYMBOL_1,CfnVPCEConfiguration[_f]={fqn:"aws-cdk-lib.aws_devicefarm.CfnVPCEConfiguration",version:"2.94.0"},CfnVPCEConfiguration.CFN_RESOURCE_TYPE_NAME="AWS::DeviceFarm::VPCEConfiguration";function CfnVPCEConfigurationPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("serviceDnsName",cdk.requiredValidator)(properties.serviceDnsName)),errors.collect(cdk.propertyValidator("serviceDnsName",cdk.validateString)(properties.serviceDnsName)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("vpceConfigurationDescription",cdk.validateString)(properties.vpceConfigurationDescription)),errors.collect(cdk.propertyValidator("vpceConfigurationName",cdk.requiredValidator)(properties.vpceConfigurationName)),errors.collect(cdk.propertyValidator("vpceConfigurationName",cdk.validateString)(properties.vpceConfigurationName)),errors.collect(cdk.propertyValidator("vpceServiceName",cdk.requiredValidator)(properties.vpceServiceName)),errors.collect(cdk.propertyValidator("vpceServiceName",cdk.validateString)(properties.vpceServiceName)),errors.wrap('supplied properties not correct for "CfnVPCEConfigurationProps"')}function convertCfnVPCEConfigurationPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnVPCEConfigurationPropsValidator(properties).assertSuccess(),{ServiceDnsName:cdk.stringToCloudFormation(properties.serviceDnsName),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),VpceConfigurationDescription:cdk.stringToCloudFormation(properties.vpceConfigurationDescription),VpceConfigurationName:cdk.stringToCloudFormation(properties.vpceConfigurationName),VpceServiceName:cdk.stringToCloudFormation(properties.vpceServiceName)}):properties}function CfnVPCEConfigurationPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("serviceDnsName","ServiceDnsName",properties.ServiceDnsName!=null?cfn_parse.FromCloudFormation.getString(properties.ServiceDnsName):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("vpceConfigurationDescription","VpceConfigurationDescription",properties.VpceConfigurationDescription!=null?cfn_parse.FromCloudFormation.getString(properties.VpceConfigurationDescription):void 0),ret.addPropertyResult("vpceConfigurationName","VpceConfigurationName",properties.VpceConfigurationName!=null?cfn_parse.FromCloudFormation.getString(properties.VpceConfigurationName):void 0),ret.addPropertyResult("vpceServiceName","VpceServiceName",properties.VpceServiceName!=null?cfn_parse.FromCloudFormation.getString(properties.VpceServiceName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
