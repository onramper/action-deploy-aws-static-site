"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkSpacesMetrics=void 0;class WorkSpacesMetrics{static availableAverage(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"Available",dimensionsMap:dimensions,statistic:"Average"}}static unhealthyAverage(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"Unhealthy",dimensionsMap:dimensions,statistic:"Average"}}static sessionLaunchTimeAverage(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"SessionLaunchTime",dimensionsMap:dimensions,statistic:"Average"}}static connectionSuccessSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"ConnectionSuccess",dimensionsMap:dimensions,statistic:"Sum"}}static connectionFailureSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"ConnectionFailure",dimensionsMap:dimensions,statistic:"Sum"}}static connectionAttemptSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"ConnectionAttempt",dimensionsMap:dimensions,statistic:"Sum"}}static inSessionLatencyAverage(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"InSessionLatency",dimensionsMap:dimensions,statistic:"Average"}}static sessionDisconnectSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"SessionDisconnect",dimensionsMap:dimensions,statistic:"Sum"}}static userConnectedSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"UserConnected",dimensionsMap:dimensions,statistic:"Sum"}}static stoppedSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"Stopped",dimensionsMap:dimensions,statistic:"Sum"}}static maintenanceSum(dimensions){return{namespace:"AWS/WorkSpaces",metricName:"Maintenance",dimensionsMap:dimensions,statistic:"Sum"}}}exports.WorkSpacesMetrics=WorkSpacesMetrics;
