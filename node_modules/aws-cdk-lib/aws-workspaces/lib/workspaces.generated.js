"use strict";var _a,_b;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnWorkspace=exports.CfnConnectionAlias=void 0;const jsiiDeprecationWarnings=require("../../.warnings.jsii.js"),JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti"),cdk=require("../../core"),cfn_parse=require("../../core/lib/helpers-internal");class CfnConnectionAlias extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnConnectionAliasPropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnConnectionAlias(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnConnectionAlias.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_workspaces_CfnConnectionAliasProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnConnectionAlias),error}cdk.requireProperty(props,"connectionString",this),this.attrAliasId=cdk.Token.asString(this.getAtt("AliasId",cdk.ResolutionTypeHint.STRING)),this.attrAssociations=this.getAtt("Associations"),this.attrConnectionAliasState=cdk.Token.asString(this.getAtt("ConnectionAliasState",cdk.ResolutionTypeHint.STRING)),this.connectionString=props.connectionString,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::WorkSpaces::ConnectionAlias",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags}get cfnProperties(){return{connectionString:this.connectionString,tags:this.tags.renderTags()}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnConnectionAlias.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnConnectionAliasPropsToCloudFormation(props)}}exports.CfnConnectionAlias=CfnConnectionAlias,_a=JSII_RTTI_SYMBOL_1,CfnConnectionAlias[_a]={fqn:"aws-cdk-lib.aws_workspaces.CfnConnectionAlias",version:"2.94.0"},CfnConnectionAlias.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpaces::ConnectionAlias";function CfnConnectionAliasConnectionAliasAssociationPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("associatedAccountId",cdk.validateString)(properties.associatedAccountId)),errors.collect(cdk.propertyValidator("associationStatus",cdk.validateString)(properties.associationStatus)),errors.collect(cdk.propertyValidator("connectionIdentifier",cdk.validateString)(properties.connectionIdentifier)),errors.collect(cdk.propertyValidator("resourceId",cdk.validateString)(properties.resourceId)),errors.wrap('supplied properties not correct for "ConnectionAliasAssociationProperty"')}function convertCfnConnectionAliasConnectionAliasAssociationPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectionAliasConnectionAliasAssociationPropertyValidator(properties).assertSuccess(),{AssociatedAccountId:cdk.stringToCloudFormation(properties.associatedAccountId),AssociationStatus:cdk.stringToCloudFormation(properties.associationStatus),ConnectionIdentifier:cdk.stringToCloudFormation(properties.connectionIdentifier),ResourceId:cdk.stringToCloudFormation(properties.resourceId)}):properties}function CfnConnectionAliasConnectionAliasAssociationPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("associatedAccountId","AssociatedAccountId",properties.AssociatedAccountId!=null?cfn_parse.FromCloudFormation.getString(properties.AssociatedAccountId):void 0),ret.addPropertyResult("associationStatus","AssociationStatus",properties.AssociationStatus!=null?cfn_parse.FromCloudFormation.getString(properties.AssociationStatus):void 0),ret.addPropertyResult("connectionIdentifier","ConnectionIdentifier",properties.ConnectionIdentifier!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectionIdentifier):void 0),ret.addPropertyResult("resourceId","ResourceId",properties.ResourceId!=null?cfn_parse.FromCloudFormation.getString(properties.ResourceId):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnConnectionAliasPropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("connectionString",cdk.requiredValidator)(properties.connectionString)),errors.collect(cdk.propertyValidator("connectionString",cdk.validateString)(properties.connectionString)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.wrap('supplied properties not correct for "CfnConnectionAliasProps"')}function convertCfnConnectionAliasPropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnConnectionAliasPropsValidator(properties).assertSuccess(),{ConnectionString:cdk.stringToCloudFormation(properties.connectionString),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags)}):properties}function CfnConnectionAliasPropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("connectionString","ConnectionString",properties.ConnectionString!=null?cfn_parse.FromCloudFormation.getString(properties.ConnectionString):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}class CfnWorkspace extends cdk.CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnWorkspacePropsFromCloudFormation(resourceProperties);if(cdk.isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnWorkspace(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnWorkspace.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings.aws_cdk_lib_aws_workspaces_CfnWorkspaceProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnWorkspace),error}cdk.requireProperty(props,"bundleId",this),cdk.requireProperty(props,"directoryId",this),cdk.requireProperty(props,"userName",this),this.attrId=cdk.Token.asString(this.getAtt("Id",cdk.ResolutionTypeHint.STRING)),this.bundleId=props.bundleId,this.directoryId=props.directoryId,this.rootVolumeEncryptionEnabled=props.rootVolumeEncryptionEnabled,this.tags=new cdk.TagManager(cdk.TagType.STANDARD,"AWS::WorkSpaces::Workspace",props.tags,{tagPropertyName:"tags"}),this.tagsRaw=props.tags,this.userName=props.userName,this.userVolumeEncryptionEnabled=props.userVolumeEncryptionEnabled,this.volumeEncryptionKey=props.volumeEncryptionKey,this.workspaceProperties=props.workspaceProperties}get cfnProperties(){return{bundleId:this.bundleId,directoryId:this.directoryId,rootVolumeEncryptionEnabled:this.rootVolumeEncryptionEnabled,tags:this.tags.renderTags(),userName:this.userName,userVolumeEncryptionEnabled:this.userVolumeEncryptionEnabled,volumeEncryptionKey:this.volumeEncryptionKey,workspaceProperties:this.workspaceProperties}}inspect(inspector){try{jsiiDeprecationWarnings.aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnWorkspace.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnWorkspacePropsToCloudFormation(props)}}exports.CfnWorkspace=CfnWorkspace,_b=JSII_RTTI_SYMBOL_1,CfnWorkspace[_b]={fqn:"aws-cdk-lib.aws_workspaces.CfnWorkspace",version:"2.94.0"},CfnWorkspace.CFN_RESOURCE_TYPE_NAME="AWS::WorkSpaces::Workspace";function CfnWorkspaceWorkspacePropertiesPropertyValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("computeTypeName",cdk.validateString)(properties.computeTypeName)),errors.collect(cdk.propertyValidator("rootVolumeSizeGib",cdk.validateNumber)(properties.rootVolumeSizeGib)),errors.collect(cdk.propertyValidator("runningMode",cdk.validateString)(properties.runningMode)),errors.collect(cdk.propertyValidator("runningModeAutoStopTimeoutInMinutes",cdk.validateNumber)(properties.runningModeAutoStopTimeoutInMinutes)),errors.collect(cdk.propertyValidator("userVolumeSizeGib",cdk.validateNumber)(properties.userVolumeSizeGib)),errors.wrap('supplied properties not correct for "WorkspacePropertiesProperty"')}function convertCfnWorkspaceWorkspacePropertiesPropertyToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspaceWorkspacePropertiesPropertyValidator(properties).assertSuccess(),{ComputeTypeName:cdk.stringToCloudFormation(properties.computeTypeName),RootVolumeSizeGib:cdk.numberToCloudFormation(properties.rootVolumeSizeGib),RunningMode:cdk.stringToCloudFormation(properties.runningMode),RunningModeAutoStopTimeoutInMinutes:cdk.numberToCloudFormation(properties.runningModeAutoStopTimeoutInMinutes),UserVolumeSizeGib:cdk.numberToCloudFormation(properties.userVolumeSizeGib)}):properties}function CfnWorkspaceWorkspacePropertiesPropertyFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("computeTypeName","ComputeTypeName",properties.ComputeTypeName!=null?cfn_parse.FromCloudFormation.getString(properties.ComputeTypeName):void 0),ret.addPropertyResult("rootVolumeSizeGib","RootVolumeSizeGib",properties.RootVolumeSizeGib!=null?cfn_parse.FromCloudFormation.getNumber(properties.RootVolumeSizeGib):void 0),ret.addPropertyResult("runningMode","RunningMode",properties.RunningMode!=null?cfn_parse.FromCloudFormation.getString(properties.RunningMode):void 0),ret.addPropertyResult("runningModeAutoStopTimeoutInMinutes","RunningModeAutoStopTimeoutInMinutes",properties.RunningModeAutoStopTimeoutInMinutes!=null?cfn_parse.FromCloudFormation.getNumber(properties.RunningModeAutoStopTimeoutInMinutes):void 0),ret.addPropertyResult("userVolumeSizeGib","UserVolumeSizeGib",properties.UserVolumeSizeGib!=null?cfn_parse.FromCloudFormation.getNumber(properties.UserVolumeSizeGib):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnWorkspacePropsValidator(properties){if(!cdk.canInspect(properties))return cdk.VALIDATION_SUCCESS;const errors=new cdk.ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new cdk.ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk.propertyValidator("bundleId",cdk.requiredValidator)(properties.bundleId)),errors.collect(cdk.propertyValidator("bundleId",cdk.validateString)(properties.bundleId)),errors.collect(cdk.propertyValidator("directoryId",cdk.requiredValidator)(properties.directoryId)),errors.collect(cdk.propertyValidator("directoryId",cdk.validateString)(properties.directoryId)),errors.collect(cdk.propertyValidator("rootVolumeEncryptionEnabled",cdk.validateBoolean)(properties.rootVolumeEncryptionEnabled)),errors.collect(cdk.propertyValidator("tags",cdk.listValidator(cdk.validateCfnTag))(properties.tags)),errors.collect(cdk.propertyValidator("userName",cdk.requiredValidator)(properties.userName)),errors.collect(cdk.propertyValidator("userName",cdk.validateString)(properties.userName)),errors.collect(cdk.propertyValidator("userVolumeEncryptionEnabled",cdk.validateBoolean)(properties.userVolumeEncryptionEnabled)),errors.collect(cdk.propertyValidator("volumeEncryptionKey",cdk.validateString)(properties.volumeEncryptionKey)),errors.collect(cdk.propertyValidator("workspaceProperties",CfnWorkspaceWorkspacePropertiesPropertyValidator)(properties.workspaceProperties)),errors.wrap('supplied properties not correct for "CfnWorkspaceProps"')}function convertCfnWorkspacePropsToCloudFormation(properties){return cdk.canInspect(properties)?(CfnWorkspacePropsValidator(properties).assertSuccess(),{BundleId:cdk.stringToCloudFormation(properties.bundleId),DirectoryId:cdk.stringToCloudFormation(properties.directoryId),RootVolumeEncryptionEnabled:cdk.booleanToCloudFormation(properties.rootVolumeEncryptionEnabled),Tags:cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),UserName:cdk.stringToCloudFormation(properties.userName),UserVolumeEncryptionEnabled:cdk.booleanToCloudFormation(properties.userVolumeEncryptionEnabled),VolumeEncryptionKey:cdk.stringToCloudFormation(properties.volumeEncryptionKey),WorkspaceProperties:convertCfnWorkspaceWorkspacePropertiesPropertyToCloudFormation(properties.workspaceProperties)}):properties}function CfnWorkspacePropsFromCloudFormation(properties){if(cdk.isResolvableObject(properties))return new cfn_parse.FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new cfn_parse.FromCloudFormationResult(properties);const ret=new cfn_parse.FromCloudFormationPropertyObject;return ret.addPropertyResult("bundleId","BundleId",properties.BundleId!=null?cfn_parse.FromCloudFormation.getString(properties.BundleId):void 0),ret.addPropertyResult("directoryId","DirectoryId",properties.DirectoryId!=null?cfn_parse.FromCloudFormation.getString(properties.DirectoryId):void 0),ret.addPropertyResult("rootVolumeEncryptionEnabled","RootVolumeEncryptionEnabled",properties.RootVolumeEncryptionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.RootVolumeEncryptionEnabled):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("userName","UserName",properties.UserName!=null?cfn_parse.FromCloudFormation.getString(properties.UserName):void 0),ret.addPropertyResult("userVolumeEncryptionEnabled","UserVolumeEncryptionEnabled",properties.UserVolumeEncryptionEnabled!=null?cfn_parse.FromCloudFormation.getBoolean(properties.UserVolumeEncryptionEnabled):void 0),ret.addPropertyResult("volumeEncryptionKey","VolumeEncryptionKey",properties.VolumeEncryptionKey!=null?cfn_parse.FromCloudFormation.getString(properties.VolumeEncryptionKey):void 0),ret.addPropertyResult("workspaceProperties","WorkspaceProperties",properties.WorkspaceProperties!=null?CfnWorkspaceWorkspacePropertiesPropertyFromCloudFormation(properties.WorkspaceProperties):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
