"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable import/order */
const util_1 = require("../../lib/util");
test('flatten combines arrays', () => {
    const output = (0, util_1.flatten)([
        ['a', 'b'],
        [],
        ['c'],
    ]);
    expect(output).toEqual(['a', 'b', 'c']);
});
test('flatMap maps and combines', () => {
    const input = ['A', 'B', 'C'];
    const output = (0, util_1.flatMap)(input, x => [x.toLowerCase()]);
    expect(output).toEqual(['a', 'b', 'c']);
});
test('partition splits the collection in twain', () => {
    const xs = [1, 2, 3, 4, 5];
    const evens = (0, util_1.partition)(xs, x => x % 2 === 0);
    expect(evens).toEqual([2, 4]);
    expect(xs).toEqual([1, 3, 5]);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJyYXlzLnRlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJhcnJheXMudGVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLGlDQUFpQztBQUNqQyx5Q0FBNkQ7QUFFN0QsSUFBSSxDQUFDLHlCQUF5QixFQUFFLEdBQUcsRUFBRTtJQUNuQyxNQUFNLE1BQU0sR0FBRyxJQUFBLGNBQU8sRUFBQztRQUNyQixDQUFDLEdBQUcsRUFBRSxHQUFHLENBQUM7UUFDVixFQUFFO1FBQ0YsQ0FBQyxHQUFHLENBQUM7S0FDTixDQUFDLENBQUM7SUFFSCxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQzFDLENBQUMsQ0FBQyxDQUFDO0FBRUgsSUFBSSxDQUFDLDJCQUEyQixFQUFFLEdBQUcsRUFBRTtJQUNyQyxNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUM7SUFDOUIsTUFBTSxNQUFNLEdBQUcsSUFBQSxjQUFPLEVBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBRXRELE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUM7QUFDMUMsQ0FBQyxDQUFDLENBQUM7QUFFSCxJQUFJLENBQUMsMENBQTBDLEVBQUUsR0FBRyxFQUFFO0lBQ3BELE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQzNCLE1BQU0sS0FBSyxHQUFHLElBQUEsZ0JBQVMsRUFBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBRTlDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM5QixNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ2hDLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgaW1wb3J0L29yZGVyICovXG5pbXBvcnQgeyBmbGF0TWFwLCBmbGF0dGVuLCBwYXJ0aXRpb24gfSBmcm9tICcuLi8uLi9saWIvdXRpbCc7XG5cbnRlc3QoJ2ZsYXR0ZW4gY29tYmluZXMgYXJyYXlzJywgKCkgPT4ge1xuICBjb25zdCBvdXRwdXQgPSBmbGF0dGVuKFtcbiAgICBbJ2EnLCAnYiddLFxuICAgIFtdLFxuICAgIFsnYyddLFxuICBdKTtcblxuICBleHBlY3Qob3V0cHV0KS50b0VxdWFsKFsnYScsICdiJywgJ2MnXSk7XG59KTtcblxudGVzdCgnZmxhdE1hcCBtYXBzIGFuZCBjb21iaW5lcycsICgpID0+IHtcbiAgY29uc3QgaW5wdXQgPSBbJ0EnLCAnQicsICdDJ107XG4gIGNvbnN0IG91dHB1dCA9IGZsYXRNYXAoaW5wdXQsIHggPT4gW3gudG9Mb3dlckNhc2UoKV0pO1xuXG4gIGV4cGVjdChvdXRwdXQpLnRvRXF1YWwoWydhJywgJ2InLCAnYyddKTtcbn0pO1xuXG50ZXN0KCdwYXJ0aXRpb24gc3BsaXRzIHRoZSBjb2xsZWN0aW9uIGluIHR3YWluJywgKCkgPT4ge1xuICBjb25zdCB4cyA9IFsxLCAyLCAzLCA0LCA1XTtcbiAgY29uc3QgZXZlbnMgPSBwYXJ0aXRpb24oeHMsIHggPT4geCAlIDIgPT09IDApO1xuXG4gIGV4cGVjdChldmVucykudG9FcXVhbChbMiwgNF0pO1xuICBleHBlY3QoeHMpLnRvRXF1YWwoWzEsIDMsIDVdKTtcbn0pO1xuIl19